{
  ".source.sqf": {
    "If Then statement": {
      "prefix": "if_then",
      "body": "if (${1:CONDITION}) then {\n    ${2://code}\n};",
      "description": "Conditional if statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/if"
    },
    "If Then Else statement": {
      "prefix": "if_then_else",
      "body": "if (${1:CONDITION}) then {\n    ${2://code}\n} else {\n    ${3://code}\n};",
      "description": "Conditional if-else statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/else"
    },
    "If Then Else assignment": {
      "prefix": "if_then_else_assign",
      "body": "${1:VARIABLE} = if (${2:CONDITION}) then {${3:ASSIGNMENT_TRUE}} else {${4:ASSIGNMENT_FALSE}};",
      "description": "Conditional if-else assignment"
    },
    "Switch statement": {
      "prefix": "switch",
      "body": "switch (${1:VARIABLE}) do {\n    ${2://cases (insertable by snippet)}\n};",
      "description": "Conditional switch statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/switch_do"
    },
    "Case block of Switch": {
      "prefix": "case_switch",
      "body": "case (${1:VALUE}): {\n    ${2://code}\n};",
      "description": "Case block inside switch statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/case"
    },
    "Default block of Switch": {
      "prefix": "default_switch",
      "body": "default {\n    ${1://code}\n};",
      "description": "Default block inside switch statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/default"
    },
    "If ExitWith statement": {
      "prefix": "if_exitWith",
      "body": "if (${1:CONDITION}) exitWith {\n    ${2://code}\n};",
      "description": "Conditional if-exitWith statement",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/exitWith"
    },

    "ForEach Loop": {
      "prefix": "forEach",
      "body": "{\n    ${2://code}\n} forEach ${1:ARRAY};",
      "description": "Array incrementing loop",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/forEach"
    },
    "For Loop (ARRAY)": {
      "prefix": "for_array",
      "body": "for [{${1:BEGIN}}, {${2:CONDITION}}, {${3:STEP}}] do {\n    ${4://code}\n};",
      "description": "C-like for loop",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/for_forspec"
    },
    "For Loop (VAR)": {
      "prefix": "for_var",
      "body": "for ${1:VALUE} from ${2:STARTVALUE} to ${3:ENDVALUE} do {\n    ${4://code}\n};",
      "description": "Loop from value to value",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/for_var"
    },
    "For Loop Step (VAR)": {
      "prefix": "for_var_step",
      "body": "for ${1:VALUE} from ${2:STARTVALUE} to ${3:ENDVALUE} step ${4:STEP} do {\n    ${5://code}\n};",
      "description": "Loop from value to value with custom step",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/for_var"
    },
    "While Loop": {
      "prefix": "while",
      "body": "while {${1:CONDITION}} do {\n    ${2://code}\n};",
      "description": "Loop while condition is true",
      "descriptionMoreURL": "https://community.bistudio.com/wiki/while"
    },


    "CBA addPerFrameHandler": {
      "prefix": "addPerFrameHandler_cba",
      "body": "[${1:FUNCTION/CODE}, ${2:DELAY}, [${3:PARAMETERS}]] call CBA_fnc_addPerFrameHandler;",
      "description": "Add a per-frame handler, return ID",
      "descriptionMoreURL": "https://dev.withsix.com/docs/cba/files/common/fnc_addPerFrameHandler-sqf.html"
    },


    "ACE3 Function Header": {
      "prefix": "header_function_ace",
      "body": "/*\n * Author: ${1:[Name of Author(s)]}\n * ${2:[Description]}\n *\n * Arguments:\n * 0: ${3:Argument Name} <${4:TYPE}>\n *\n * Return Value:\n * ${5:Return Name} <${6:TYPE}>\n *\n * Example:\n * [${7:\"example\"}] call ace_${8:[module]}_fnc_${9:[functionName]}\n *\n * Public: ${10:[Yes/No]}\n */",
      "description": "Function Header per ACE3 guidelines.",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#3-1-function-definitions"
    },

    "ACE3 addEventHandler": {
      "prefix": "addEventHandler_ace",
      "body": "[\"${1:EVENT_NAME}\", ${2:CODE}] call EFUNC(common,addEventhandler);",
      "description": "Add an event handler, return ID",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 removeEventHandler": {
      "prefix": "removeEventHandler_ace",
      "body": "[\"${1:EVENT_NAME}\", ${2:ID}] call EFUNC(common,removeEventHandler);",
      "description": "Remove an event handler using the ID",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 removeAllEventHandlers": {
      "prefix": "removeAllEventHandlers_ace",
      "body": "[\"${1:EVENT_NAME}\"] call EFUNC(common,removeAllEventHandlers);",
      "description": "Remove all event handlers of given type",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 Local Event": {
      "prefix": "localEvent_ace",
      "body": "[\"${1:EVENT_NAME}\", [${2:PARAMETERS}]] call EFUNC(common,localEvent);",
      "description": "Call an event on the local machine",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 Server Event": {
      "prefix": "serverEvent_ace",
      "body": "[\"${1:Event name}\", [${2:PARAMETERS}]] call EFUNC(common,serverEvent);",
      "description": "Call an event on server machine",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 Global Event": {
      "prefix": "globalEvent_ace",
      "body": "[\"${1:EVENT_NAME}\", [${2:PARAMETERS}]] call EFUNC(common,globalEvent);",
      "description": "Call an event on all machines",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 Target Event": {
      "prefix": "targetEvent_ace",
      "body": "[\"${1:EVENT_NAME}\", ${2:TARGET(S)}, [${3:PARAMETERS}]] call EFUNC(common,targetEvent);",
      "description": "Call an event targeted (list of) object(s)",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html"
    },
    "ACE3 addSyncedEventHandler": {
      "prefix": "addSyncedEventHandler_ace",
      "body": "[\"${1:EVENT_NAME}\", ${2:CODE}, ${2:TTL_NUMBER_OR_CODE}] call EFUNC(common,addSyncedEventHandler);",
      "description": "Add a synchronized event handler",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html#1-1-synchronized-events"
    },
    "ACE3 removeSyncedEventHandler": {
      "prefix": "removeSyncedEventHandler_ace",
      "body": "[\"${1:EVENT_NAME}\", ${2:ID}] call EFUNC(common,removeSyncedEventHandler);",
      "description": "Remove a synchronized event handler using the ID",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html#1-1-synchronized-events"
    },
    "ACE3 syncedEvent": {
      "prefix": "syncedEvent_ace",
      "body": "[\"${1:EVENT_NAME}\", [${2:PARAMETERS}], ${3:TTL_NUMBER_OR_CODE}] call EFUNC(common,syncedEvent);",
      "description": "Call a synchronized event (including JIP)",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/ace3-events-system.html#1-1-synchronized-events"
    }
  },


  ".source.cpp, .source.hpp": {
    "ACE3 Settings Entry": {
      "prefix": "settings_entry_ace",
      "body": "class GVAR(${1:name}) {\n    displayName = CSTRING(${2:stringDisplayName});\n    description = CSTRING(${3:stringDescription});\n    category = CSTRING(${4:category});\n    isClientSettable = ${5:[0/1]};\n    typeName = \"${6:[BOOL/SCALAR/STRING/ARRAY/COLOR]}\";\n    value = ${7:[NUMBER]};\n};",
      "description": "ACE_Settings Entry (without SCALAR values)",
      "descriptionMoreURL": "http://ace3mod.com/wiki/framework/settings.html"
    }
  },


  ".source.sqf, .source.cpp, .source.hpp": {
    "GVAR": {
      "prefix": "GVAR",
      "body": "GVAR(${1:variable})",
      "description": "Expands to: prefix_component_variable",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "QGVAR": {
      "prefix": "QGVAR",
      "body": "QGVAR(${1:variable})",
      "description": "Expands to: \"prefix_component_variable\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "EGVAR": {
      "prefix": "EGVAR",
      "body": "EGVAR(${1:component},${2:variable})",
      "description": "Expands to: prefix_component_variable",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "QEGVAR": {
      "prefix": "QEGVAR",
      "body": "QEGVAR(${1:component},${2:variable})",
      "description": "Expands to: \"prefix_component_variable\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "FUNC": {
      "prefix": "FUNC",
      "body": "FUNC(${1:functionName})",
      "description": "Expands to: prefix_component_fnc_functionName",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "EFUNC": {
      "prefix": "EFUNC",
      "body": "EFUNC(${1:component},${2:functionName})",
      "description": "Expands to: prefix_component_fnc_functionName",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "DFUNC": {
      "prefix": "DFUNC",
      "body": "DFUNC(${1:functionName})",
      "description": "Expands to: prefix_component_fnc_functionName",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "DEFUNC": {
      "prefix": "DEFUNC",
      "body": "DEFUNC(${1:component},${2:functionName})",
      "description": "Expands to: prefix_component_fnc_functionName",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "QFUNC": {
      "prefix": "QFUNC",
      "body": "QFUNC(${1:functionName})",
      "description": "Expands to: \"prefix_component_fnc_functionName\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "QEFUNC": {
      "prefix": "QEFUNC",
      "body": "QEFUNC(${1:component},${2:functionName})",
      "description": "Expands to: \"prefix_component_fnc_functionName\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "QUOTE": {
      "prefix": "QUOTE",
      "body": "QUOTE(${1:content})",
      "description": "Expands to: \"content\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "LSTRING": {
      "prefix": "LSTRING",
      "body": "LSTRING(${1:string})",
      "description": "Expands to: \"STR_prefix_component_fnc_string\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "ELSTRING": {
      "prefix": "ELSTRING",
      "body": "ELSTRING(${1:component},${2:string})",
      "description": "Expands to: \"STR_prefix_component_fnc_string\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "CSTRING": {
      "prefix": "CSTRING",
      "body": "CSTRING(${1:string})",
      "description": "Expands to: \"$STR_prefix_component_fnc_string\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    },
    "ECSTRING": {
      "prefix": "ECSTRING",
      "body": "ELSTRING(${1:component},${2:string})",
      "description": "Expands to: \"$STR_prefix_component_fnc_string\"",
      "descriptionMoreURL": "http://ace3mod.com/wiki/development/coding-guidelines.html#4-macro-usage"
    }
  }
}
