{
  ".source.sqf": {
    "autocomplete": {
      "symbols": {
        "builtin": {
          "suggestions": [
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%21%20a",
              "description": "Returns a negation of Boolean expression. That means true becomes false and vice versa.",
              "snippet": "! ${1:a}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = numberA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%2B",
              "description": "Add two numbers, concatenate two arrays or two strings, or duplicate an array. For arrays also see pushBack and append. \n\n\u26a0Array copy methods ARRAY + [] and +ARRAY have different behaviours:\nARRAY + [] creates copy of the 1st dimension, but preserves references in other dimensions (shallow copy).\n+ARRAY clones every element, so if the array is multi-dimensional, the created copy contains no references (deep copy).\nSee Example 6.",
              "snippet": "+ ${2:numberB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%2B",
              "description": "Add two numbers, concatenate two arrays or two strings, or duplicate an array. For arrays also see pushBack and append. \n\n\u26a0Array copy methods ARRAY + [] and +ARRAY have different behaviours:\nARRAY + [] creates copy of the 1st dimension, but preserves references in other dimensions (shallow copy).\n+ARRAY clones every element, so if the array is multi-dimensional, the created copy contains no references (deep copy).\nSee Example 6.",
              "snippet": "+ ${1:numberA}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = arrayA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%2B",
              "description": "Add two numbers, concatenate two arrays or two strings, or duplicate an array. For arrays also see pushBack and append. \n\n\u26a0Array copy methods ARRAY + [] and +ARRAY have different behaviours:\nARRAY + [] creates copy of the 1st dimension, but preserves references in other dimensions (shallow copy).\n+ARRAY clones every element, so if the array is multi-dimensional, the created copy contains no references (deep copy).\nSee Example 6.",
              "snippet": "+ ${2:arrayB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = stringA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%2B",
              "description": "Add two numbers, concatenate two arrays or two strings, or duplicate an array. For arrays also see pushBack and append. \n\n\u26a0Array copy methods ARRAY + [] and +ARRAY have different behaviours:\nARRAY + [] creates copy of the 1st dimension, but preserves references in other dimensions (shallow copy).\n+ARRAY clones every element, so if the array is multi-dimensional, the created copy contains no references (deep copy).\nSee Example 6.",
              "snippet": "+ ${2:stringB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%2B",
              "description": "Add two numbers, concatenate two arrays or two strings, or duplicate an array. For arrays also see pushBack and append. \n\n\u26a0Array copy methods ARRAY + [] and +ARRAY have different behaviours:\nARRAY + [] creates copy of the 1st dimension, but preserves references in other dimensions (shallow copy).\n+ARRAY clones every element, so if the array is multi-dimensional, the created copy contains no references (deep copy).\nSee Example 6.",
              "snippet": "+ ${1:arrayA}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = numberA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/-",
              "description": "Subtracts numbers or arrays from each another, negates a number. For arrays also see deleteAt and deleteRange. \nIn Arma 3 it is possible to subtract nested arrays.",
              "snippet": "- ${2:numberB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/-",
              "description": "Subtracts numbers or arrays from each another, negates a number. For arrays also see deleteAt and deleteRange. \nIn Arma 3 it is possible to subtract nested arrays.",
              "snippet": "- ${1:numberA}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = arrayA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/-",
              "description": "Subtracts numbers or arrays from each another, negates a number. For arrays also see deleteAt and deleteRange. \nIn Arma 3 it is possible to subtract nested arrays.",
              "snippet": "- ${2:arrayB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%21%3D%20b",
              "description": "Returns whether one value is not equal to another. String comparison is case-insensitive (e.g \"STRINGtext\" != \"stringTEXT\" //\u00a0returns false).\n\u24d8Before Arma 3 v1.99.146526 one was not able to compare Booleans: alive player != true //\u00a0would throw an error",
              "snippet": "!= ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%25%20b",
              "description": "Remainder of a divided by b.",
              "snippet": "% ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = booleanA ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%26%26%20b",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).\n\n\u24d8This command is identical to the and command.",
              "snippet": "&& ${2:booleanB}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = boolean ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%26%26%20b",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).\n\n\u24d8This command is identical to the and command.",
              "snippet": "&& ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%2A%20b",
              "description": "Returns the value of a multiplied by b.",
              "snippet": "* ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20/%20b",
              "description": "Scalar division operator. Division by 0 throws \"Division by zero\" error, however script doesn't stop and the result of such division is assumed to be 0. Do not confuse with config / name operator",
              "snippet": "/ ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%3A%20b",
              "description": "See switch do",
              "snippet": ": ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%3D%3D%20b",
              "description": "Check if argument a is equal to argument b.\nBoth arguments need to be of the same type.\n\u24d8Please note that String comparison is case-insensitive.\nIf you need case-sensitive comparison, use isEqualTo.",
              "snippet": "== ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20greater%20b",
              "description": "Returns true if a is greater than b, else returns false.",
              "snippet": "> ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20greater%3D%20b",
              "description": "Returns true if a is greater than or equal to b, else returns false.",
              "snippet": ">= ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20hash%20b",
              "description": "Selects an element from an  array, same as select command for arrays, but has  higher precedence",
              "text": "array"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20less%20b",
              "description": "Returns true if a is less than b, else returns false.",
              "snippet": "< ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20less%3D%20b",
              "description": "Returns true if a is less than or equal to b, else returns false.",
              "snippet": "<= ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20or%20b",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a or b",
              "snippet": "|| ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20or%20b",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a or b",
              "text": "a"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%5E%20b",
              "description": "a raised to the power of b",
              "snippet": "^ ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = config ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/config%20/%20name",
              "description": "Returns  config entry with given name (alias for config >> name, slightly slower but with  higher precedence). Do not confuse with division operator /",
              "snippet": "/ ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = config ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/config%20greater%20greater%20name",
              "description": "Returns  config entry with given name (alias of config / name, slightly faster but with  lower precedence)",
              "snippet": ">> ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/abs",
              "description": "Absolute value of a real number",
              "snippet": "abs ${1:n}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/accTime",
              "description": "Returns the current time acceleration factor",
              "text": "accTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/acos",
              "description": "ArcCosine of a number, result in Degrees",
              "snippet": "acos ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/action",
              "description": "Make a unit perform an action. See Category:Actions for action names and syntaxes.\n\n\u26a0The argument's locality is usually local, but some actions can take a global argument (e.g \"Eject\", \"GetOut\", \"GetInXXXX\", \"MoveToXXXX\"). See Category:Actions for more details.\n\u24d8In Singleplayer, when user Alt-Tabs the simulation is paused and so the action will also halt until user returns to the game. For example, player action [\"GetInDriver\", car]; executed while user is Alt-Tabbed will result in the user seeing the action happening when he returns to the game screen. This doesn't happen in Multiplayer.",
              "snippet": "action ${2:actionArray}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionIDs",
              "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.",
              "snippet": "actionIDs ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeys",
              "description": "Returns Array containing dikCodes of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or user action names or user profile, for example:\nkeyWatch[]={24};\n\nTo retrieve the value, use the property name without 'key':\nactionKeys \"Watch\"; // 24\nIn addition, some of the actions are also listed in here: inputAction/actions",
              "snippet": "actionKeys ${1:userAction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysImages",
              "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysImages ${1:userAction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysImages",
              "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysImages ${1:[${2:userAction}, ${3:maxKeys}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysNames ${1:userAction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysNames ${1:[${2:userAction}, ${3:maxKeys}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "text": "actionKeysNames"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysNamesArray ${1:userAction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "snippet": "actionKeysNamesArray ${1:[${2:${5:userAction}}, ${3:maxKeys}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "text": "actionKeysNamesArray"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionName",
              "description": "Returns localized name of action.",
              "snippet": "actionName ${1:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Nothing) = entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionParams",
              "description": "Returns Array with params for given user action id (similar to addAction param array). The output array is of the following format: \n[title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection, memoryPoint],  where:\ntitle: String - action title text\nscript: String - script file or script expression assigned to the action\narguments: Anything or nil - arguments passed to the action\npriority: Number - action priority on the action menu\nshowWindow: Boolean - whether the action is shown in the center of the screen too\nhideOnUse: Boolean - whether the action menu should close after selecting the action\nshortcut: String - action bindings to some existing engine action if any\ncondition: String - expression returning true or nil for action to appear on the action menu\nradius: Number - max distance to entity at which action becomes available. -1 means it is engine default (~15m)\nunconscious: Boolean - whether the action is available to unconscious person\ntextWindowBackground: String - same as textWindowBackground in setUserActionText\ntextWindowForeground: String - same as textWindowForeground in setUserActionText\nselection: String - named selection in Geometry LOD to which the action is attached\nmemoryPoint: String - memory point on the object to which the action is attached\n\nSince Arma 3 v1.93.145625 if object is null or the action doesn't exist, default array of params is returned:\n[\"\",\"\",<null>,1.5,true,true,\"\",\"\",50,false,\"\",\"\",\"\",\"\"]",
              "snippet": "actionParams ${2:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activateAddons",
              "description": "Activates the listed addons. The list of active addons is initialized during this function.",
              "snippet": "activateAddons ${1:[addon1, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activatedAddons",
              "description": "Returns a list of all activated addons.",
              "text": "activatedAddons"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activateKey",
              "description": "Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "snippet": "activateKey ${1:keyname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENConnection",
              "description": "Connect entities together.",
              "snippet": "add3DENConnection [${1:type}, ${2:from}, ${3:to}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENEventHandler",
              "description": "Add code to be run when a Eden Editor event is triggered.\n\nSee the list of all Eden Editor Event Handlers.",
              "snippet": "add3DENEventHandler [${1:type},${2:code}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = parentLayerID ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENLayer",
              "description": "Add an editing layer in Eden Editor.",
              "snippet": "add3DENLayer ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addAction",
              "description": "This command syntax is for Arma 3 only. For TKOH and older Arma games see addAction TKOH.\nAdds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (default 50m) and look at it. Adding an action to the player makes that action available to the player at all times.\nThe appearance of onscreen text can be further tweaked with setUserActionText. For event handling of user interaction see inGameUISetEventHandler.\n\n\u24d8addAction does not work on agents (including animals) and simple objects, this is intended behavior.",
              "snippet": "addAction [${2:title}, ${3:script}, ${8:arguments}, ${9:priority}, ${10:showWindow}, ${11:hideOnUse}, ${12:shortcut}, ${13:condition}, ${17:radius}, ${18:unconscious}, ${19:selection}, ${20:memoryPoint}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addAction%20TKOH",
              "description": "Adds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (default 50m). Adding an action to the player obviously makes that action available to the player at all times.\n\nNOTE: addAction will be ignored on dedicated server, probably because no UI exists.\nThis version of the command goes from Operation Flashpoint to Take On Helicopters. For the Arma 3 version, see addAction.",
              "snippet": "addAction [${2:title}, ${3:script}, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpack",
              "description": "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit.\n\u24d8Classname list of available backpacks:\nArma 2 OA backpacks\nArma 3 backpacks - objects starting with \"B_\", starts with \"B_AssaultPack_khk\"",
              "text": "unit"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackCargo",
              "description": "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here.\nIn Arma 3, arguments for this command are local (). For global variant see addBackpackCargoGlobal",
              "snippet": "addBackpackCargo ${2:[${3:backpackClassName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackCargoGlobal",
              "description": "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here",
              "snippet": "addBackpackCargoGlobal [${2:packClassName}, ${3:count}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackGlobal",
              "description": "Adds a backpack to a unit (even non-local).\n\u26a0Beware, the backpack added with this command will be created on the PC local to the unit you are adding it to, even if executed on the server. Because of this, if non-local unit is the target and one tries to immediately access added backpack, the backpack returned will be  Null. When adding backpack dynamically to a remote unit, wait until backpack is added (See Example 2)",
              "snippet": "addBackpackGlobal ${2:backpack}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBinocularItem",
              "description": "Adds weapon item, including magazine, directly to the binocular weapon. This is used for infantry weapons.",
              "snippet": "addBinocularItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCamShake",
              "description": "Creates the camera shaking effect, like when you are near an explosion",
              "snippet": "addCamShake [${1:power}, ${2:duration}, ${3:frequency}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorAddons",
              "description": "Allow curator use of given addon.",
              "snippet": "addCuratorAddons ${2:addons}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorCameraArea",
              "description": "Adds or changes curator camera area (depends on if ID is already used).",
              "snippet": "addCuratorCameraArea ${1:[${3:cameraAreaID},${4:position},${5:radius}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorEditableObjects",
              "description": "Register objects which can be edited by a curator.",
              "snippet": "addCuratorEditableObjects ${1:[${3:objects},${4:addCrew}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorEditingArea",
              "description": "Adds or changes curator edit area (depends on if ID is already used).",
              "snippet": "addCuratorEditingArea ${1:[${3:editAreaID},${4:position},${5:radius}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorPoints",
              "description": "Adds or removes curator points. Points can be only in range from 0 to 1.",
              "snippet": "addCuratorPoints ${2:points}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addEditorObject",
              "description": "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional. \n\u24d8Some Old Editor Command",
              "snippet": "addEditorObject ${2:[type,[name1,value1,...],subtype class]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addEventHandler",
              "description": "Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.For more information about event handlers and their types check the scripting topic Event handlers in this reference. You may add as many event handlers of any type as you like to every unit. For instance, if you add an event handler of type \"killed\" and one already exists, the old one doesn't get overwritten. Use removeEventHandler to delete event handlers.",
              "snippet": "addEventHandler ${2:[${3:type}, ${4:command}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addForce",
              "description": "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space. If you need to define force in model space, use vectorModelToWorld or vectorModelToWorldVisual commands first. The force applied as impulse. For more information see NVIDIA docs",
              "snippet": "addForce ${2:[${3:force}, ${4:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addGoggles",
              "description": "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter.",
              "snippet": "addGoggles ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addGroupIcon",
              "description": "Adds icon to a group leader. Returns icon ID, Control icons visibility with setGroupIconsVisible.",
              "snippet": "addGroupIcon [${2:iconClass}, ${3:offset}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addHandgunItem",
              "description": "Adds weapon item, including magazine, directly to the handgunWeapon. This is used for infantry weapons.",
              "snippet": "addHandgunItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addHeadgear",
              "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.",
              "snippet": "addHeadgear ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItem",
              "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.",
              "snippet": "addItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "box ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemCargo",
              "description": "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see addItemCargoGlobal",
              "snippet": "addItemCargo ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "box ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemCargoGlobal",
              "description": "Creates new items and stores them in the given container. Works with items, weapons and magazines.",
              "snippet": "addItemCargoGlobal ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemPool",
              "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)",
              "snippet": "addItemPool ${1:[${2:itemName}, ${3:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToBackpack",
              "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.",
              "snippet": "addItemToBackpack ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToUniform",
              "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.",
              "snippet": "addItemToUniform ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToVest",
              "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.",
              "snippet": "addItemToVest ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addLiveStats",
              "description": "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)",
              "snippet": "addLiveStats ${2:score}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazine",
              "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma 3), any further addMagazine commands are ignored. If class of magazine does not exist, an error message is printed in .rpt:\nplayer addMagazine \"dasdsa\"; //\u00a0.rpt: Given magazine[dasdsa] not found)\n\u24d8Use addMagazine before addWeapon for the weapon to be loaded with magazine automatically.",
              "snippet": "addMagazine ${2:magazineName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazine",
              "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma 3), any further addMagazine commands are ignored. If class of magazine does not exist, an error message is printed in .rpt:\nplayer addMagazine \"dasdsa\"; //\u00a0.rpt: Given magazine[dasdsa] not found)\n\u24d8Use addMagazine before addWeapon for the weapon to be loaded with magazine automatically.",
              "snippet": "addMagazine [${2:magazineName}, ${3:ammoCount}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "cargospace ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineAmmoCargo",
              "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.",
              "snippet": "addMagazineAmmoCargo ${2:[${3:magazine}, ${4:quantity}, ${5:ammocount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineCargo",
              "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.\nIn Arma 3, arguments for this command must be local (). For global variant see addMagazineCargoGlobal.",
              "snippet": "addMagazineCargo ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineCargoGlobal",
              "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units.\n\nMP Synchronized",
              "snippet": "addMagazineCargoGlobal ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineGlobal",
              "description": "Adds magazine to a unit regardless of locality. This command can also be used to add magazine to a vehicle, like a static gun, for example.  \n\n\u26a0This command is broken in MP as it dupes inventory items. Use addMagazine <array> for now, it takes global argument and has global effect too.",
              "snippet": "addMagazineGlobal ${2:magazineName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazinePool",
              "description": "Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.",
              "snippet": "addMagazinePool ${1:[${2:magazineName}, ${3:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazines",
              "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.",
              "snippet": "addMagazines ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineTurret",
              "description": "Adds a magazine to the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3  v1.55.133817 it is possible to set custom ammo count in added magazine.",
              "snippet": "addMagazineTurret [${3:magazineName}, ${4:turretPath}, ${5:ammoCount}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMenu",
              "description": "Adds a new menu button. Priority is optional.\n\u24d8Some Old Editor Command",
              "snippet": "addMenu ${2:[text,priority]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMenuItem",
              "description": "Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first). \n\u24d8Some Old Editor Command",
              "snippet": "addMenuItem ${2:[menu or index,text,command,priority]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMissionEventHandler",
              "description": "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.For the list of available mission event handlers see: Arma_3:_Event_Handlers/addMissionEventHandler",
              "snippet": "addMissionEventHandler ${1:[${2:type}, ${3:command}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMPEventHandler",
              "description": "Adds MP event handler (EH) to the given object and returns EH handle.\nMP event handlers are added globally to every client on network in multiplayer and will fire on every client too upon event.\nIf EH has some data to return upon event (e.g. the \"MPKilled\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable.\n\nSince Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.\n\u24d8For more information, see Event Handlers/addMPEventHandler.",
              "snippet": "addMPEventHandler [${2:type}, ${3:expression}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMusicEventHandler",
              "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Just like addMissionEventHandler, music EH is also attached to the mission.",
              "snippet": "addMusicEventHandler ${1:[${2:type}, ${3:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addonFiles",
              "description": "Returns a list of files present in the addon.\n\u24d8Querying protected .ebo addons returns empty array [].",
              "snippet": "addonFiles [${1:pboPrefix}, ${2:fileExtension}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addOwnedMine",
              "description": "Sets ownership over a remotely detonatable mine to the unit.",
              "snippet": "addOwnedMine ${2:mine}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPlayerScores",
              "description": "MP server only: Adds player score.",
              "snippet": "addPlayerScores ${2:values}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPrimaryWeaponItem",
              "description": "Adds weapon item, including magazine, directly to the primaryWeapon. This is used for infantry weapons.",
              "snippet": "addPrimaryWeaponItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "varName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPublicVariableEventHandler",
              "description": "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:\n\n_this select 0: String - broadcast variable name (same variable name EH is attached to)\n_this select 1: Anything - broadcast variable value \n_this select 2: Object, Group - target the variable got set on with setVariable  (see: alternative syntax)\n\n\u24d8\nThis EH works only in Multiplayer environment\nThis EH will not fire on the machine that executed broadcast with publicVariable command, only on the machines that receive the broadcast\nThe value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable\n\n\n\u26a0Alt syntax of this command doesn't work as intended",
              "snippet": "addPublicVariableEventHandler ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "varName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPublicVariableEventHandler",
              "description": "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:\n\n_this select 0: String - broadcast variable name (same variable name EH is attached to)\n_this select 1: Anything - broadcast variable value \n_this select 2: Object, Group - target the variable got set on with setVariable  (see: alternative syntax)\n\n\u24d8\nThis EH works only in Multiplayer environment\nThis EH will not fire on the machine that executed broadcast with publicVariable command, only on the machines that receive the broadcast\nThe value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable\n\n\n\u26a0Alt syntax of this command doesn't work as intended",
              "snippet": "addPublicVariableEventHandler ${2:[${3:target}, ${4:code}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addRating",
              "description": "Add a number to the rating of a unit - negative values can be used to reduce the rating.\nThis command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies. \n\nWhen the rating gets below -2000, the unit's side switches to \"ENEMY\" (sideEnemy) and the unit is attacked by everyone.(see Rating Values)\n\nSee also: Arma_3:_Event_Handlers#HandleRating",
              "snippet": "addRating ${2:rating}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addResources",
              "description": "Adds resources to a team member.",
              "snippet": "addResources [${2:resource1}, ${3:resource2}, ...]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addScore",
              "description": "Add a number to the score of a unit. This score is shown in multiplayer in the \"I\" (\"P\" in Arma 3) screen. Negative values will remove from the score. Server execution only. \nSee also: Arma_3:_Event_Handlers#HandleScore",
              "snippet": "addScore ${2:score}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "side ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addScoreSide",
              "description": "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.",
              "snippet": "addScoreSide ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addSecondaryWeaponItem",
              "description": "Adds weapon item, including magazine, directly to the secondaryWeapon. This is used for infantry weapons.",
              "snippet": "addSecondaryWeaponItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addSwitchableUnit",
              "description": "Adds a unit into the list of units available for Team Switch. Units marked as playable in editor are automatically switchable.\nThis command allows to add non-playable unit into array of switchableUnits and make them available for teamSwitch. SP only.",
              "snippet": "addSwitchableUnit ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "team ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addTeamMember",
              "description": "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n The same Team Member can be member of several different teams at the same time.",
              "snippet": "addTeamMember ${2:member}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addToRemainsCollector",
              "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext",
              "snippet": "addToRemainsCollector ${1:remains}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addTorque",
              "description": "Applies torque (rotation momentum) to the  center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by vectorModelToWorld or vectorModelToWorldVisual command. The torque applied as impulse. Diagram below explain which way the object would rotate.  For more information see NVIDIA docs \n\n\u24d8A single application of torque would produce one impulse, which may not be enough. In this case consider applying a series of continuous impulses, for example to make a quad bike to roll forward:\nonEachFrame { quad addTorque (quad vectorModelToWorld [100,0,0]) }\n\u26a0This command doesn't follow convention for torque direction, which obeys right-hand rule. To comply, negate all values in the vector.",
              "snippet": "addTorque ${2:torque}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addUniform",
              "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use isUniformAllowed and to force add incompatible uniform use forceAddUniform",
              "snippet": "addUniform ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addVehicle",
              "description": "Adds a specified vehicle for use by a specified AI led group.\n\nNotes:\nThe vehicle will be considered as available for use by this group.\nIt creates a/adds to the vehicle pool for the given group to use. So more than one vehicle can be added to a group, and more than one group can be added to a vehicle.\nThis is relevant for some waypoints like getIn and guard - potentially more.\nThe AI choosing what vehicle to use based on the vehicle's cost value. Probably also distance to the available vehicles plays a role.\nWhen deciding whether to board a vehicle, AI leaders seem to only consider the transport benefit of a vehicle, ignoring any combat benefits the vehicle may provide.\nThis happens also implicitly when using assignAsXXX or moveInXXX commands, or player GL orders units to enter a vehicle, as well editor or Zeus placed vehicles with units assigned to it.\nOne can make an AI GL order his group to board the specified vehicle with orderGetIn true. Setting to false will cancel the order, but the AI will first enter to get out again immediately thereafter. To immediately (potentially temporarily) halt the AI moving to the vehicle one can use  allowGetIn false.\nWhen vehicle is added in this way, it can appear as a target for the enemy - even if the vehicle currently has no crew.\nIf used on a vehicle already driven by a member of another group, the driver will continue under his own group's orders, which may not benefit the addVehicle group.\nSeems to have no affect on AI under player command - at least as long as the player remains the GL.\nTo remove vehicle from a group, use leaveVehicle.",
              "snippet": "addVehicle ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addVest",
              "description": "Create a new vest and try to link it into vest slot.",
              "snippet": "addVest ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array, Group) = groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWaypoint",
              "description": "Adds (or inserts when index is given) a new waypoint to a group.\n\nThe waypoint is placed randomly within a circle with the given center and radius.\n\nThe function returns a waypoint with format [group, index]. \n\u24d8Prior to Arma 3 v1.90, if you need exact waypoint placement, use setWaypointPosition",
              "snippet": "addWaypoint [${2:center}, ${3:radius}, index, name]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeapon",
              "description": "Add a weapon to a unit. For a global version of this command see addWeaponGlobal.\n\nInfantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.\n\n\u24d8a magazine must be added first for the added weapon to be loaded. \n\u26a0In Arma 3 this command can also link items to the inventory slots, the functionality is identical to linkItem command, which it global and thus differ in how it should be used.",
              "snippet": "addWeapon ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponCargo",
              "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.\nIn Arma 3, arguments for this command must be local (). For global variant see addWeaponCargoGlobal.",
              "snippet": "addWeaponCargo ${2:[${3:weaponName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponCargoGlobal",
              "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. \n\nMP Synchronized",
              "snippet": "addWeaponCargoGlobal ${2:[${3:weaponName}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponGlobal",
              "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. This command can link items to respective slots as well, in which case the functionality is identical to linkItem.\n\nTo make sure the added weapon is loaded and ready, add the magazine first.\n\u26a0This command is broken when used on dedicated server",
              "snippet": "addWeaponGlobal ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponItem",
              "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.\nSince Arma 3 v1.95 it is possible to add item instantly skipping the animation by providing optional boolean",
              "snippet": "addWeaponItem ${2:[${3:weaponName}, ${4:itemName}, ${5:instant}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponItem",
              "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.\nSince Arma 3 v1.95 it is possible to add item instantly skipping the animation by providing optional boolean",
              "snippet": "addWeaponItem [${3:weaponName}, ${4:[${5:itemName}, ${6:ammoCount}, ${7:muzzleName}]}, ${8:instant}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponPool",
              "description": "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.",
              "snippet": "addWeaponPool ${1:[${2:weaponName}, ${3:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponTurret",
              "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.",
              "snippet": "addWeaponTurret ${2:[${3:weaponName}, ${4:turretPath}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "container ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponWithAttachmentsCargo",
              "description": "Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added.\n\u26a0This command has local effect; for a global variant, see addWeaponWithAttachmentsCargoGlobal.",
              "snippet": "addWeaponWithAttachmentsCargo ${2:[${3:[${4:weapon}, ${5:muzzle}, ${6:flashlight}, ${7:optics}, ${8:[${9:primaryMuzzleMagazine}, ${10:ammoCount}]}, [${12:secondaryMuzzleMagazine}, ${10:ammoCount}], ${13:bipod}]}, ${14:weaponsCount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "container ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponWithAttachmentsCargoGlobal",
              "description": "Adds a weapon into cargo space of a vehicle / box with given attachments / magazines. Ignores available cargo space. If the weapon class has any pre-attached items (LinkedItems), they are removed and new items, supplied via command arguments, are added. This command has a global effect.",
              "snippet": "addWeaponWithAttachmentsCargoGlobal ${2:[${3:[${4:weapon}, ${5:muzzle}, ${6:flashlight}, ${7:optics}, ${8:[${9:primaryMuzzleMagazine}, ${10:ammoCount}]}, [${12:secondaryMuzzleMagazine}, ${10:ammoCount}], ${13:bipod}]}, ${14:weaponsCount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/admin",
              "description": "This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id. Possible results are:\n1 - client is admin that is voted in\n2 - client is admin that is logged in\nIn all other cases it returns 0. To self check the admin state of a local client, use BIS_fnc_admin.",
              "snippet": "admin ${1:ownerID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/agent",
              "description": "Return a person for a given agent.",
              "snippet": "agent ${1:teamMember}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Team Member) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/agents",
              "description": "Return a list of agents in the current mission.",
              "text": "agents"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/AGLToASL",
              "description": "Converts position from PositionAGL to PositionASL",
              "snippet": "AGLToASL ${1:posAGL}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/aimedAtTarget",
              "description": "Returns how good the weapon of the vehicle is aimed at the target.",
              "snippet": "aimedAtTarget ${2:[${3:target}, ${4:weapon}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/aimPos",
              "description": "Returns the position of the object other units can aim to.",
              "snippet": "aimPos ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airDensityCurveRTD",
              "description": "Returns array with air density data.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "text": "airDensityCurveRTD"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airDensityRTD",
              "description": "Returns air density in given altitude. For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "airDensityRTD ${1:altitude}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airplaneThrottle",
              "description": "Returns throttle position. Works only on player's vehicle.",
              "snippet": "airplaneThrottle ${1:airplane}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airportSide",
              "description": "Gets the side of an airport, set by setAirportSide. Default side is sideUnknown.\n\u24d8See Arma: Airport IDs for a list of airport ids.",
              "snippet": "airportSide ${1:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airportSide",
              "description": "Gets the side of an airport, set by setAirportSide. Default side is sideUnknown.\n\u24d8See Arma: Airport IDs for a list of airport ids.",
              "snippet": "airportSide ${1:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/AISFinishHeal",
              "description": "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.",
              "snippet": "AISFinishHeal ${1:[${2:unit}, ${3:healer}, ${4:healercanheal}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/alive",
              "description": "Check if given vehicle/person/building is alive (i.e. not dead or destroyed).\n\u24d8alive objNull //\u00a0returns false",
              "snippet": "alive ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/all3DENEntities",
              "description": "Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers in following format:\n [objects, groups, triggers, systems, waypoints, markers, layers, comments]\nobjects: Array of Objects\ngroups: Array of Groups\ntriggers: Array of Objects\nsystems: Array of Objects\nwaypoints: Array of Arrays in Waypoint format\nmarkers: Array of Strings\nlayers: Array of Numbers\ncomments: Array of Numbers",
              "text": "all3DENEntities"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allActiveTitleEffects",
              "description": "Returns a list of all layers that have currently active title effect. Numbers equal to or greater than 0 represent cut layers, where as -1 represents title layer (see Title Effect Type). Named layers are represented by their respective index.\n\u24d8Effects created with titleText, titleRsc and titleObj commands do not have a numbered layer, so they are represented as -1 layer in the result. Effects created with cutText, cutRsc and cutObj are created either on layer 0, if no layer is specified, or on the given layer, if the layer index is specified, so they are represented by the layer index.",
              "text": "allActiveTitleEffects"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allAddonsInfo",
              "description": "Returns the list of all loaded addons.",
              "text": "allAddonsInfo"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allAirports",
              "description": "Returns all map airports, both static and dynamic",
              "text": "allAirports"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Control) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allControls",
              "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from control groups",
              "snippet": "allControls ${1:display}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allCurators",
              "description": "Returns list of all curator logic units, not the units assigned to the logic.",
              "text": "allCurators"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allCutLayers",
              "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so: _layerNum = \"myLayerName\" cutFadeOut 0;. The index of the layer name in the array corresponds to the layer number the cut effect will be displayed on. If no layers were defined, the return is [\"\"], because 0 layer is reserved for usage in cut commands without layer param or when name of the layer given is empty \"\".",
              "text": "allCutLayers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDead",
              "description": "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.",
              "text": "allDead"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDeadMen",
              "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.",
              "text": "allDeadMen"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDisplays",
              "description": "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via uiNamespace variable, which is updated every time display is opened or closed. For example, to access IGUI displays:\nuiNamespace getVariable [\"IGUI_displays\", []];. Other display variables:\n3DENDisplays_displays\n3DENDisplaysTemp_displays\nGUI_displays\nIGUI_displays\nLoading_displays\nCuratorDisplays_displays\nBootcampDisplays_displays\nCuratorTitles_displays\nBootcampTitles_displays\nKartDisplays_displays",
              "text": "allDisplays"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allGroups",
              "description": "Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic.",
              "text": "allGroups"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMapMarkers",
              "description": "Returns all markers in map including user placed markers (_USER_DEFINED #). \nSince Arma 3 v1.57.134377 User defined markers have the following name format: _USER_DEFINED #<PlayerID>/<MarkerID>/<ChannelID> where:\n<PlayerID> - unique network id of the player in String format, also available as String in the 6th param in  \"PlayerConnected\" and \"PlayerDisconnected\" EHs\n<MarkerID> - a marker counter id\n<ChannelID> - id of the chat channel on which marker was placed (see currentChannel)\nFor custom waypoint position (LShift+LMB) see customWaypointPosition",
              "text": "allMapMarkers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMines",
              "description": "Returns an array of all mines in the mission",
              "text": "allMines"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMissionObjects",
              "description": "Returns all mission objects (created by or during a mission) with given type (or its subtype). In some cases allMissionObjects could be substituted with entities, which would be much much faster alternative. Some of the unusual mission objects that can be detected with this command (as well as with nearestObject):\n\"#slop\" - blood drop\n\"#mark\" - unit footprints\n\"#track\" - vehicle tracks\n\"#crater\" - explosion crater on the ground\n\"#crateronvehicle\" - bullet marks on vehicle\n\"#explosion\" - an explosion\n\"#objectdestructed\" - building, tree or bush destruction\n\"#soundonvehicle\" - sound created with say3D for example\n\"#dynamicsound\" - sound source created using createSoundSource",
              "snippet": "allMissionObjects ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allow3DMode",
              "description": "Allow/dissallow 3D mode., \n\u24d8Some Old Editor Command",
              "snippet": "allow3DMode ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowCrewInImmobile",
              "description": "If true, units can be in a vehicle with broken tracks/wheels.",
              "snippet": "allowCrewInImmobile ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowCuratorLogicIgnoreAreas",
              "description": "Allows curator placing and working with modules outside of edit areas.",
              "snippet": "allowCuratorLogicIgnoreAreas ${2:allow}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowDamage",
              "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage. To check if damage is allowed at current locality, see isDamageAllowed.\n\n\u26a0This command has to be executed where object is local and as long as object does not change locality the effect of this command will be global. If object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect",
              "snippet": "allowDamage ${2:allow}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowDammage",
              "description": "Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage.\nThe command does not prevent object from taking scripted damage such as setDamage or setHit.\n\u26a0Command has to be executed where object is local and as long as object does not change locality the effect of this command will be global.\nIf object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect.",
              "snippet": "allowDammage ${2:allow}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowFileOperations",
              "description": "Allow/dissallow file ops (load/save etc).\n\u24d8Some Old Editor Command",
              "snippet": "allowFileOperations ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "name ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowFleeing",
              "description": "Sets the cowardice level (the lack of courage or bravery) of a group or unit.\n\nNotes:\nThe more cowardice a Group or Object has, the sooner it will start fleeing.\n0 means maximum courage, while 1 means always fleeing.\nMore details in fleeing",
              "snippet": "allowFleeing ${2:cowardice}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitArray ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowGetIn",
              "description": "Set if the units given in the list are allowed to enter vehicles.",
              "snippet": "allowGetIn ${2:allow}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowSprint",
              "description": "Force player to run/jog if set to false.",
              "snippet": "allowSprint ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allPlayers",
              "description": "Returns a list of all units controlled by connected clients - human players including dead players, but also Headless Clients.\nUse BIS_fnc_listPlayers or see Example 1 to get human players only.",
              "text": "allPlayers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allSimpleObjects",
              "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.\n\u24d8\nThere is no inheritance in simple objects, so only exact class match is allowed.\nclassName is not case sensitive.",
              "snippet": "allSimpleObjects ${1:classes}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allSites",
              "description": "Return all sites in map.\n\u26a0This command is considered deprecated and is no longer supported",
              "text": "allSites"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allTurrets",
              "description": "Returns array of available turret paths from vehicle object.\n\n\u24d8\nto look up turrets from config, use BIS_fnc_allTurrets\nto get config from turret path use BIS_fnc_turretConfig",
              "snippet": "allTurrets ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allTurrets",
              "description": "Returns array of available turret paths from vehicle object.\n\n\u24d8\nto look up turrets from config, use BIS_fnc_allTurrets\nto get config from turret path use BIS_fnc_turretConfig",
              "snippet": "allTurrets ${1:[${2:vehicle}, ${3:includeFFV}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allUnits",
              "description": "Return a list of all units (all persons except agents) outside and inside vehicles, created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. Dead units and units awaiting for respawn are also excluded.",
              "text": "allUnits"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allUnitsUAV",
              "description": "Return a list of all UAV vehicles.",
              "text": "allUnitsUAV"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allVariables",
              "description": "Returns a list of all variables from desired namespace. Namespaces supported:\nControl\nTeam Member\nNamespace\nObject\nGroup\nTask\nLocation",
              "snippet": "allVariables ${1:namespace}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ammo",
              "description": "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55.133505 the command also returns ammo for units in vehicles.",
              "snippet": "ammo ${2:muzzle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ammoOnPylon",
              "description": "Returns ammo count on given pylon.\nReturns false (Boolean) on failure.",
              "snippet": "ammoOnPylon ${2:pylon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/and",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).",
              "snippet": "and ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/and",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).",
              "snippet": "and ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animate",
              "description": "Activates given object animation. Animation is defined in CfgModels animations class.\nSince Arma 3 v1.58 animation names can be obtained with animationNames.\n\nClass names listed in CfgVehicles AnimationSources bound to \"Proxy\" controller can also be animated with animate command (see createVehicle/vehicles).\n\nIt is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimised for MP\n\u26a0Mixing animateSource command with animate command to animate the same part may produce some undefined behaviour",
              "snippet": "animate ${2:[${3:animationName}, ${4:phase}, ${5:speed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateBay",
              "description": "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.\n\u24d8While there is no getter to read the animation phase of the given bay, animationPhase command can be used with the individual bay door name from animationNames as a workaround. For example for UCAV Sentinel ucav animateBay [1, 1] could be checked with ucav animationPhase \"weapons_bay_l_1\" or ucav animationPhase \"weapons_bay_l_2\"",
              "snippet": "animateBay ${2:[${3:bay}, ${4:animphase}, ${5:instant}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateDoor",
              "description": "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles ->  AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];\n\u26a0animateDoor phase param will be rounded: anything >0.5 will be rounded to 1 and <=0.5 will be rounded to 0. Therefore it is not possible to open a door half way with this command  \nclass AnimationSources\n{\n\tclass CargoRamp_Open\n\t{\n\t\tsource = \"user\";\n\t\tanimPeriod = 5;\n\t\tinitPhase = 0;\n\t};\n\tclass Door_L\n\t{\n\t\tsource = \"door\";\n\t\tanimPeriod = 1.6;\n\t};\n};\n\nTo animate doors or other sources that have \"user\" controller, use animate command, or even better, animateSource (recommended). Sources with \"hit\" controller can be animated with setHitPointDamage command applied to the name contained in hitpoint property. For availability of animation sources and their controller types see: createVehicle/vehicles",
              "snippet": "animateDoor ${2:[${3:doorname}, ${4:phase}, ${5:instant}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animatePylon",
              "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state =1. Supports pylon name since Arma 3 v1.93.145594",
              "snippet": "animatePylon ${2:[${3:pylon}, ${4:animphase}, ${5:instant}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateSource",
              "description": "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property. This allows to use just one command on a bunch of animations related to the same source simultaneously. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.\n\nA class with the same source name should also be present in main config in CfgVehicles AnimationSources and have to be bound to the \"user\" controller for the command to work. If in order to animate door in example below using animate command it would require 2 calls:\n\nhouse animate [\"Door_1_rot\", 1];\n\nhouse animate [\"Door_Handle_1_rot\", 1];\n\nWith animateSource this would require only 1 (provided everything is configured correctly):\n\nhouse animateSource [\"Door_1_sound_source\", 1];\n\n// model.cfg\n....\nclass Animations\n{\n\tclass Door_1_rot\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_sound_source;\n\t\tselection = Door_1;\n\t\taxis = Door_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0.1;\n\t\tmaxValue = 1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad 110);\n\t};\n\tclass Door_Handle_1_rot\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_noSound_source;\n\t\tselection = Door_Handle_1;\n\t\taxis = Door_Handle_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0;\n\t\tmaxValue = 0.1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad -50);\n\t};\n};\n...\n\n// config.cpp\n...\nclass AnimationSources\n{\n        class Door_1_sound_source\n        {\n\t        source = \"user\";\n\t        initPhase = 0;\n\t        animPeriod = 1;\n\t        sound = \"GenericDoorsSound\";\n\t        soundPosition = \"Door_1_trigger\";\n        };\n};\n...\n \nIf you don't know much about model config you can use this page createVehicle/vehicles for reference. Some of the AnimationSources are listed with the class names of the available assets in Arma 3. If it says \"user\", the chances are it could work with animateSource (see example 2).\n\nIt is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimized for MP\n\u26a0Mixing animateSource command with animate command to animate the same part can lead to unexpected behavior",
              "snippet": "animateSource ${2:[${3:source}, ${4:phase}, ${5:speed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationNames",
              "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.",
              "snippet": "animationNames ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationPhase",
              "description": "Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven. Animation names for an object could be found out with animationNames command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use deg command.",
              "snippet": "animationPhase ${2:animationName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationSourcePhase",
              "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see Example 2)",
              "snippet": "animationSourcePhase ${2:source}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationState",
              "description": "Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3.\n\u24d8This command is only for a man unit, other units such as animals cannot use this command.",
              "snippet": "animationState ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "array1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/append",
              "description": "Appends array2 to the back of array1 modifying array1. \nNOTE: append does not return array, it modifies existing array. If you need to return a copy, use \"+\": \narray3 = array1 + array2;",
              "snippet": "append ${2:array2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/apply",
              "description": "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable _x.",
              "snippet": "apply ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/armoryPoints",
              "description": "Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0.",
              "text": "armoryPoints"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = array1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/arrayIntersect",
              "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.",
              "snippet": "arrayIntersect ${2:array2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/asin",
              "description": "Arcsine of a number, result in Degrees.",
              "snippet": "asin ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ASLToAGL",
              "description": "Converts position from PositionASL to PositionAGL",
              "snippet": "ASLToAGL ${1:posASL}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ASLToATL",
              "description": "Converts a position from PositionASL to PositionATL",
              "snippet": "ASLToATL ${1:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assert",
              "description": "Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.\n\nIf script was pre-processed with preprocessFileLineNumbers, it will also show/log the error line number and the file name.",
              "snippet": "assert ${1:condition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCargo",
              "description": "Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle.",
              "snippet": "assignAsCargo ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = character ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCargoIndex",
              "description": "Assigns the character to a specific cargo / passenger index of the given vehicle.",
              "snippet": "assignAsCargoIndex [${2:vehicle}, ${3:index}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCommander",
              "description": "Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle.",
              "snippet": "assignAsCommander ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsDriver",
              "description": "Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle.",
              "snippet": "assignAsDriver ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsGunner",
              "description": "Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle.",
              "snippet": "assignAsGunner ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsTurret",
              "description": "Assigns the soldier to turret.",
              "snippet": "assignAsTurret [${3:vehicle}, ${4:[turretPath]}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "player ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignCurator",
              "description": "Assign player as curator. Two players cannot act as one curator.",
              "snippet": "assignCurator ${2:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedCargo",
              "description": "Returns the list of soldiers assigned to the given vehicle as a cargo.",
              "snippet": "assignedCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedCommander",
              "description": "Returns the soldier assigned to the given vehicle as a commander.",
              "snippet": "assignedCommander ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedDriver",
              "description": "Returns the soldier assigned to the given vehicle as a driver.",
              "snippet": "assignedDriver ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedGunner",
              "description": "Returns the soldier assigned to the given vehicle as a gunner.",
              "snippet": "assignedGunner ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedItems",
              "description": "Get array with all assigned items. The resulting Array is sorted like: [<Map>, <Compass>, <Watch>, <Radio>, <GPS>, <NVG>, <Binoculars>]. But if something is missing it get's omitted so you can not be sure that some element is at a constant index. To return stored items see items and itemsWithMagazines.",
              "snippet": "assignedItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedTarget",
              "description": "Returns the target assigned to an unit or the vehicle's effectiveCommander. The target can be assigned by the group/vehicle/formation leader (as player via quick command menu or \"target\" complex command menu).\nTo unassign the target use doWatch objNull or commandWatch objNull or as player and group leader order \"no target\" in the \"target\" complex command menu.\n\u24d8\nThis command does not return the target a unit is actually engaging (\"attack unit\"). For this information, see getAttackTarget.\nIf a player is inside a vehicle as the effectiveCommander, the vehicle's crew assignedTarget will always be objNull.",
              "snippet": "assignedTarget ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String, Nothing, Control) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedTeam",
              "description": "Returns the team the unit belongs to. Possible values:\n\n\"MAIN\" (default and white)\n\"RED\"\n\"GREEN\"\n\"BLUE\"\n\"YELLOW\"\n\"\" if given unit is objNull or remoteControling another unit(Since Arma 3 v1.93.145625)",
              "snippet": "assignedTeam ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedVehicle",
              "description": "Returns the vehicle an unit is assigned to. If no vehicle is assigned objNull is returned.\n\nNotes:\nThe assignment happens via the various assignAsXXX/moveInXXX commands, or player/AI GL getIn radio commands, getIn waypoint, or when units start in vehicles or get moved in to a vehicle by Zeus/via Eden.\naddVehicle indirectly may also add the vehicle, however only if an AI GL assigns vehicle roles (which depends on various things).\nvehicle returns the current vehicles an AI is in, while with assignedVehicle the AI may not (yet) be in the said vehicle (still in transit or held of by waypoints or other SQF commands).\nTo make AI under AI GL enter a vehicle, use orderGetIn true.\nWhile unassignVehicle works, if the group is under AI command, the AI GL may re-assign the vehicle immediately. To stop the AI from re-entering at least, use orderGetIn or allowGetIn false, or permanently remove the assignment vi a leaveVehicle.\nFor player GL lead AI assignedVehicle seems not to be really reliable/behaves strange. Disembark radio command seems to unassign though.",
              "snippet": "assignedVehicle ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedVehicleRole",
              "description": "Returns the role a unit is assigned to within its assigned vehicle.\n\n\nNotes:\nWhen an unit enters a vehicle crew position, it gets assigned the vehicle role automatically for the given crew position.\nThe unit does not have to be in the vehicle when getting the role assignment (ie via assignAsXXX or human/AI GL getIn radio commands).\nGL getIn radio commands result in instant assignment - the unit does not yet have to occupy the crew position.\nDying units will let go of the assigned role after a few seconds - seems the delay is independent of being in the vehicle or not.\nAn unit will hold on to its assigned role after exiting the vehicle.\nOne has to use unassignVehicle (and stop an AI GL to assign vehicle positions again) or leaveVehicle to remove the assignment - or assigned to another vehicle.\nA vehicle position/role can only be assigned to one unit at a time. So even when not (visually) occupied, the \"seat\" may be blocked/reserved by another unit.\nA player can still get into the vehicle position already assigned if not already taken, or switch seats with AI (if leader or effectiveCommander for those AI).",
              "snippet": "assignedVehicleRole ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignItem",
              "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.",
              "snippet": "assignItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignTeam",
              "description": "Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:\nThe command requires player to be fully initialised\nThe unit getting assigned must be either player himself or a unit in player's group\nUnits in player's group as well as player himself can all have different teams assigned\nThe colour of the assigned team for a unit is seen on the group management UI as well as squad radar\nThe possible team values (colours) are: \n\"MAIN\" - (white)\n\"RED\" - (red)\n\"GREEN\" - (green)\n\"BLUE\" - (blue)\n\"YELLOW\"  - (yellow)\nNOTE: In older version of the game the effect of this command is local",
              "snippet": "assignTeam ${2:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "plane ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignToAirport",
              "description": "\u26a0Not correctly implemented in Armed Assault, use landAt instead.",
              "snippet": "assignToAirport ${2:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "plane ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignToAirport",
              "description": "\u26a0Not correctly implemented in Armed Assault, use landAt instead.",
              "snippet": "assignToAirport ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atan",
              "description": "ArcTangent of a number, result in Degrees.",
              "snippet": "atan ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = x ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atan2",
              "description": "ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180.\n\n\u24d8This command can handle y being 0, unlike when using atan, and will return 90\n\n\n\u26a0Even though this command is a binary operator just like select command, it has  higher precedence than select command, therefore the following expression: _pos select 0 atan2 (_pos select 1) will produce an error. The correct usage in this case will be: (_pos select 0) atan2 (_pos select 1)",
              "snippet": "atan2 ${2:y}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atg",
              "description": "Equivalent to atan.",
              "snippet": "atg ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ATLToASL",
              "description": "Converts a position from PositionATL to PositionASL",
              "snippet": "ATLToASL ${1:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedObject",
              "description": "Returns the object a location is attached to. If the location is unattached, then objNull is returned.",
              "snippet": "attachedObject ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedObjects",
              "description": "Returns a list of objects attached to the given object.",
              "snippet": "attachedObjects ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedTo",
              "description": "Returns object the given object is attached to or objNull if the given object is not attached to anything.",
              "snippet": "attachedTo ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachObject",
              "description": "Attaches a location to the specified object. To detach a location, attach it to objNull.",
              "snippet": "attachObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachTo",
              "description": "Attaches an object to another object.\nThe offset is applied to the object center unless a memory point is provided, in which case the offset will be applied to the memory point position.\nIf no offset is specified, the current offset between the two objects will be used.\n\n\u24d8Using setDir on an attached object sets its direction relative to the reference object's direction, e.g 0 will make it face the same direction as the reference object, 90 face to the right, 180 face to the back, etc.\nAttached triggers only follow the direction of the object to which they are attached, not pitch or roll.",
              "snippet": "attachTo [${2:object2}, ${3:offset}, ${4:memPoint}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attackEnabled",
              "description": "Return whether a group's leader can issue attack commands to soldiers under his command.",
              "snippet": "attackEnabled ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpack",
              "description": "Returns a class of a backpack.",
              "snippet": "backpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackCargo",
              "description": "Get array with backpacks from ammo box (or any general weapon holder container).",
              "snippet": "backpackCargo ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackContainer",
              "description": "Returns a cargo container of a unit's backpack.",
              "snippet": "backpackContainer ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackItems",
              "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.",
              "snippet": "backpackItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackMagazines",
              "description": "Get array with all magazines from backpack of the given unit.",
              "snippet": "backpackMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = backpack ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackSpaceFor",
              "description": "Returns how much space is in backpack for given weapon or magazine",
              "snippet": "backpackSpaceFor ${2:weaponName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/batteryChargeRTD",
              "description": "Returns the current charge of a helicopter's batteries.\n0: empty\n1: fully charged",
              "snippet": "batteryChargeRTD ${1:helicopterRTD}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/behaviour",
              "description": "Returns the behaviour of the unit's group. For Arma 3 behaviour explanation see Arma_3_AI_Behavior",
              "snippet": "behaviour ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/benchmark",
              "description": "Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.",
              "text": "benchmark"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = progress ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/bezierInterpolation",
              "description": "Gets interpolated value based on B\u00e9zier curve with given control points (progress value is 0...1 for a curve that starts at pos0 and finishes at posN)",
              "snippet": "bezierInterpolation ${2:[pos0, pos1,... posN]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/binocular",
              "description": "Returns class name of currently used binocular weapon.",
              "snippet": "binocular ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/binocularItems",
              "description": "Returns array with all items assigned to the binocular weapon except magazines. Use binocularMagazine command for the latter. This command is used for infantry weapons only.",
              "snippet": "binocularItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/binocularMagazine",
              "description": "Collects all loaded magazines from all binocular muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
              "snippet": "binocularMagazine ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/blufor",
              "description": "Pre-defined variable for the blufor side.\nAlias for west.",
              "text": "blufor"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBox",
              "description": "Returns a bounding box of given object in model coordinate space, adjusted according to destruction/animation of an object. This command is rather generous on the size estimation, for more precise coordinates use boundingBoxReal.\n\u24d8In 1.92 The output of both syntaxes got extended to include bounding sphere diameter. See also sizeOf.",
              "snippet": "boundingBox ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = clippingType ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBox",
              "description": "Returns a bounding box of given object in model coordinate space, adjusted according to destruction/animation of an object. This command is rather generous on the size estimation, for more precise coordinates use boundingBoxReal.\n\u24d8In 1.92 The output of both syntaxes got extended to include bounding sphere diameter. See also sizeOf.",
              "snippet": "boundingBox ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBoxReal",
              "description": "Returns a raw bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.\nAn alternative syntax was introduced with Arma 3 v1.92 allowing to specify clipping type to be used, which in some cases could make bounding boxes even more precise. The output of both syntaxes was also extended to include bounding sphere diameter, identical to sizeOf return value.",
              "snippet": "boundingBoxReal ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = clippingType ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBoxReal",
              "description": "Returns a raw bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.\nAn alternative syntax was introduced with Arma 3 v1.92 allowing to specify clipping type to be used, which in some cases could make bounding boxes even more precise. The output of both syntaxes was also extended to include bounding sphere diameter, identical to sizeOf return value.",
              "snippet": "boundingBoxReal ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingCenter",
              "description": "Returns the position of original (loaded) center of object in model coordinates.",
              "snippet": "boundingCenter ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakOut",
              "description": "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.\n\n\nSince Arma 3 v1.47, breakOut can be used to return a value. It is the closest SQF comes to having \"return\"-like operation.",
              "snippet": "breakOut ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = value ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakOut",
              "description": "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.\n\n\nSince Arma 3 v1.47, breakOut can be used to return a value. It is the closest SQF comes to having \"return\"-like operation.",
              "snippet": "breakOut ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakTo",
              "description": "Breaks block to scope named name. Nil is returned.\n\nScope name can be assigned using scopeName command.",
              "snippet": "breakTo ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/briefingName",
              "description": "Returns the name of the current briefing/scenario name.",
              "text": "briefingName"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = building ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buildingExit",
              "description": "Returns the given indexed exit in a building. The returned value is in format Position.",
              "snippet": "buildingExit ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = building ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buildingPos",
              "description": "Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent. \nSince Arma 3 v.155.133934 if index -1 is supplied, the command will return array with all available positions.",
              "snippet": "buildingPos ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buldozer%20LoadNewRoads",
              "description": "Generates new roads. Working only in buldozer.",
              "snippet": "buldozer_LoadNewRoads ${1:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buldozer%20reloadOperMap",
              "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.",
              "text": "buldozer_reloadOperMap"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonAction",
              "description": "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "buttonAction ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonAction",
              "description": "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "buttonAction ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonSetAction",
              "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Arma: GUI Configuration for more information about user dialogs. Works with:\nCT_BUTTON\nCT_XBUTTON\nCT_ACTIVETEXT\nCT_SHORTCUTBUTTON\n\u26a0The action code is expected to be in SQS format",
              "snippet": "buttonSetAction ${1:[${2:idc}, ${3:action}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonSetAction",
              "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Arma: GUI Configuration for more information about user dialogs. Works with:\nCT_BUTTON\nCT_XBUTTON\nCT_ACTIVETEXT\nCT_SHORTCUTBUTTON\n\u26a0The action code is expected to be in SQS format",
              "snippet": "buttonSetAction ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cadetMode",
              "description": "Returns if the player is currently playing in cadet or veteran mode.  \u24d8In Arma 3 this command returns status for global  difficulty showCadetHints",
              "text": "cadetMode"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/calculatePath",
              "description": "Spawns an agent that will execute an AI path calculation and fire the \"PathCalculated\"  event handler. The vehicle type to simulate could be one of the following presets:\n\"man\" (will use \"C_man_1\")\n\"car\" (will use \"C_Offroad_01_F\")\n\"tank\" (will use \"B_MBT_01_cannon_F\")\n\"wheeled_APC\" (will use \"B_APC_Tracked_01_rcws_F\")\n\"boat\" (will use \"C_Rubberboat\")\n\"plane\" (will use \"B_Plane_CAS_01_dynamicLoadout_F\")\n\"helicopter\" (will use \"B_Heli_Light_01_F\")\nIf the given vehicle type is not one of the above presets, the exact given type is used.\n\u26a0In order to guarantee that the event handler is added to the result of this command before the path is calculated, use isNil to run the code in an Unscheduled Environment:\nisNil { calculatePath [\"man\", \"safe\", _startPos, _endPos] addEventHandler [\"PathCalculated\", { hint str _this }] };",
              "snippet": "calculatePath [${1:type}, ${2:behaviour}, ${3:from}, ${4:to}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/calculatePlayerVisibilityByFriendly",
              "description": "Friendly units will / will not calculate visibility of player. Default false.",
              "snippet": "calculatePlayerVisibilityByFriendly ${1:calculate}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/call",
              "description": "Adds given set of compiled instructions to the current stack and waits for it to finish and return, provides an option to pass arguments to the executed Code.\n\u26a0In Operation Flashpoint this command used to accept String as well as Code. This does not apply to Armed Assault and later titles (see compile).",
              "snippet": "call ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = args ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/call",
              "description": "Adds given set of compiled instructions to the current stack and waits for it to finish and return, provides an option to pass arguments to the executed Code.\n\u26a0In Operation Flashpoint this command used to accept String as well as Code. This does not apply to Armed Assault and later titles (see compile).",
              "snippet": "call ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = extension ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/callExtension",
              "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like Booleans, Strings, Numbers and Arrays of all of the above. There is currently a limit on how many arguments can be sent and it is 2048 (since Arma 3 v1.92; previous limit: 1024). However an argument could be an Array itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n\nPossible error codes:\n101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n201: PARAMS_ERROR_TOO_MANY_ARGS\n301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.\n\nThe extension execution timeout, after which 301: EXECUTION_WARNING_TAKES_TOO_LONG warning is issued, is hardcoded on clients and is 1000.0 milliseconds (1 second). On the server the default limit is also 1 second, however it is possible to set custom limit with callExtReportLimit param (see  Server Options).\n\nIf an extension with the given name can't be found (or it is found but doesn't implement the required interface properly / at all) the following error will be written into the RPT (In this example the given dll-name was \"MyExtension\"):\n14:27:07 CallExtension 'MyExtension' could not be found\n\nIf an extension is not whitelisted with BattlEye (see Extensions for more info) it will be blocked on clients running with enabled BattlEye protection. RPT message outputted however is a little obscure:\n21:35:04 Call extension 'MyExtension' could not be loaded: Insufficient system resources exist to complete the requested service\n\nSince Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .rpt file like so:\n19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]\n\nFor more information see Extensions.\n\nLinux specific\nWhile on Windows the extension name is case-insensitive, on Linux the extension name is case-sensitive and should match the name of the .so file exactly (minus \".so\" part). Currently only 32-bit extensions are supported on Linux.\n\n\u26a0If a user has anti-virus software running, this could cause brand new extension to stutter the game and return with EXECUTION_WARNING_TAKES_TOO_LONG when executed for the first time, because of the AV software scanning. After the extension is whitelisted by AV this should go away until a new version of the extension is installed. Perhaps a dummy call to the extension on init should be considered as a feature of implementation to account for that\n\nExtension Callback\nSince Arma 3 v1.95 it is possible to call the game directly from the extension via function pointer provided when extension is called for the first time (assuming the extension implements at least one of the RVExtension or RVExtensionArgs methods). The function pointer passed over to RVExtensionRegisterCallback method is of the following signature (see Example 4):\n\nint(*callbackProc)(char const *name, char const *function, char const *data)\n\nCalling this function pointer from extension will trigger  \"ExtensionCallback\" mission event handler with 3 user supplied params. The params are\n\nname - make it unique name, for example the extension name, so that other modders can quickly filter out calls from own extensions\nfunction - make it name of the function the extension sends the result to. (Note: The returned function is just a STRING! So compile is needed, before using call or spawn, to execute it)\ndata - make it the actual result. You can also format it as an array so it could be parsed by parseSimpleArray\nCalling function pointer returns an int. This is the number of available slots in the input buffer left for this frame after your call and can range from 99 to -1. The buffer is processed and cleared every frame and the maximum number of slots that can be filled per frame is 100. If you are planning to call back with more than 100 results per frame, make sure your extension retries if it receives negative int, which means the buffer was full and your call did not succeed. Ideally suited for callbacks from different threads, but if callback is initiated from the calling thread, the EH will fire on the next frame of game simulation. Needless to say, the \"ExtensionCallback\" event handler needs to exist before any callbacks, otherwise the data will just stay in the buffer. Removing all \"ExtensionCallback\" EHs clears the buffer as well as mission restart.",
              "snippet": "callExtension ${2:function}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Code, String, Number) = extension ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/callExtension",
              "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like Booleans, Strings, Numbers and Arrays of all of the above. There is currently a limit on how many arguments can be sent and it is 2048 (since Arma 3 v1.92; previous limit: 1024). However an argument could be an Array itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n\nPossible error codes:\n101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n201: PARAMS_ERROR_TOO_MANY_ARGS\n301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.\n\nThe extension execution timeout, after which 301: EXECUTION_WARNING_TAKES_TOO_LONG warning is issued, is hardcoded on clients and is 1000.0 milliseconds (1 second). On the server the default limit is also 1 second, however it is possible to set custom limit with callExtReportLimit param (see  Server Options).\n\nIf an extension with the given name can't be found (or it is found but doesn't implement the required interface properly / at all) the following error will be written into the RPT (In this example the given dll-name was \"MyExtension\"):\n14:27:07 CallExtension 'MyExtension' could not be found\n\nIf an extension is not whitelisted with BattlEye (see Extensions for more info) it will be blocked on clients running with enabled BattlEye protection. RPT message outputted however is a little obscure:\n21:35:04 Call extension 'MyExtension' could not be loaded: Insufficient system resources exist to complete the requested service\n\nSince Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .rpt file like so:\n19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]\n\nFor more information see Extensions.\n\nLinux specific\nWhile on Windows the extension name is case-insensitive, on Linux the extension name is case-sensitive and should match the name of the .so file exactly (minus \".so\" part). Currently only 32-bit extensions are supported on Linux.\n\n\u26a0If a user has anti-virus software running, this could cause brand new extension to stutter the game and return with EXECUTION_WARNING_TAKES_TOO_LONG when executed for the first time, because of the AV software scanning. After the extension is whitelisted by AV this should go away until a new version of the extension is installed. Perhaps a dummy call to the extension on init should be considered as a feature of implementation to account for that\n\nExtension Callback\nSince Arma 3 v1.95 it is possible to call the game directly from the extension via function pointer provided when extension is called for the first time (assuming the extension implements at least one of the RVExtension or RVExtensionArgs methods). The function pointer passed over to RVExtensionRegisterCallback method is of the following signature (see Example 4):\n\nint(*callbackProc)(char const *name, char const *function, char const *data)\n\nCalling this function pointer from extension will trigger  \"ExtensionCallback\" mission event handler with 3 user supplied params. The params are\n\nname - make it unique name, for example the extension name, so that other modders can quickly filter out calls from own extensions\nfunction - make it name of the function the extension sends the result to. (Note: The returned function is just a STRING! So compile is needed, before using call or spawn, to execute it)\ndata - make it the actual result. You can also format it as an array so it could be parsed by parseSimpleArray\nCalling function pointer returns an int. This is the number of available slots in the input buffer left for this frame after your call and can range from 99 to -1. The buffer is processed and cleared every frame and the maximum number of slots that can be filled per frame is 100. If you are planning to call back with more than 100 results per frame, make sure your extension retries if it receives negative int, which means the buffer was full and your call did not succeed. Ideally suited for callbacks from different threads, but if callback is initiated from the calling thread, the EH will fire on the next frame of game simulation. Needless to say, the \"ExtensionCallback\" event handler needs to exist before any callbacks, otherwise the data will just stay in the buffer. Removing all \"ExtensionCallback\" EHs clears the buffer as well as mission restart.",
              "snippet": "callExtension ${2:[${3:function}, ${4:arguments}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommand",
              "description": "Executes a command on the given camera / actor object. Known commands for:\n\n\n\nAll cameras\n\"Camera\"\n\"Seagull\"\n\"CamCurator\"\n\n\n\n\"manual on\"\n\"manual off\"\n\n\n\"inertia on\"\n\"inertia off\"\n\n\n\"landed\" lands the seagull\n\"airborne\" makes the seagull fly\n\n\n\"maxPitch (x)\" (number, in degrees)\n\"minPitch (x)\" (number, in degrees)\n\"speedDefault (x)\" (number)\n\"speedMax (x)\" (number)\n\"ceilingHeight (x)\" (number, in meters)\n\"atl (x)\" (on/off)\n\"surfaceSpeed (x)\" (on/off)\n\n\u24d8The camCommand effect is immediate and does not need camCommit/camCommitPrepared.",
              "snippet": "camCommand ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommit",
              "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. For camPrepareXXX commands use camCommitPrepared.",
              "snippet": "camCommit ${2:time}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommitPrepared",
              "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. This command is for use with camPrepareXXX commands. For the normal cam command use camCommit.",
              "snippet": "camCommitPrepared ${2:time}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommitted",
              "description": "Checks if the conduction of the last camCommit call already finished.",
              "snippet": "camCommitted ${1:camera}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camConstuctionSetParams",
              "description": "Sets construction camera parameters. To work with \"camconstruct\" object.",
              "snippet": "camConstuctionSetParams ${2:[${3:[x,y,z]}, ${4:radius}, ${5:maxAboveLand}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCreate",
              "description": "Create a camera or a seagull object on the given position. The creation happens immediately and doesn't wait for camCommit.\nAmong other commands, cameraEffect must be used to enter the camera's view and camDestroy to delete the created camera. See also Camera Control.\n\u26a0\nOther objects can be created this way, but vehicles created with camCreate cannot be entered\nAny unit created with camCreate will remain static\nUnlike createVehicle, objects are created exactly at the given position, without consideration of the surrounding objects",
              "snippet": "camCreate ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camDestroy",
              "description": "Destroys camera object created with camCreate. This command doesn't need camCommit. \n\n\u26a0Destroying camera object does not terminate camera effect automatically, use cameraEffect prior to deleting the camera (see Example 2)",
              "snippet": "camDestroy ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraEffect",
              "description": "Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need camCommit.\n\nSince Arma 3 v1.73.142217, it is possible to terminate individual r2t source. For example: cam cameraEffect [\"terminate\", \"back\", \"rtt1\"]; // would terminate \"rtt1\" r2t source\ncam cameraEffect [\"terminate\", \"back\"]; // would terminate all r2t sources\n\u26a0One cannot mix and match cameraEffect and can either have multiple r2t cameras or a single camera for the whole screen. If one needs a background stream overlayed with r2t streams, this could be achieved by creating an object and using switchCamera to switch to it for background image, while using cameraEffect for r2t overlay (see Example 4)",
              "snippet": "cameraEffect ${2:[${3:effectName}, ${4:effectPosition}, ${5:r2tName}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraEffectEnableHUD",
              "description": "Enable / disable showing of in-game UI during currently active camera effect. By default the HUD is off, which will make results of drawIcon3D invisible, for example.",
              "snippet": "cameraEffectEnableHUD ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraInterest",
              "description": "Return camera interest for given entity, as set by setCameraInterest, or as autodetected.",
              "snippet": "cameraInterest ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraOn",
              "description": "Returns the vehicle to which the camera is attached.",
              "text": "cameraOn"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraView",
              "description": "Returns mode of active camera view. Mode is one of: \n\"INTERNAL\" (1st person)\n\"EXTERNAL\" (3rd person)\n\"GUNNER\" (optics / sights)\n\"GROUP\" (commander view)",
              "text": "cameraView"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/campaignConfigFile",
              "description": "Return root of campaign description.ext entries hierarchy.",
              "text": "campaignConfigFile"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreload",
              "description": "Preloads the scene for the prepared camera with given timeout after which preloading is aborted. Max timeout is 30 seconds. Timeout of 0 means max timeout of 30 seconds as well. \u24d8This command will read prepared params set with camPrepareFOV, camPreparePos and camPrepareTarget, so no camCommitPrepared is necessary. If camPrepareFOV is not set, the default value is 1. If camPrepareTarget (for direction) and camPreparePos (for position) are not set, current direction and position of the camera are used. The prepared camera preload will preload main camera as well. cameraEffect is not necessary",
              "snippet": "camPreload ${2:timeout}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreloaded",
              "description": "Checks whether the camera has finished preloading.",
              "snippet": "camPreloaded ${1:camera}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareBank",
              "description": "Prepares the camera bank angle.\n\u26a0This command is non-functional!",
              "snippet": "camPrepareBank ${2:bank}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareDir",
              "description": "Prepares the camera heading. \n\u26a0This command is non-functional!",
              "snippet": "camPrepareDir ${2:direction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareDive",
              "description": "Prepares the camera dive angle. \n\u26a0This command is non-functional!",
              "snippet": "camPrepareDive ${2:dive}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFocus",
              "description": "focusRange is in format [distance,blur]. Prepares the camera focus blur.\n\n[-1,1] will reset default values (auto focusing), [-1,-1] will disable postprocessing (all is focused). Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPrepareFocus ${2:focusRange}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFov",
              "description": "Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPrepareFov ${2:fieldOfView}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFovRange",
              "description": "Prepares the camera field of view range for auto zooming. \n\u26a0This command is non-functional!",
              "snippet": "camPrepareFovRange ${2:fovRange}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreparePos",
              "description": "Prepares the camera position (format Position). Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPreparePos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareRelPos",
              "description": "Prepares the camera position relative to the current position of the currect target (see camPrepareTarget). Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPrepareRelPos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareTarget",
              "description": "Prepares the camera target to a position or to a target. Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPrepareTarget ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareTarget",
              "description": "Prepares the camera target to a position or to a target. Needs the call of camCommitPrepared to be conducted.",
              "snippet": "camPrepareTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetBank",
              "description": "Sets camera bank angle. Does not commit changes.\n\u26a0This command is non-functional!",
              "snippet": "camSetBank ${2:bank}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetDir",
              "description": "Sets the orientation of the given camera in the direction of the given vector. Needs camCommit.",
              "snippet": "camSetDir ${2:direction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetDive",
              "description": "Sets camera dive angle. Does not commit changes. \n\u26a0This command is non-functional!",
              "snippet": "camSetDive ${2:dive}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFocus",
              "description": "Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see camCommit). Use [-1, -1] to disable focus completely.",
              "snippet": "camSetFocus ${2:focusRange}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFov",
              "description": "Set the zoom level (Field Of View) of the given camera.\n\nThe zoom level is from 0.01 for the nearest and 8.5 for the furthest zoom value, with a default zoom level of 0.75\n\nThe angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommit to be conducted.",
              "snippet": "camSetFov ${2:level}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFovRange",
              "description": "Set the zoom level (Field Of View) start and end values for automatical zooming. \n\nThe default zoom level is 0.7 where 0 is the nearest and 1 is the most far zoom value.\n \u26a0This command is non-functional!",
              "snippet": "camSetFovRange ${2:fovRange}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetPos",
              "description": "Sets the position of the given camera or seagull (see camCreate). It is worth mentioning that camera position can also be set with setPos, in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with camCommit, which is required in this case.",
              "snippet": "camSetPos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetRelPos",
              "description": "Sets the position of the given camera relative to its target, set with camSetTarget. Needs a call to camCommit to be conducted.\u26a0Since it sets relative position to the target, the camSetTarget command should be executed already, before camSetRelPos.",
              "snippet": "camSetRelPos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetTarget",
              "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted. To reset the target use objNull.",
              "snippet": "camSetTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "camera ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetTarget",
              "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted. To reset the target use objNull.",
              "snippet": "camSetTarget ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camTarget",
              "description": "Returns camera's target.",
              "snippet": "camTarget ${1:camera}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camUseNVG",
              "description": "Set / clear using of night vision during cutscenes. This command only works with camCreate created camera that is currently the main camera for the player (see example).",
              "snippet": "camUseNVG ${1:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAdd",
              "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.",
              "snippet": "canAdd ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAdd",
              "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.",
              "snippet": "canAdd ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToBackpack",
              "description": "Checks if given object can be stored into soldier's backpack.",
              "snippet": "canAddItemToBackpack ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToBackpack",
              "description": "Checks if given object can be stored into soldier's backpack.",
              "snippet": "canAddItemToBackpack ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToUniform",
              "description": "Checks if given object can be stored into soldier's uniform.",
              "snippet": "canAddItemToUniform ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToUniform",
              "description": "Checks if given object can be stored into soldier's uniform.",
              "snippet": "canAddItemToUniform ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToVest",
              "description": "Checks if given object can be stored into soldier's vest.",
              "snippet": "canAddItemToVest ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToVest",
              "description": "Checks if given object can be stored into soldier's vest.",
              "snippet": "canAddItemToVest ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cancelSimpleTaskDestination",
              "description": "Cancels a simple task destination.",
              "snippet": "cancelSimpleTaskDestination ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canFire",
              "description": "Returns true if the given vehicle is still able to fire. For the command to return true, vehicle must be alive, have weapon operator and the weapon cannot be damaged \u2265 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or setVehicleAmmo 0 command is executed on the vehicle, then canFire will always report false for it.",
              "snippet": "canFire ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canMove",
              "description": "Returns if the given vehicle is still able to move.\n\u24d8\nThis command does not check for the amount of fuel the vehicle has, except for helicopters and airplanes.\nA helicopter with a damaged tail rotor may return that it cannot move, where a skilled pilot could use it.",
              "snippet": "canMove ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = heli ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canSlingLoad",
              "description": "Returns true if setSlingLoad is possible.",
              "snippet": "canSlingLoad ${2:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canStand",
              "description": "Returns if the given soldier is able to stand up.",
              "snippet": "canStand ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canSuspend",
              "description": "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.\n\n\u24d8The definition of scheduled and unscheduled environment is not the same as whether or not the script execution can or cannot be suspended. For example while .sqs and .fsm scripts are scheduled (i.e. added to the scheduler: diag_activeSQSScripts, diag_activeMissionFSMs), they cannot use sleep or be suspended like execVM or spawn scripts can, therefore canSuspend for these types of scripts will return false.",
              "text": "canSuspend"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canTriggerDynamicSimulation",
              "description": "A getter for triggerDynamicSimulation",
              "snippet": "canTriggerDynamicSimulation ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canUnloadInCombat",
              "description": "Check if cargo of this vehicle want to get out when in combat.",
              "snippet": "canUnloadInCombat ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canVehicleCargo",
              "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle",
              "snippet": "canVehicleCargo ${2:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/captive",
              "description": "Returns the captive state of the given unit (set with setCaptive). A captive unit will not be attacked by its enemies.\n\u26a0While a captive unit won't be attacked, it will still attack its enemies \u2013 be sure to setBehaviour \"CARELESS\" / removeAllWeapons accordingly.",
              "snippet": "captive ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/captiveNum",
              "description": "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.\nIf a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).",
              "snippet": "captiveNum ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Switch Type) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/case",
              "description": "This command is used inside a switch do construct. Although the syntax below states that this operator takes only one argument, that is most likely not true. It seems like it needs two arguments of which the left one is some sort of hidden variable that gets defined inside a switch do construct. That is the reason why this operator can not be used outside a switch do construct. (see https://foxhound.international/arma-3-sqf-grammar.html for further explaination)\nAlso note that it is not possible to store the returned Switch Type in a variable and use that variable in another switch do construct. It will never lead to an execution of the corresponding code block.",
              "snippet": "case ${1:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/catch",
              "description": "Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable.",
              "snippet": "catch ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cbChecked",
              "description": "Returns the current state of a checkbox (CT_CHECKBOX type 77 of Arma: GUI Configuration).",
              "snippet": "cbChecked ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cbSetChecked",
              "description": "Sets the current state of a checkbox (CT_CHECKBOX type 77 of Arma: GUI Configuration). Use \"CheckedChanged\" control event handler with it.",
              "snippet": "cbSetChecked ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ceil",
              "description": "The ceil value of x.",
              "snippet": "ceil ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/channelEnabled",
              "description": "Returns true or false depending on whether the given channel is enabled or disabled. For more information about enabling/disabling of chat channels see enableChannel.\n\n\nchannel ID number correspondence\n\n\nGlobal\n\nSide\n\nCommand\n\nGroup\n\nVehicle\n\nDirect\n\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n\u24d8Custom radios (6..15) are not supported.\n\u26a0Before Arma 3 v1.59.135661, the output of this command was Boolean.",
              "snippet": "channelEnabled ${1:channel}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cheatsEnabled",
              "description": "Checks whether cheats are enabled (whether the designers' version is running).",
              "text": "cheatsEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/checkAIFeature",
              "description": "Checks if the given AI feature is currently enabled. Feature may be one of:\n\n\"AwareFormationSoft\"\n\"CombatFormationSoft\"\n\nSince Arma 3 v1.95.145843 this command also supports disableAI / enableAI feature set via an alternative syntax.",
              "snippet": "checkAIFeature ${1:feature}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/checkAIFeature",
              "description": "Checks if the given AI feature is currently enabled. Feature may be one of:\n\n\"AwareFormationSoft\"\n\"CombatFormationSoft\"\n\nSince Arma 3 v1.95.145843 this command also supports disableAI / enableAI feature set via an alternative syntax.",
              "snippet": "checkAIFeature ${2:feature}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = [ignore, LOD, ignore2] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/checkVisibility",
              "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.",
              "snippet": "checkVisibility ${5:[${6:beg}, ${7:end}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/civilian",
              "description": "Pre-defined variable for the civilian side.\n\nWhen used in a format statement (hint format[\"%1\",civilian]), the string returned is \"CIV\".",
              "text": "civilian"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/className",
              "description": "Returns short name of location.",
              "snippet": "className ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clear3DENAttribute",
              "description": "Clears the value of the given entity's attribute in Eden Editor.\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "clear3DENAttribute ${2:attribute}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clear3DENInventory",
              "description": "Deletes inventory from mission.sqm of given units. Effect is not immediately visible, only when previewing the inventory resets to default.",
              "snippet": "clear3DENInventory ${1:entities}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearAllItemsFromBackpack",
              "description": "Removes all items from backpack of a unit.",
              "snippet": "clearAllItemsFromBackpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearBackpackCargo",
              "description": "Removes all backpacks from ammo box (or any general weapon holder container).",
              "snippet": "clearBackpackCargo ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearBackpackCargoGlobal",
              "description": "Removes all backpacks from the vehicle cargo space. MP synchronized.",
              "snippet": "clearBackpackCargoGlobal ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearForcesRTD",
              "description": "Removes all force generators from world.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "text": "clearForcesRTD"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearGroupIcons",
              "description": "Removes all icon from group.",
              "snippet": "clearGroupIcons ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemCargo",
              "description": "Removes all items from ammo box (or any general weapon holder container).",
              "snippet": "clearItemCargo ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemCargoGlobal",
              "description": "Removes all items from ammo box (or any general weapon holder container).",
              "snippet": "clearItemCargoGlobal ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemPool",
              "description": "Removes all items from ammo box (or any general weapon holder container)",
              "snippet": "clearItemPool ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazineCargo",
              "description": "Remove all magazines from the given vehicle's magazine cargo space.",
              "snippet": "clearMagazineCargo ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazineCargoGlobal",
              "description": "Removes all magazines from the vehicle cargo space. MP synchronized.",
              "snippet": "clearMagazineCargoGlobal ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazinePool",
              "description": "Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.",
              "text": "clearMagazinePool"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearOverlay",
              "description": "Clear the current overlay.\n\u24d8Some Old Editor Command",
              "snippet": "clearOverlay ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearRadio",
              "description": "Clean up the content of radio protocol history.",
              "text": "clearRadio"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearVehicleInit",
              "description": "Clears the object's init.\n\nFor security reasons, the command was disabled in Arma 3.",
              "snippet": "clearVehicleInit ${1:objectName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponCargo",
              "description": "Remove all weapons from the given vehicle's weapon cargo space.",
              "snippet": "clearWeaponCargo ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponCargoGlobal",
              "description": "Removes all weapons from the vehicle cargo space. MP synchronized.",
              "snippet": "clearWeaponCargoGlobal ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponPool",
              "description": "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.",
              "text": "clearWeaponPool"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clientOwner",
              "description": "Returns the  machine network ID of the client executing the command.",
              "text": "clientOwner"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeDialog",
              "description": "Close the currently active user dialog with exit code. Most common exit codes are:\n#define IDC_OK            1 //emulate \"Ok\" button\n#define IDC_CANCEL        2 //emulate \"Cancel\" button",
              "snippet": "closeDialog ${1:exitcode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeDisplay",
              "description": "Closes given display with exit code. It does not instantly close the display but does it on next simulation cycle. Most common exit codes are:\n#define IDC_OK\t\t1 // emulate \"OK\" button\n#define IDC_CANCEL\t2 // emulate \"Cancel\" button\n\n\u26a0Sometimes when one display is opened on top of another display, previous display may not close properly, i.e. some display EHs such as \"onUnload\" may never fire. Use this command to manually handle such displays.",
              "snippet": "closeDisplay ${2:exitCode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeOverlay",
              "description": "Closes the current overlay without committing. \n\u24d8Some Old Editor Command",
              "snippet": "closeOverlay ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collapseObjectTree",
              "description": "Collapse the object tree.\n\u24d8Some Old Editor Command",
              "snippet": "collapseObjectTree ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collect3DENHistory",
              "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.",
              "snippet": "collect3DENHistory ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collectiveRTD",
              "description": "Returns the current position of a helicopter's collective pitch control.\n0: fully lowered\n1: fully raised\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "collectiveRTD ${1:helicopterRTD}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/combatMode",
              "description": "Returns the combat mode of the given AI  group. See setCombatMode for more information about combat modes.",
              "snippet": "combatMode ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandArtilleryFire",
              "description": "Orders a unit via radio to reload defined magazine and fire given number of rounds on the given position.",
              "snippet": "commandArtilleryFire ${2:[${3:position}, type, ${5:rounds}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandChat",
              "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "commandChat ${2:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[side, identity] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandChat",
              "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "commandChat ${4:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commander",
              "description": "In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander.",
              "snippet": "commander ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFire",
              "description": "Order the given unit to fire on the given target (via the radio).\nIf the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget).",
              "snippet": "commandFire ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFollow",
              "description": "Order the given unit to follow the given other unit (via the radio).",
              "snippet": "commandFollow ${2:followedunit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFSM",
              "description": "Orders a unit to process command defined by FSM file (via the radio).",
              "snippet": "commandFSM ${2:[fsm name, position, target]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandGetOut",
              "description": "Orders one or multiple units to get out from the vehicle (via the radio). Same as doGetOut with latter being silent. \n\nNotes:\nWorks for both AI and player entities\nAI unit gets back in - unless is under player command or combined with other sqf commands (orderGetIn false, allowGetIn false or leaveVehicle)\nIgnores vehicle's lock state - unlike action \"Eject\" and moveOut\nAI waits for execution until vehicle has stopped/is no longer flying (unclear if any timeout exists for order to be discarded) - unlike action \"Eject\" and moveOut\nPlays the vehicle's position's get out animation (same as action \"Eject\") - unlike moveOut\nWhen execute for multiple units, it waits till the action is completed, before the next to take his turn (same as action \"Eject\") - unlike moveOut\nAI gets back into formation afterwards\nWorks only on alive units - unlike action \"Eject\" (one after another) or moveOut (instantly)\nDoes not work on unconscious - unless the AI is under player command. Unlike moveOut or action \"Eject\" (but one after another))",
              "text": "commandGetOut"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandingMenu",
              "description": "Returns the name of the topmost commanding menu or \"\" if the menu is closed. For action menu visibility check see isActionMenuVisible.",
              "text": "commandingMenu"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandMove",
              "description": "Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message.",
              "snippet": "commandMove ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandRadio",
              "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "commandRadio ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[side, identity] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandRadio",
              "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "commandRadio ${4:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandStop",
              "description": "Order the given unit(s) to stop (via the radio). A stop command will never finish, the unit will never be ready.",
              "snippet": "commandStop ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandSuppressiveFire",
              "description": "Orders the given unit or a group of units to suppress the given position or target (with radio messages, see doSuppressiveFire if you don't want messages). \nWhen an Array of units is passed as param, only units from the same Group as the first unit in array are considered.\nThe unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops.\ncurrentCommand shows \"Suppress\" and there is no way of stopping unit before it completes random amount of rounds.\nIf position is passed as target param, it stays fixed.\nIf object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via getPosWorld, which could be different from PositionASL of the object, and it is fixed even if the target is able to change position later.",
              "snippet": "commandSuppressiveFire ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandTarget",
              "description": "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.",
              "snippet": "commandTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "units ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandWatch",
              "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target.",
              "snippet": "commandWatch ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "units ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandWatch",
              "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target.",
              "snippet": "commandWatch ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/comment",
              "description": "Define a comment. \n\nMainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script.\n\u26a0This command is evaluated during execution, and as such is infinitely slower than other SQF comment methods (//comment or /*comment*/; which do not exist at runtime). See SQF Syntax for additional documentation on comments.",
              "snippet": "comment ${1:commentMsg}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commitOverlay",
              "description": "Commit the current overlay. \n\u24d8Some Old Editor Command",
              "snippet": "commitOverlay ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Code) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/compile",
              "description": "Compiles String expression into Code.",
              "snippet": "compile ${1:expression}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Code) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/compileFinal",
              "description": "Compile expression and makes it final, preventing it from:\nrepeated compile or compileFinal\nremoval by nil\nremote rewrite using publicVariable, publicVariableClient and publicVariableServer\n\u24d8This feature is only available in retail version of Arma 3",
              "snippet": "compileFinal ${1:expression}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/completedFSM",
              "description": "Checks whether the given FSM is completed. The FSM handle is the number returned by the execFSM command.",
              "snippet": "completedFSM ${1:fsmHandle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/composeText",
              "description": "Creates a Structured Text by joining the given  structured or  plain text arguments.",
              "snippet": "composeText ${1:[argument1, argument2, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Config) = condition ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configClasses",
              "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. Slightly faster than configProperties, but doesn't account for config properties or inherited entries.\n\u26a0The condition code passed to configClasses should only be used for simple filter expressions and nothing more.",
              "snippet": "configClasses ${2:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configFile",
              "description": "Return root of config entries hierarchy.\nSee AllInOne Config for a full config extract as example.",
              "text": "configFile"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configHierarchy",
              "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported",
              "snippet": "configHierarchy ${1:configClass}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configName",
              "description": "Returns name of config entry.",
              "snippet": "configName ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configNull",
              "description": "A non-existing Config.\n\n\u26a0Unlike other null values (objNull, grpNull, etc), configNull returns true when compared to itself.\nconfigNull == configNull; //\u00a0returns true\nisNull configNull; //\u00a0returns true\nconfigNull isEqualTo configNull; //\u00a0returns true\nconfigNull == configFile >> \"ANonExistentEntry\"; //\u00a0returns true",
              "text": "configNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configOf",
              "description": "Returns config path of the provided object.",
              "snippet": "configOf ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configProperties",
              "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entires.\n\u26a0The condition code passed to configProperties should only be used for simple filter expressions and nothing more",
              "snippet": "configProperties ${1:[${2:config}, ${3:condition}, ${4:inherit}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceAddonList",
              "description": "Returns an array of addons (CfgPatches) in which the given config class is defined.",
              "snippet": "configSourceAddonList ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceMod",
              "description": "Returns modDir of the mod that given config class was loaded from.",
              "snippet": "configSourceMod ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceModList",
              "description": "Returns an array of mods (CfgMods) in which the given config class is defined.",
              "snippet": "configSourceModList ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/confirmSensorTarget",
              "description": "Sets for which Side the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.",
              "snippet": "confirmSensorTarget ${2:[${3:side}, ${4:isConfirmed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/connectTerminalToUAV",
              "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot.\nIf UAV is already connected to another terminal, this new connection will fail.",
              "snippet": "connectTerminalToUAV ${2:uav}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/connectToServer",
              "description": "Connects the client to the provided server.\n\u24d8\nonly works on the Main Menu.\nmust be executed from  UI context, such as onButtonDown or similar events (see User Interface Event Handlers).",
              "snippet": "connectToServer [${1:ip}, ${2:port}, ${3:password}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Control) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/controlNull",
              "description": "A non-existing Control. To compare non-existent objects use isNull or isEqualTo (see examples).",
              "text": "controlNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Control) = ctrlgrp ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/controlsGroupCtrl",
              "description": "Returns a child control with specified idc from a controls group",
              "snippet": "controlsGroupCtrl ${2:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyFromClipboard",
              "description": "Return the content of the (text) clipboard. \n\u26a0Disabled in Multiplayer for security reasons",
              "text": "copyFromClipboard"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyToClipboard",
              "description": "Copy text string to the clipboard. \n\u26a0In MP available only on the client that is server",
              "snippet": "copyToClipboard ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupTo ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyWaypoints",
              "description": "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.",
              "snippet": "copyWaypoints ${2:groupFrom}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cos",
              "description": "Cosine of a number, argument in degrees.",
              "snippet": "cos ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "description": "Can be used to count:\nthe number of elements in array (doesn\u2019t actually count them per se but rather returns already known array size)\nthe number of elements in array with condition\nthe number of sub-entries in a config object\nthe number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "snippet": "count ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = condition ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "description": "Can be used to count:\nthe number of elements in array (doesn\u2019t actually count them per se but rather returns already known array size)\nthe number of elements in array with condition\nthe number of sub-entries in a config object\nthe number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "snippet": "count ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "description": "Can be used to count:\nthe number of elements in array (doesn\u2019t actually count them per se but rather returns already known array size)\nthe number of elements in array with condition\nthe number of sub-entries in a config object\nthe number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "snippet": "count ${1:configname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "description": "Can be used to count:\nthe number of elements in array (doesn\u2019t actually count them per se but rather returns already known array size)\nthe number of elements in array with condition\nthe number of sub-entries in a config object\nthe number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "snippet": "count ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countEnemy",
              "description": "Count how many units in the array are considered enemy to the given unit.",
              "snippet": "countEnemy ${2:arrayName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countFriendly",
              "description": "Count how many units in the array are considered friendly to the given unit.",
              "snippet": "countFriendly ${2:arrayName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = side ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countSide",
              "description": "Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted.",
              "snippet": "countSide ${2:arrayName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countType",
              "description": "Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see Classes.",
              "snippet": "countType ${2:objects}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countUnknown",
              "description": "Count how many units in the array are unknown to the given unit.",
              "snippet": "countUnknown ${2:arrayName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENComposition",
              "description": "Create new Composition. To create individual entities, use create3DENEntity.",
              "snippet": "create3DENComposition [${1:configPath},  ${2:position}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Eden Entity) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENEntity",
              "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.\n\nThis is the only way how to add new editable entities to Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity won't be editable.",
              "snippet": "create3DENEntity [${1:mode}, ${2:class}, ${3:position}, (${4:isEmpty})]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Eden Entity) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENEntity",
              "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.\n\nThis is the only way how to add new editable entities to Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity won't be editable.",
              "snippet": "create3DENEntity [${2:mode}, ${3:class}, ${4:position}, (${5:isEmpty})]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createAgent",
              "description": "Creates an agent of the given type. An agent does not have a group or leader or the standard soldier FSM associated with it - for instance, an enemy soldier spawned as an agent has limited AI and will do nothing when fired upon - which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\".\n\u24d8Players assigned to an agent using selectPlayer will be able to control the agent, operate weapons and other actions, but will not be able to access their inventory using the gear screen.",
              "snippet": "createAgent ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}, ${6:special}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createCenter",
              "description": "Instanciate a Side center. A Side center is required to be able to create groups of this side.\nCenters can only be created for east, west, resistance, civilian and sideLogic sides.\nCreated sides must have their \"side-friendship\" defined with setFriend.\n\n\u24d8In Armed Assault and Arma 2, only Mission.sqm's units side centers are created; e.g if no resistance unit has been placed in the editor you must use createCenter before being able to create a resistance group.\nIn Arma 3, centers for all sides are all created by the engine.",
              "snippet": "createCenter ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDialog",
              "description": "Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.",
              "snippet": "createDialog ${1:dialogName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryLink",
              "description": "Creates a link to the section of diary given by subject. Record is selected based on given unit/object, diary record or task.",
              "snippet": "createDiaryLink ${1:[${2:subject}, ${3:record}, ${4:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryRecord",
              "description": "Creates a diary entry. Supported tags and their parameters: Show text\n\n\n\nTag\n\nOptions\n\n\nimg\n\n\nimage: String - path to image. When present, any element with it will be displayed as image.\nwidth: Number - image width in pixels.\nheight: Number - image height in pixels.\n\n\nfont\n\n\ncolor: String - HTML color in format #aarrggbb or #rrggbb\nsize: Number - font height in pixels.\nface: String - font type (class from CfgFontFamilies)\n\n\nbr\n\nN/A\n\n\nmarker\n\n\nname: String - marker name\n\n\nexecute\n\n\nexpression: String - executed code\n\n\nexecuteClose\n\n\nexpression: String - executed code, diary is closed afterwards\n\n\nlog\n\n\nsubject: String - subject name.\nrecord: String - record name (e.g. \"Record6\" or \"Unit1059524\")\n\n\ngear\n\n\nunit: Number - unit ID\n\n\nteamSwitch\n\n\nunit: Number - unit ID\n\n\nkick\n\n\nid: Number - unit ID\n\n\nban\n\n\nid: Number - unit ID\n\n\nmute\n\n\nid: Number - unit ID\n\n\ncurrentTask\n\n\nid: Number - task ID\n\n\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%    4.507      1 -total\n\n46.28%    2.086      1 Template:n/a\n43.53%    1.962      2 Template:=\n\n-->\n\n\n\n\u24d8If createDiaryRecord command fails, it returns null record, but since there is no null record unary command, you can make a variable and compare against it.\nprivate _nullRecord = objNull createDiaryRecord [];\n\n if (player createDiaryRecord [\"Diary\", [\"title\", \"description\"]] isEqualTo _nullRecord) then { hint \"Failed\" };",
              "snippet": "createDiaryRecord [${2:subject}, ${3:text}, task, taskState, ${6:showTitle}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryRecord",
              "description": "Creates a diary entry. Supported tags and their parameters: Show text\n\n\n\nTag\n\nOptions\n\n\nimg\n\n\nimage: String - path to image. When present, any element with it will be displayed as image.\nwidth: Number - image width in pixels.\nheight: Number - image height in pixels.\n\n\nfont\n\n\ncolor: String - HTML color in format #aarrggbb or #rrggbb\nsize: Number - font height in pixels.\nface: String - font type (class from CfgFontFamilies)\n\n\nbr\n\nN/A\n\n\nmarker\n\n\nname: String - marker name\n\n\nexecute\n\n\nexpression: String - executed code\n\n\nexecuteClose\n\n\nexpression: String - executed code, diary is closed afterwards\n\n\nlog\n\n\nsubject: String - subject name.\nrecord: String - record name (e.g. \"Record6\" or \"Unit1059524\")\n\n\ngear\n\n\nunit: Number - unit ID\n\n\nteamSwitch\n\n\nunit: Number - unit ID\n\n\nkick\n\n\nid: Number - unit ID\n\n\nban\n\n\nid: Number - unit ID\n\n\nmute\n\n\nid: Number - unit ID\n\n\ncurrentTask\n\n\nid: Number - task ID\n\n\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%    4.507      1 -total\n\n46.28%    2.086      1 Template:n/a\n43.53%    1.962      2 Template:=\n\n-->\n\n\n\n\u24d8If createDiaryRecord command fails, it returns null record, but since there is no null record unary command, you can make a variable and compare against it.\nprivate _nullRecord = objNull createDiaryRecord [];\n\n if (player createDiaryRecord [\"Diary\", [\"title\", \"description\"]] isEqualTo _nullRecord) then { hint \"Failed\" };",
              "snippet": "createDiaryRecord [${2:subject}, [${3:title}, ${4:text}], task, stateState, ${7:showTitle}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiarySubject",
              "description": "Create a new subject page in a log.",
              "snippet": "createDiarySubject ${2:[${3:subject}, ${4:displayName}, picture]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Display) = parent ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDisplay",
              "description": "Creates child display of given display and loads from \"resourceName\". The notable difference between createDisplay and createDialog is that with createDisplay the player would be able to move whilst having control of the mouse pointer.\nSince Arma 3 v1.49.131653 createDisplay returns Display and will first look in description.ext for resourceName config, if not found, it will then look in main config.\nDisplays created with both createDisplay and createDialog will take control of the mouse pointer and will close when user presses Esc. \n_emptyDisplay = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nIf display is needed which exists independently, it can be created in IGUI layer with cutRsc command. \n\"someLayer\" cutRsc [\"RscTitleDisplayEmpty\", \"PLAIN\"];\n_emptyDisplay = uiNamespace getVariable \"RscTitleDisplayEmpty\";\nSuch display can be closed with closeDisplay command or by overwriting the same cut layer with another output. Note that \"Unload\" EH for some reason does not work with such display.",
              "snippet": "createDisplay ${2:resourceName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGearDialog",
              "description": "Opens gear dialog for given unit. Alternatively use action command:\nplayer action [\"Gear\", player];",
              "snippet": "createGearDialog ${1:[${2:unit}, ${3:resource}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGroup",
              "description": "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side. \n\nNOTES \nThe default limit of groups created per side was 144. Since Arma 3 v1.67 it is increased to 288.\nSince Arma 3 v 1.67 it is possible to mark created group for automatic deletion when the group becomes empty (see Alt Syntax). When group is set to be automatically deleted when empty, when group becomes empty it may take up to a minute for it to get deleted.\n\nIn Arma 3 when last unit leaves its group, the group usually gets immediately auto deleted, regardless of whether or not if it was set for auto deletion manually\n\u24d8When true `deleteWhenEmpty` param can force a group to get deleted when empty, but cannot prevent a group from getting deleted when empty by other engine processes when false",
              "snippet": "createGroup ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGroup",
              "description": "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side. \n\nNOTES \nThe default limit of groups created per side was 144. Since Arma 3 v1.67 it is increased to 288.\nSince Arma 3 v 1.67 it is possible to mark created group for automatic deletion when the group becomes empty (see Alt Syntax). When group is set to be automatically deleted when empty, when group becomes empty it may take up to a minute for it to get deleted.\n\nIn Arma 3 when last unit leaves its group, the group usually gets immediately auto deleted, regardless of whether or not if it was set for auto deletion manually\n\u24d8When true `deleteWhenEmpty` param can force a group to get deleted when empty, but cannot prevent a group from getting deleted when empty by other engine processes when false",
              "snippet": "createGroup ${1:[${2:side}, ${3:deleteWhenEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGuardedPoint",
              "description": "Adds a point guarded by the given side (scripted way of adding equivalent of \"GUARDED BY\" trigger in Editor). A closest AI group in the given side with assigned \"GUARD\" waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:\nGiven \"position\" is always considered. It could be Object, Group, Position2D or Position3D. In every case, z coordinate will be ignored and point will be placed on nearest surface.\nIf \"objectMapID\" is not negative, the position of the object with the given ID is used (Overrides \"position\"). -1 to ignore this argument. z of the object position will be intact.\nIf the given \"vehicle\" is valid, the position of the vehicle is extracted and guarded (Overrides both \"position\" and \"objectMapID\"). objNull to ignore. z of the vehicle position will be intact.\nFor use with \"GUARD\" waypoint. How does \"GUARD\" waypoint work: Waypoint:Guard",
              "snippet": "createGuardedPoint [${2:side}, ${3:position}, ${4:objectMapID}, ${5:vehicle}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Location) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createLocation",
              "description": "Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes. For possible location types see Location Types. For the actual name text of the location, use text and setText",
              "snippet": "createLocation ${1:[${2:className}, ${3:position}, ${4:sizeX}, ${5:sizeY}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMarker",
              "description": "Creates a new map marker at the given position. The marker will be created for every player on network as well as JIP. The marker name has to be unique, if a marker with the given name exists, the command will be ignored. Use deleteMarker to delete global marker.\n\n\u26a0The marker will be visible if you define at least markerType settings:\n_markerName = createMarker [\"markername\", player];\n_markerName setMarkerType \"hd_dot\";\n\n\n\u24d8If position is given in 3D format, the z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. When marker is manually placed in the editor, z is 0, which means it is placed on the ground. However when user manually places marker on the map in game, it is placed on the water, so z of the marker will be: -getTerrainHeightASL markerPos <USERMARKER>",
              "snippet": "createMarker ${1:[${2:name}, ${3:${4:position}}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMarkerLocal",
              "description": "Creates a local marker at the given position. Marker exists only on PC that created it.  The marker name has to be unique, if a marker with the given name exists, the command will be ignored. Use deleteMarkerLocal to delete local marker.\nIf position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z. \n\n\u26a0Local markers have own set of local commands \"xxmarkerxxLocal\" to work with. If you use global marker command on a local marker, the local marker will become global marker.",
              "snippet": "createMarkerLocal ${1:[${2:name}, ${3:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMenu",
              "description": "Creates a previously added menu.\n\u24d8Some Old Editor Command",
              "snippet": "createMenu ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMine",
              "description": "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius. \n\u24d8The command creates object of the CfgAmmo class named in configFile >> \"CfgVehicles\" >> type >> \"ammo\". The following explosives used in Arma 3 could be created with this command:\nMines: \"ATMine\", \"APERSMine\", \"APERSBoundingMine\", \"SLAMDirectionalMine\", \"APERSTripMine\", \"UnderwaterMine\", \"UnderwaterMineAB\", \"UnderwaterMinePDM\"\nRemote detonation charges: \"SatchelCharge_F\", \"DemoCharge_F\", \"Claymore_F\", \"IEDUrbanBig_F\", \"IEDLandBig_F\", \"IEDUrbanSmall_F\", \"IEDLandSmall_F\"",
              "snippet": "createMine ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMissionDisplay",
              "description": "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".",
              "text": "display"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(For Type) = display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMissionDisplay",
              "description": "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".",
              "snippet": "createMissionDisplay [${2:missionRootDirectoryString},${3:cfgMissionsClass}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMPCampaignDisplay",
              "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; for example, configFile\u00a0>>\u00a0\"CfgMissions\"\u00a0>>\u00a0\"MPMissions\"\u00a0>>\u00a0\"Apex\"\nIf the class doesn't exist or isn't a mission collection, the display will be created empty.",
              "snippet": "createMPCampaignDisplay ${1:class}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleObject",
              "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: createSimpleObject/objects. For Livonia furniture see: Arma 3 Livonia Props.\n\nGuide: Arma 3 Simple Objects\n\n\u24d8One cannot attach actions to a simple object via addAction.\n\u26a0The path to the .p3d model should not contain leading slash, Incorrect: \"\\a3\\armor_f_beta..., Correct: \"a3\\armor_f_beta...\n\nNOTES: \n\nObjects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction.\nObjects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle.\nSince Arma 3 v1.67 simple objects support setVariable and getVariable. Since Arma 3 v1.95.145741 it is possible to create local object instances, similar to createVehicleLocal",
              "snippet": "createSimpleObject ${1:[${2:shapeName}, ${3:positionWorld}, ${4:local}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleObject",
              "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: createSimpleObject/objects. For Livonia furniture see: Arma 3 Livonia Props.\n\nGuide: Arma 3 Simple Objects\n\n\u24d8One cannot attach actions to a simple object via addAction.\n\u26a0The path to the .p3d model should not contain leading slash, Incorrect: \"\\a3\\armor_f_beta..., Correct: \"a3\\armor_f_beta...\n\nNOTES: \n\nObjects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction.\nObjects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle.\nSince Arma 3 v1.67 simple objects support setVariable and getVariable. Since Arma 3 v1.95.145741 it is possible to create local object instances, similar to createVehicleLocal",
              "snippet": "createSimpleObject ${1:[${2:className}, ${3:positionASL}, ${4:local}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleTask",
              "description": "Creates a new Task. The task effect is local, it will only exist on the client it was added. \n\n\u26a0Using the Arma 3 Task Framework instead is recommended",
              "snippet": "createSimpleTask ${2:[${3:name}, ${4:parentTask}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSite",
              "description": "Create a new site. \n\u26a0This command is considered deprecated and is no longer supported",
              "snippet": "createSite ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSoundSource",
              "description": "Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX). The actual sound object created is of type \"#dynamicsound\" and could be detected with allMissionObjects. If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in Arma 3:\n\"Sound_Alarm\"\n\"Sound_Alarm2\"\n\"Sound_BattlefieldExplosions\"\n\"Sound_BattlefieldFirefight\"\n\"Sound_Fire\"\n\"Sound_SmokeWreck1\"\n\"Sound_SparklesWreck1\"\n\"Sound_SparklesWreck2\"\n\"Sound_Stream\"\nSince Arma 3 v1.69.141183 it is possible to define sounds for use with createSoundSource in mission config. As mentioned earlier, the sounds needed for this command should be defined inside CfgVehicles class, which itself references CfgSFX class. If given class searched in main config and is not found, the search will continue in description.ext. Here is an example of suitable mission config definition:\n\n// description.ext\n\nclass CfgSFX\n{\n\tclass MyOwl\n\t{\n\t\tsound0[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl1\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound1[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl2\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound2[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl3\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsounds[] = {sound0, sound1, sound2};\n\t\tempty[] = {\"\", 0, 0, 0, 0, 0, 0, 0};\n\t};\n};\n\nclass CfgVehicles\n{\n\tclass MyOwlSound // class name to be used with createSoundSource\n\t{\n\t\tsound = \"MyOwl\"; // reference to CfgSFX class\n\t};\n};\n\n_owl = createSoundSource [\"MyOwlSound\", position player, [], 0];\nNote that the sound created by createSoundSource will always be looping. Also when CfgSFX sound definition contains more than 1 sound, there is no guarantee that the sound played will be the same on every PC in Multiplayer.\n\n\u26a0For some unknown reason if at the moment of command execution the player is in first person view and is inside a vehicle, the sound created is greatly attenuated",
              "snippet": "createSoundSource ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Target) = obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTarget",
              "description": "Create a target. Not yet implemented.",
              "snippet": "createTarget ${2:[${3:type}, ${4:position}, ${5:typeAccuracy}, ${6:posAccuracy}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTask",
              "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
              "snippet": "createTask [${2:[${3:type}, parentTask]}, ${5:priority}, ${6:name1}, ${7:value1}, (...), nameN, valueN]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Team Member) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTeam",
              "description": "Create a team and name it.",
              "snippet": "createTeam ${1:[${2:type}, ${3:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTrigger",
              "description": "Creates a sensor (trigger) of the given type and at the given position. The type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector. An array containing all units that have activated the trigger is available via list triggerobj. Created triggers can be deleted using deleteVehicle.\n\n\u24d8Since Arma 3 v1.43.129935 triggers can be created locally on clients setting optional param makeGlobal to false\n\u24d8Since Arma 3 v1.53.132440 triggers can be disabled/enabled using enableSimulation command\nTriggers are created with default params, which are:\n\na: 50.0\nb: 50.0\nc: -1\nangle: 0\nrectangular: false\nactivationBy: None\nactivationType: Present\nrepeating: false\ntimeoutMin: 0\ntimeoutMid: 0\ntimeoutMax: 0\ninterruptable: true\ntype: None\ntext: \"\"\nname: \"\"\nexpCond: \"this\"\nexpActiv: \"\"\nexpDesactiv: \"\"\ninterval: 0.5 (Cannot be accessed via editor,  scripted only since Arma 3 v1.97.146056)",
              "snippet": "createTrigger ${1:[${2:type}, ${3:position}, ${4:makeGlobal}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createUnit",
              "description": "Create a unit of class that is defined in CfgVehicles.\n\u26a01.34 1.00\nThis command could be bugged in Operation Flashpoint or Armed Assault\u00a0; an additional join may solve the problem.\n\nHowever, some commands such as setUnitPos only work if run before the join.\n\u26a0The unit will not be created if the passed group does not exist (a.k.a grpNull); this can happen if createGroup fails because the group limit has been reached (see createGroup for respective game limits).",
              "snippet": "createUnit ${2:[${3:type}, ${4:position}, ${5:markers}, ${6:placement}, ${7:special}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createUnit",
              "description": "Create a unit of class that is defined in CfgVehicles.\n\u26a01.34 1.00\nThis command could be bugged in Operation Flashpoint or Armed Assault\u00a0; an additional join may solve the problem.\n\nHowever, some commands such as setUnitPos only work if run before the join.\n\u26a0The unit will not be created if the passed group does not exist (a.k.a grpNull); this can happen if createGroup fails because the group limit has been reached (see createGroup for respective game limits).",
              "snippet": "createUnit ${2:[${3:position}, ${4:group}, ${5:init}, ${6:skill}, ${7:rank}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicle",
              "description": "Creates an empty object of given classname type.\nSee Arma 3 Assets / createVehicle/vehicles, or Category:CfgVehicles for earlier games.\n\n\u24d8For objects of type \"Logic\" use createUnit instead.\nTo avoid vehicle randomisation in Arma 3, set the BIS_enableRandomization variable immediately after creating the vehicle:\nprivate _vehicle = \"C_Offroad_01_F\" createVehicle position player;\n_vehicle setVariable [\"BIS_enableRandomization\", false];\n\nCheck Vehicle Customization (VhC) page for more information and settings.",
              "snippet": "createVehicle ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicle",
              "description": "Creates an empty object of given classname type.\nSee Arma 3 Assets / createVehicle/vehicles, or Category:CfgVehicles for earlier games.\n\n\u24d8For objects of type \"Logic\" use createUnit instead.\nTo avoid vehicle randomisation in Arma 3, set the BIS_enableRandomization variable immediately after creating the vehicle:\nprivate _vehicle = \"C_Offroad_01_F\" createVehicle position player;\n_vehicle setVariable [\"BIS_enableRandomization\", false];\n\nCheck Vehicle Customization (VhC) page for more information and settings.",
              "snippet": "createVehicle ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}, special]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicleCrew",
              "description": "Creates vehicle crew corresponding to vehicle's faction. The command creates driver, if the vehicle has driver position (vehicle config: hasDriver) and fills  all non-FFV turrets with gunners, if turrets can have gunners (turret config: hasGunner). Any turret that has dontCreateAI option set is omitted. If the vehicle is already occupied, the command will only create missing crew.\nSince Arma 3 v1.93.145652 this command will return Group of the created crew which will be vehicle's group. Missing crew will be created in the same group as vehicle. To find out which crew will be created, use BIS_fnc_vehicleCrewTurrets.\n  \n\u24d8This command does not addVehicle to the created crew in the same way this normally happens when crewed vehicle created in the editor. See BIS_fnc_spawnVehicle for a full vehicle and crew creation and group addition.\n\u26a0While a vehicle with a crew placed in editor will have all crew units of the rank \"PRIVATE\", this command will create the driver as \"LIEUTENANT\" and all turret units as \"SERGEANT\"",
              "snippet": "createVehicleCrew ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = type ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicleLocal",
              "description": "Creates an object of the given type. Created object is not transferred through network in MP games. netId of such vehicle in multiplayer will be \"0:0\". To disable local vehicle creation, use CfgDisabledCommands to blacklist this command. Alternatively, you can use createSimpleObject with local option enabled where applicable.",
              "snippet": "createVehicleLocal ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/crew",
              "description": "Returns the crew (both dead and alive) of the given vehicle.",
              "snippet": "crew ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctAddHeader",
              "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in a format [<headerIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
              "snippet": "ctAddHeader ${1:Control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctAddRow",
              "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
              "snippet": "ctAddRow ${1:Control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctClear",
              "description": "Removes all the lines from the RscControlsTable. Returns Nothing.",
              "snippet": "ctClear ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctCurSel",
              "description": "Returns index of the selected row. Will take only rows, but not headers into account.",
              "snippet": "ctCurSel ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctData",
              "description": "Returns metadata (string) associated with a particular row of RscControlsTable.",
              "snippet": "ctData ${2:row}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctFindHeaderRows",
              "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.",
              "snippet": "ctFindHeaderRows ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctFindRowHeader",
              "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.",
              "snippet": "ctFindRowHeader ${2:row}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctHeaderControls",
              "description": "Returns array of controls on the header with the given index.",
              "snippet": "ctHeaderControls ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctHeaderCount",
              "description": "Returns number of headers (rows not included) in the RscControlsTable.",
              "snippet": "ctHeaderCount ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRemoveHeaders",
              "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.",
              "snippet": "ctRemoveHeaders ${2:indices}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRemoveRows",
              "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.",
              "snippet": "ctRemoveRows ${2:indices}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlActivate",
              "description": "Launch actions attached to given (button based) control.  \nCommand only triggers action entry described in control config and engine-based actions (cancel or ok codes) and will not trigger button related User Interface Event Handlers.\nCommand ignores control disabled state. (Example 2)",
              "snippet": "ctrlActivate ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAddEventHandler",
              "description": "Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed.\n\u26a0Control EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.\n\n\n\u26a0When using the event names listed here with the ctrlAddEventHandler, ctrlSetEventHandler, displayAddEventHandler or displaySetEventHandler commands, the prefix \"on\" in the event name must be removed (e.g. 'ButtonDown' instead of 'onButtonDown').",
              "snippet": "ctrlAddEventHandler ${2:[${3:handler},${4:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAngle",
              "description": "Gets rotation info of an ST_PICTURE control.",
              "snippet": "ctrlAngle ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAnimateModel",
              "description": "Process an animation of 3D Arma: GUI Configuration. Command uses name defined by source property and works similar like animateSource command.",
              "snippet": "ctrlAnimateModel ${2:[${3:source}, ${4:phase}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAnimationPhaseModel",
              "description": "Returns current animation phase of given source. Similar to animationSourcePhase.",
              "snippet": "ctrlAnimationPhaseModel ${2:source}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollDelay",
              "description": "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present. \n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlAutoScrollDelay ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollRewind",
              "description": "Returns true if auto-scroll should move back to start after it reaches the end.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlAutoScrollRewind ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollSpeed",
              "description": "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present. \n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlAutoScrollSpeed ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlChecked",
              "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES type 7 of Arma: GUI Configuration). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes. \n\u24d8The \"CheckBoxesSelChanged\" control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command",
              "snippet": "ctrlChecked ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlChecked",
              "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES type 7 of Arma: GUI Configuration). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes. \n\u24d8The \"CheckBoxesSelChanged\" control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command",
              "snippet": "ctrlChecked ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlClassName",
              "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display itself:\n_className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"",
              "snippet": "ctrlClassName ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCommit",
              "description": "Commits control animation to last specified duration. \n\u26a0The animation is not guaranteed to last given duration exactly, it could be shorter it could be longer, it depends on how busy is the rest of the system",
              "snippet": "ctrlCommit ${2:time}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCommitted",
              "description": "Check if the control animation is finished.",
              "snippet": "ctrlCommitted ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Control) = display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCreate",
              "description": "Creates a new control in the given display. The control class could be existing class from  main config or custom class defined in  mission config (main config is searched first, if no such class exists, mission config is searched). Some of the common controls defined in main config that can be used with this command:\nRscText - simple text box\nRscStructuredText - text box which supports structured text\nRscTextMulti - simple multiline text box\nRscPicture - simple picture box\nRscPictureKeepAspect - picture box that doesn't stretch picture\nRscEdit - input box\nRscEditMulti - multiline input box\nRscEditReadOnly - input box with  canModify = false; (since v1.97)\nRscEditMultiReadOnly - multiline input box with  canModify = false; (since v1.97)\nRscTree - tree view control\nRscTreeMulti - multi-select tree view (since v2.01)\nRscTreeSearch - searchable tree view control (see Example 4)\nRscVideo - picture control with autostart for video texture (see BIS_fnc_playVideo)\nRscVideoKeepAspect - picture control for video to keep original video aspect ratio\nRscButtonMenuBIKI - shortcut button with url pointing to \"https://community.bistudio.com/wiki/\" (since v1.97)\nRscControlsGroup - default controls group\nRscControlsGroupNoScrollbars - controls group without scrollbars\nRscControlsGroupNoHScrollbars - controls group without horizontal scrollbar\nRscControlsGroupNoVScrollbars - controls group without vertical scrollbar",
              "snippet": "ctrlCreate ${2:[${3:class}, ${4:idc}, ${5:controlsGroup}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlDelete",
              "description": "Deletes given control. The control has to be created either by script with ctrlCreate or to have deletable property in config set to true. Use ctrlShow false and ctrlEnable false to disable controls that cannot be deleted. Returns Boolean indicating  whether the deletion was successful.",
              "snippet": "ctrlDelete ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnable",
              "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlEnable ${1:[${2:idc}, ${3:enable}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnable",
              "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlEnable ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnabled",
              "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlEnabled ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnabled",
              "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlEnabled ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlFade",
              "description": "Returns the current fade factor of control.",
              "snippet": "ctrlFade ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlFontHeight",
              "description": "Returns control's font size, usually sizeEx value (see ctrlSetFontHeight).",
              "snippet": "ctrlFontHeight ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlHTMLLoaded",
              "description": "Returns true when HTML content was successfully loaded.",
              "snippet": "ctrlHTMLLoaded ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlIDC",
              "description": "Returns control IDC.",
              "snippet": "ctrlIDC ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlIDD",
              "description": "Returns display IDD.",
              "snippet": "ctrlIDD ${1:display}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimAdd",
              "description": "Adds the next frame to the map animation.",
              "snippet": "ctrlMapAnimAdd ${2:[${3:time}, ${4:zoom}, ${5:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimClear",
              "description": "Clears the map animation.",
              "snippet": "ctrlMapAnimClear ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimCommit",
              "description": "Plays the map animation.",
              "snippet": "ctrlMapAnimCommit ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimDone",
              "description": "Checks whether the map animation has finished.",
              "snippet": "ctrlMapAnimDone ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapCursor",
              "description": "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of Arma 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from CfgWrapperUI / Cursors. This command has the following specifics:\nWhen used on Main Map (findDisplay 12 displayCtrl 51) it is possible to override multiple default cursors. For example, while leaving default \"Arrow\" intact, it is possible to just override \"Scroll\" with lets say \"Wait\" (Example 3)\nWhen used on a custom map, for example user made Mini Map, there is only one single cursor \"\" for everything, therefore only this cursor can be overridden (see Example 4 on how to override it)\nSome possible class names (for the whole list see ctrlMapCursor/cursors):\nArrow\nTrack\nMove\nScroll\nRotate\nTrack3D\nMove3D\nRotate3D\nRaise3D\nWait\nHC_move\nHC_overFriendly\nHC_overEnemy\nHC_overMission\nHC_unsel\nNOTE1: Cursor names are case sensitive.",
              "snippet": "ctrlMapCursor [${2:defaultCursor}, ${3:newCursor}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Group, Array, String, Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapMouseOver",
              "description": "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.",
              "snippet": "ctrlMapMouseOver ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapScale",
              "description": "Returns the current scale of given map control.",
              "snippet": "ctrlMapScale ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapScreenToWorld",
              "description": "Converts map screen coordinates into world coordinates. Unlike posScreenToWorld, this command returns world position is format [x, y], otherwise it is identical to posScreenToWorld.",
              "snippet": "ctrlMapScreenToWorld ${2:[${3:x}, ${4:y}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapWorldToScreen",
              "description": "Converts world coordinates into map screen coordinates. This command is identical to posWorldToScreen.",
              "snippet": "ctrlMapWorldToScreen ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModel",
              "description": "Returns model used in 3D-Dialog.",
              "snippet": "ctrlModel ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModelDirAndUp",
              "description": "Returns vectorDir and vectorUp of the model used in 3D-Dialogs.",
              "snippet": "ctrlModelDirAndUp ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModelScale",
              "description": "Returns 3D control model scale",
              "snippet": "ctrlModelScale ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMousePosition",
              "description": "Returns position of the mouse on the screen relative to UI Control in UI coordinates.",
              "snippet": "ctrlMousePosition ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlParent",
              "description": "Returns display the given control is created on. For parent controls group control see ctrlParentControlsGroup.",
              "snippet": "ctrlParent ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Control) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlParentControlsGroup",
              "description": "Returns the parent control of a given child control. If the control is not part of a CT_CONTROLS_GROUP control then controlNull is returned.",
              "snippet": "ctrlParentControlsGroup ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlPosition",
              "description": "Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z].",
              "snippet": "ctrlPosition ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlRemoveAllEventHandlers",
              "description": "Remove all event handlers from the given control.",
              "snippet": "ctrlRemoveAllEventHandlers ${2:handlerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlRemoveEventHandler",
              "description": "Remove a given event handler from the given control.",
              "snippet": "ctrlRemoveEventHandler ${2:[handler name,id]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlScale",
              "description": "Returns the current scale of the control.",
              "snippet": "ctrlScale ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlScrollValues",
              "description": "Returns scroll values for current scrollbars in range 0...1 (-1 if not applicable) for the following controls:\n\nCT_CONTROLS_TABLE\nCT_CONTROLS_GROUP\nCT_TREE\nCT_LISTBOX\nCT_COMBO\nCT_XCOMBO\nCT_LISTNBOX\nCT_LISTNBOX_CHECKABLE",
              "snippet": "ctrlScrollValues ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetActiveColor",
              "description": "Sets text color of given control when control is selected.",
              "snippet": "ctrlSetActiveColor ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAngle",
              "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.",
              "snippet": "ctrlSetAngle ${2:[${3:angle}, ${4:centerX}, ${5:centerY}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAngle",
              "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.",
              "snippet": "ctrlSetAngle [${3:angle}, ${4:centerX}, ${5:centerY}, ${6:now}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollDelay",
              "description": "Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlSetAutoScrollDelay ${2:delay}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollRewind",
              "description": "Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlSetAutoScrollRewind ${2:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollSpeed",
              "description": "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "snippet": "ctrlSetAutoScrollSpeed ${2:speed}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetBackgroundColor",
              "description": "Sets background color of given control.",
              "snippet": "ctrlSetBackgroundColor ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetChecked",
              "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES type 7 of Arma: GUI Configuration). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.",
              "snippet": "ctrlSetChecked ${2:checked}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetChecked",
              "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES type 7 of Arma: GUI Configuration). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.",
              "snippet": "ctrlSetChecked ${2:[${3:index}, ${4:checked}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetEventHandler",
              "description": "Sets given event handler of given control.\n\nThe provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it is default code or not afterwards. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp. \n\u26a0When using the event names listed here with the ctrlAddEventHandler, ctrlSetEventHandler, displayAddEventHandler or displaySetEventHandler commands, the prefix \"on\" in the event name must be removed (e.g. 'ButtonDown' instead of 'onButtonDown').",
              "snippet": "ctrlSetEventHandler ${2:[${3:handlerName}, ${4:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFade",
              "description": "Sets wanted transparency for control animation. Requires ctrlCommit to commit changes. To hide or show a control instantly, use ctrlShow.",
              "snippet": "ctrlSetFade ${2:fade}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFocus",
              "description": "Set the input focus on given control.",
              "snippet": "ctrlSetFocus ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFont",
              "description": "Sets the font for given control (see Fonts)\nAvailable Arma 3 fonts\n\"EtelkaMonospacePro\"\n\"EtelkaMonospaceProBold\"\n\"EtelkaNarrowMediumPro\"\n\"LCD14\"\n\"LucidaConsoleB\"\n\"PuristaBold\"\n\"PuristaLight\"\n\"PuristaMedium\"\n\"PuristaSemibold\"\n\"RobotoCondensed\"\n\"RobotoCondensedBold\"\n\"RobotoCondensedLight\"\n\"TahomaB\"",
              "snippet": "ctrlSetFont ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH1",
              "description": "Sets H1 font of given HTML control.",
              "snippet": "ctrlSetFontH1 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH1B",
              "description": "Sets H1 bold font of given HTML control.",
              "snippet": "ctrlSetFontH1B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH2",
              "description": "Sets H2 font of given HTML control",
              "snippet": "ctrlSetFontH2 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH2B",
              "description": "Sets H2 bold font of given HTML control.",
              "snippet": "ctrlSetFontH2B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH3",
              "description": "Sets H3 font of given HTML control.",
              "snippet": "ctrlSetFontH3 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH3B",
              "description": "Sets H3 bold font of given HTML control.",
              "snippet": "ctrlSetFontH3B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH4",
              "description": "Sets H4 font of given HTML control.",
              "snippet": "ctrlSetFontH4 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH4B",
              "description": "Sets H4 bold font of given HTML control.",
              "snippet": "ctrlSetFontH4B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH5",
              "description": "Sets H5 font of given HTML control.",
              "snippet": "ctrlSetFontH5 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH5B",
              "description": "Sets H5 bold font of given HTML control.",
              "snippet": "ctrlSetFontH5B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH6",
              "description": "Sets H6 font of given HTML control.",
              "snippet": "ctrlSetFontH6 ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH6B",
              "description": "Sets H6 bold font of given HTML control.",
              "snippet": "ctrlSetFontH6B ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeight",
              "description": "Sets the sizeEx property for most controls as follows: \nCT_MAP - \"sizeExNames\"\nCT_STRUCTURED_TEXT - \"size\" (since Arma 3 v2.01)\nCT_HTML - \"P\" >> \"sizeEx\"\nOther - \"sizeEx\"\nFor getter command see ctrlFontHeight",
              "snippet": "ctrlSetFontHeight ${2:size}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH1",
              "description": "Sets H1 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH1 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH2",
              "description": "Sets H2 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH2 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH3",
              "description": "Sets H3 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH3 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH4",
              "description": "Sets H3 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH4 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH5",
              "description": "Sets H5 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH5 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH6",
              "description": "Sets H6 font size of given HTML control.",
              "snippet": "ctrlSetFontHeightH6 ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightSecondary",
              "description": "Sets the font size of the secondary text of given control.",
              "snippet": "ctrlSetFontHeightSecondary ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontP",
              "description": "Sets P font of given HTML control or its size.",
              "snippet": "ctrlSetFontP ${2:fontOrSize}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontPB",
              "description": "Sets P bold font of given HTML control.",
              "snippet": "ctrlSetFontPB ${2:fontName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontSecondary",
              "description": "Sets the font size of the secondary text of given control.",
              "snippet": "ctrlSetFontSecondary ${2:fontClass}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetForegroundColor",
              "description": "Sets foreground color of given control. Color is in format Color.",
              "snippet": "ctrlSetForegroundColor ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModel",
              "description": "Sets model for 3D-Dialogs.",
              "snippet": "ctrlSetModel ${2:model}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModelDirAndUp",
              "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.",
              "snippet": "ctrlSetModelDirAndUp ${2:[${3:dir}, ${4:up}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModelScale",
              "description": "Sets 3D control model scale",
              "snippet": "ctrlSetModelScale ${2:scale}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetMousePosition",
              "description": "Similar to setMousePosition but relative to the given control.",
              "snippet": "ctrlSetMousePosition ${2:Position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPixelPrecision",
              "description": "Enable or disable pixel precision (rounding) in a given control interface.",
              "snippet": "ctrlSetPixelPrecision ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "snippet": "ctrlSetPosition ${2:[x, y]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "snippet": "ctrlSetPosition ${2:[x, y, w, h]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "snippet": "ctrlSetPosition ${2:[x, y, z]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPositionH",
              "description": "Sets wanted H position for 2D control. ctrlCommit is required to complete the operation.",
              "snippet": "ctrlSetPositionH ${2:h}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPositionW",
              "description": "Sets wanted W position for 2D control. ctrlCommit is required to complete the operation.",
              "snippet": "ctrlSetPositionW ${2:w}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPositionX",
              "description": "Sets wanted X position for 2D control. ctrlCommit is required to complete the operation.",
              "snippet": "ctrlSetPositionX ${2:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPositionY",
              "description": "Sets wanted Y position for 2D control. ctrlCommit is required to complete the operation.",
              "snippet": "ctrlSetPositionY ${2:y}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetScale",
              "description": "Sets wanted scale for control animation. Top left corner remains same. This command requires ctrlCommit.",
              "snippet": "ctrlSetScale ${2:scale}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetScrollValues",
              "description": "Sets scroll values for current scrollbars in range 0...1 for the following controls:\n\nCT_CONTROLS_TABLE\nCT_CONTROLS_GROUP\nCT_TREE\nCT_LISTBOX\nCT_COMBO\nCT_XCOMBO\nCT_LISTNBOX\nCT_LISTNBOX_CHECKABLE",
              "snippet": "ctrlSetScrollValues ${2:[${3:vScrollValue}, ${4:hScrollValue}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetStructuredText",
              "description": "Set the Structured Text which will be displayed in structured text control.",
              "snippet": "ctrlSetStructuredText ${2:structuredText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetText",
              "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.\n\u26a0ctrlSetText [idc, text] syntax does not support CT_SHORTCUTBUTTON, but the alternative syntax control ctrlSetText text does.",
              "snippet": "ctrlSetText ${1:[${2:idc}, ${3:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetText",
              "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.\n\u26a0ctrlSetText [idc, text] syntax does not support CT_SHORTCUTBUTTON, but the alternative syntax control ctrlSetText text does.",
              "snippet": "ctrlSetText ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTextColor",
              "description": "Sets text color of given control. Color is in format Color. As of Arma 3 v1.40 this command could also be used to change fill color of the DialogControls-ProgressBar.",
              "snippet": "ctrlSetTextColor ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTextSelection",
              "description": "Selects 'length' characters of edit control from the 'start' position and places cursor at the end of selection. To move cursor only, set 'length' to 0.",
              "snippet": "ctrlSetTextSelection ${2:[${3:start}, ${4:length}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltip",
              "description": "Sets tooltip text of given control.\n\u24d8If control supports URL property, like RscActiveText for example, and the URL is set, tooltip text displayed on mouse over will be appended with URL text.",
              "snippet": "ctrlSetTooltip ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorBox",
              "description": "Sets tooltip border color of given control. Color is in format Color.",
              "snippet": "ctrlSetTooltipColorBox ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorShade",
              "description": "Sets tooltip background color of given control. Color is in format Color.",
              "snippet": "ctrlSetTooltipColorShade ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorText",
              "description": "Sets tooltip text color of given control. Color is in format Color.",
              "snippet": "ctrlSetTooltipColorText ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetURL",
              "description": "Sets URL property of the given control subject to allowedHTMLLoadURIs[] whitelisting in CfgCommands config. Supported controls are:\nCT_BUTTON\nCT_SHORTCUTBUTTON\nCT_ACTIVETEXT",
              "snippet": "ctrlSetURL ${2:URL}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShow",
              "description": "Set if a control of the currently active user dialog is shown or not.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlShow ${1:[${2:idc}, ${3:show}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "controlName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShow",
              "description": "Set if a control of the currently active user dialog is shown or not.\n\nRead Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlShow ${2:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShown",
              "description": "Returns whether given control is shown.",
              "snippet": "ctrlShown ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Config, Control) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlStyle",
              "description": "Returns the provided control's style. See Arma: GUI Configuration - Control Styles.",
              "text": "ctrlStyle"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlText",
              "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\".",
              "snippet": "ctrlText ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlText",
              "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\".",
              "snippet": "ctrlText ${1:controlName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlTextColor",
              "description": "Returns control's text color in Color format (see ctrlSetTextColor).",
              "snippet": "ctrlTextColor ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlTextHeight",
              "description": "Returns the control text height. Supported control types are:\nCT_STATIC 0\nCT_EDIT 2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(Since Arma 3 v1.57.135040)\nCT_STRUCTURED_TEXT 13",
              "snippet": "ctrlTextHeight ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlTextSelection",
              "description": "Returns edit control text selection in format [start, length, selectedText]",
              "snippet": "ctrlTextSelection ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlTextWidth",
              "description": "Returns the width of the control text including left and right margins (0.008 each). Supported control types are:\nCT_STATIC 0\nCT_EDIT 2\nCT_STRUCTURED_TEXT 13\n\u24d8For control independent text width estimate see getTextWidth",
              "snippet": "ctrlTextWidth ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlType",
              "description": "Returns number representing the type of control, which is also defined by type property in config. For more information see Arma: GUI Configuration",
              "snippet": "ctrlType ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlVisible",
              "description": "Returns if a control of the currently active user dialog is shown or not. Read Arma: GUI Configuration for more information about user dialogs and controls.",
              "snippet": "ctrlVisible ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRowControls",
              "description": "Returns array of controls on the row with the given index.",
              "text": "Control"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRowCount",
              "description": "Returns number of rows (headers not included) in the RscControlsTable.",
              "snippet": "ctRowCount ${1:Control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetCurSel",
              "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.",
              "text": "Control"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetData",
              "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.",
              "snippet": "ctSetData [${2:index}, ${3:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "Control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetHeaderTemplate",
              "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.",
              "snippet": "ctSetHeaderTemplate ${2:Config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "Control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetRowTemplate",
              "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).",
              "snippet": "ctSetRowTemplate ${2:Config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetValue",
              "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.",
              "snippet": "ctSetValue [${2:index}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctValue",
              "description": "Returns metadata (number) associated with a particular row of RscControlsTable.",
              "snippet": "ctValue ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorAddons",
              "description": "Returns list of addons allowed to given curator. The addon names are not guaranteed to be all lower case",
              "snippet": "curatorAddons ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCamera",
              "description": "Returns curator camera object.",
              "text": "curatorCamera"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCameraArea",
              "description": "Returns all curator camera areas.",
              "snippet": "curatorCameraArea ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCameraAreaCeiling",
              "description": "Returns ceiling height for curator camera.",
              "snippet": "curatorCameraAreaCeiling ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCoef",
              "description": "Returns current coeficient setting.",
              "snippet": "curatorCoef ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditableObjects",
              "description": "Returns all editable objects which belong to a curator.",
              "snippet": "curatorEditableObjects ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditingArea",
              "description": "Returns all curator editing areas.",
              "snippet": "curatorEditingArea ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditingAreaType",
              "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).",
              "snippet": "curatorEditingAreaType ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorMouseOver",
              "description": "Returns Curator Editable Object under curator mouse pointer in form of array:\n [] - when not in curator mode\n [\"\"] - if no curator editable object under the pointer in curator mode\n [typeName, Curator Editable Object] - if there is curator editable object under the pointer in curator mode",
              "text": "curatorMouseOver"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorPoints",
              "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.",
              "snippet": "curatorPoints ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorRegisteredObjects",
              "description": "Returns array with all objects that has curator registered and their settings.",
              "snippet": "curatorRegisteredObjects ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Group, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorSelected",
              "description": "Returns list of all curator selected items.",
              "text": "curatorSelected"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorWaypointCost",
              "description": "Return current price for placing waypoints (curator specific).",
              "snippet": "curatorWaypointCost ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String, Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/current3DENOperation",
              "description": "Returns the currently performed editing operation in Eden Editor.",
              "text": "current3DENOperation"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentChannel",
              "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP). Correspondence between channel and number:\n0 = Global\n1 = Side\n2 = Command\n3 = Group\n4 = Vehicle\n5 = Direct\n6-15 = Custom Radio (see radioChannelCreate)",
              "text": "currentChannel"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentCommand",
              "description": "Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Returned value can be one of:\n\"WAIT\"\n\"ATTACK\"\n\"HIDE\"\n\"MOVE\"\n\"HEAL\"\n\"REPAIR\"\n\"REFUEL\"\n\"REARM\"\n\"SUPPORT\"\n\"JOIN\"\n\"GET IN\"\n\"FIRE\"\n\"GET OUT\"\n\"STOP\"\n\"EXPECT\"\n\"ACTION\"\n\"ATTACKFIRE\"\n\"Suppress\"",
              "snippet": "currentCommand ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazine",
              "description": "Returns class name of currently loaded vehicle's / unit's magazine.",
              "snippet": "currentMagazine ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineDetail",
              "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.",
              "snippet": "currentMagazineDetail ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineDetailTurret",
              "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
              "snippet": "currentMagazineDetailTurret ${2:[turret path]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineTurret",
              "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
              "snippet": "currentMagazineTurret ${2:[turret path]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMuzzle",
              "description": "Returns current muzzle of unit's weapon.\n\n\u26a0This command will return 0 Number if given object  is a unit that is in a vehicle.\nYou can alternatively use _muzzle = weaponState player select 1;",
              "snippet": "currentMuzzle ${1:gunner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentNamespace",
              "description": "Returns current global namespace the script runs in. Could be one of the following:\nmissionNamespace\nuiNamespace\nparsingNamespace\nprofileNamespace\nlocalNamespace (since Arma 3 v1.99.146509)\n\n\u24d8Since Arma 3 v1.99.146509, Namespaces can be compared with == and != operators in addition to isEqualTo",
              "text": "currentNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentPilot",
              "description": "Returns the person piloting the vehicle. If co-pilot is piloting, co-pilot is returned. If you need current pilot of a UAV or UGV, see UAVControl command.",
              "snippet": "currentPilot ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentTask",
              "description": "Return current task of given person.",
              "snippet": "currentTask ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentTasks",
              "description": "Returns array with all  uncompleted tasks for the given agent. getVariable could be used on Task to get the following special local variables from the task:\n\n\"_this\" Team Member - the teamMember agent the task is assigned to\n\"_taskType\" String - the name of the task (see registeredTasks)\n\"_thisCreated\" Number - 1 or 0\n\"_thisRunning\" Number - 1 or 0\n\"_totalCreated\" Number - total number of tasks\n\"_totalRunning\" Number - total number of running tasks\n\"_task\"Task - often null",
              "snippet": "currentTasks ${1:teamMember}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentThrowable",
              "description": "Returns currently selected throwable, which will be launched if the user presses \"G\".\n\u24d8The weapon/magazine id system is W.I.P. and may change without notice.",
              "snippet": "currentThrowable ${1:player}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentVisionMode",
              "description": "Returns current vision mode of unit's weapon.\n\n0 - daytime\n1 - night vision\n2 - thermal vision",
              "snippet": "currentVisionMode ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWaypoint",
              "description": "Returns the index of the current waypoint contrary to misleading name.\n\nTo determine the validity of the index, compare it to the waypoints count.\n\nIf all waypoints are 'completed', then the index is 1 greater than the last valid index.\n\nIf there are no waypoints, then the index is 0.\n\nBy default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.",
              "snippet": "currentWaypoint ${1:groupName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeapon",
              "description": "Return the name of the currently selected weapon (on the primary turret for vehicles).",
              "snippet": "currentWeapon ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeaponMode",
              "description": "Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"\n\n\u26a0This command will return 0 Number if given object is a vehicle instead of a person.\nYou can alternatively use _muzzle = weaponState player select 2;",
              "snippet": "currentWeaponMode ${1:gunner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeaponTurret",
              "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.",
              "snippet": "currentWeaponTurret ${2:[turret path]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentZeroing",
              "description": "Returns zeroing of unit's weapon.",
              "snippet": "currentZeroing ${1:gunner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cursorObject",
              "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.",
              "text": "cursorObject"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cursorTarget",
              "description": "Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree (knowsAbout > 0). If target is completely unknown, command returns objNull.\nA valid target could belong to an enemy or a friendly side. Buildings are normally known to player and so are valid targets. Try nearTargets to see what else is considered a target. While friendly targets are usually known to the player, enemy targets can be totally unknown, especially if \"auto-spotting\" (or sometimes called \"auto-reporting\") is switched off. To check if auto-spotting is enabled:difficultyEnabled \"autospot\"\ncursorTarget also returns locked target for the duration of the lock even if there is another target under the cursor. As soon as missile is fired, cursorTarget switches to current known target under cursor or objNull. Targeting (currently \"T\" in Arma 3) works regardless of the state of \"auto-spotting\".\nAdding a target to the known list could be done with reveal command. When auto-spotting is enabled, zooming on the enemy target with cross-hairs usually reveals the target. As friendly targets are always known, zooming on friendly target could improve knowsAbout value.\nSide relations can also influence target knowledge. For example east target is unknown target for civilian, but making them friends with setFriend instantly improves civilian knowledge of the east.",
              "text": "cursorTarget"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/customChat",
              "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.",
              "snippet": "customChat ${2:[${3:channel}, ${4:message}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/customRadio",
              "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.",
              "snippet": "customRadio ${2:[${3:channel}, ${4:message}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/customWaypointPosition",
              "description": "Returns player's custom waypoint (LShift + LMB) Position or an empty array [] if no custom waypoint exists.",
              "text": "customWaypointPosition"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "layer ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutFadeOut",
              "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.for title layer see titleFadeOut.\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutFadeOut ${2:duration}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = layerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutFadeOut",
              "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.for title layer see titleFadeOut.\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutFadeOut ${2:duration}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "description": "Displays an object defined in the global config in CfgTitles.\nFor greater efficiency and ease of modability it is recommended to use named layers with Alternative Syntax 2.",
              "snippet": "cutObj ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "layer ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "description": "Displays an object defined in the global config in CfgTitles.\nFor greater efficiency and ease of modability it is recommended to use named layers with Alternative Syntax 2.",
              "snippet": "cutObj ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = layerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "description": "Displays an object defined in the global config in CfgTitles.\nFor greater efficiency and ease of modability it is recommended to use named layers with Alternative Syntax 2.",
              "snippet": "cutObj ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutRsc ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "layer ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutRsc ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = layerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutRsc ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutText [${1:text}, ${2:type}, ${3:speed},  ${4:showInMap}, ${5:isStructuredText}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "layer ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutText [${2:text}, ${3:type}, ${4:speed},  ${5:showInMap}, ${6:isStructuredText}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = layerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\nFor greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "snippet": "cutText [${2:text}, ${3:type}, ${4:speed},  ${5:showInMap}, ${6:isStructuredText}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/damage",
              "description": "Return the damage value of an object.",
              "snippet": "damage ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/date",
              "description": "Return the actual in-mission date and time.\nClients' local date is automatically and periodically synchronised with the server date.",
              "text": "date"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dateToNumber",
              "description": "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274 \nThis is how this command works. The 365 days of the year are presented in range 0...1. So each day will be:\n1 / 365 =  0.00273973 \nIn a leap year there are 366 days, so the range will increase by 1 day:\n1 / 365  *  366 = 1.00274\nIn short, in a normal year the command returns in range 0...1 in a leap year it will return in range 0...1.00274",
              "snippet": "dateToNumber ${1:date}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/daytime",
              "description": "Returns the current in-game time in hours. For a formatted version of time, see BIS_fnc_timeToString.",
              "text": "daytime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deActivateKey",
              "description": "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "snippet": "deActivateKey ${1:keyname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debriefingText",
              "description": "Returns debriefing text of provided end.",
              "snippet": "debriefingText ${1:end}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "FSMhandle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debugFSM",
              "description": "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.\n\u26a0Non functional in retail",
              "snippet": "debugFSM ${2:true}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debugLog",
              "description": "Dump argument type and value to debugging output. \n\n\u26a0This command is non-functional in the retail version",
              "snippet": "debugLog ${1:anything}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/decayGraphValues",
              "description": "Multiplies graph values by the given coefficient. The corresponding lower bound value is used instead if the product is smaller than the bound.",
              "snippet": "decayGraphValues ${1:[${2:lowerBoundValues}, ${3:graphValues}, ${4:coef}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/default",
              "description": "See switch do.",
              "snippet": "default ${1:a}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deg",
              "description": "Converts given value in radians to degrees. 1 degree equals 0.01745 radians or pi / 180.",
              "snippet": "deg ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/delete3DENEntities",
              "description": "Delete given entities in Eden Editor, including anything that can be placed in editor.",
              "snippet": "delete3DENEntities ${1:entities}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteAt",
              "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find(see Example 2) or findIf(see Example 3) command",
              "snippet": "deleteAt ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteCenter",
              "description": "In a nutshell, this command removes gaming Side (see createCenter). If a side has >0 Groups it cannot be deleted. Center can only be created for: east, west, resistance, civilian and sideLogic, therefore only centers from the mentioned sides can be deleted.\nOld description: Destroys the AI center of the given side.",
              "snippet": "deleteCenter ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteCollection",
              "description": "Delete a collection. As example, used with a soldier, it'll hide the ingame model.\n\nWhen targetting ArmA 2 1.06 or newer, use hideObject instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before ArmA 2 1.06, and its functionality may be changed or removed in the future.",
              "snippet": "deleteCollection ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteEditorObject",
              "description": "Delete the editor object. Requires all editor object links to be removed prior. \n\u24d8Some Old Editor Command",
              "snippet": "deleteEditorObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteGroup",
              "description": "Destroys the given group. Group must be empty and local to the machine executing command. \n\n\u24d8In Arma 3 you can find out locality of the group with local command, unlike with previous games. However owner and setOwner dont work with groups anywhere. The group will always be local to the client that created it, until the client disconnects, then the group becomes local to the server. So if you need to delete a group, delete all members first then execute deleteGroup where is it local.\nIn Arma 3 when last unit leaves a group, the group gets auto deleted. Manually deleting all units from a group however, does not auto delete the empty group. To force the group to get auto-deleted when empty use deleteGroupWhenEmpty",
              "snippet": "deleteGroup ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteGroupWhenEmpty",
              "description": "Marks given group for auto-deletion when group is empty. true will mark the group for auto-deletion, however false will only unmark the group that was marked previously. Other engine group auto-deletion mechanisms in place are not affected by this.\n\n\u24d8It might take up to a minute for the groups marked for auto-deletion when empty to get deleted when they become empty.",
              "snippet": "deleteGroupWhenEmpty ${2:delete}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteIdentity",
              "description": "Delete an identity (created with saveIdentity) from the campaign's progress file.",
              "snippet": "deleteIdentity ${1:identityName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteLocation",
              "description": "Deletes scripted location.",
              "snippet": "deleteLocation ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteMarker",
              "description": "Destroys the given marker.",
              "snippet": "deleteMarker ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteMarkerLocal",
              "description": "Destroys the given marker.",
              "snippet": "deleteMarkerLocal ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteRange",
              "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).",
              "snippet": "deleteRange ${2:[${3:from}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteResources",
              "description": "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.",
              "snippet": "deleteResources [${2:resource1}, ${3:resource2},...]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteSite",
              "description": "Removes the site.\n\u26a0This command is considered deprecated and is no longer supported",
              "snippet": "deleteSite ${1:site}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteStatus",
              "description": "Delete a status (created with saveStatus) from the campaign's progress file.",
              "snippet": "deleteStatus ${1:statusName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteTarget",
              "description": "Delete a target. Not yet implemented.",
              "snippet": "deleteTarget ${1:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteTeam",
              "description": "Destroy given team.",
              "snippet": "deleteTeam ${1:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteVehicle",
              "description": "Deletes an object. Only objects inserted in the mission editor and objects created during the game's progress can be deleted by this command. Island objects and player cannot be removed.\n\u24d8The actual object deletion, when object becomes objNull, happens on the next frame after command execution, but there are some object modifications that happen immediately. For example if the object is unit in a group, it immediately becomes groupless isNull group _unit; //true\n\u26a0Do not use this command for deletion of dead crew members from a vehicle. Doing so may lead to all sorts of bugs and ghost objects left on the map. Instead use deleteVehicleCrew, which was designed with this functionality in mind",
              "snippet": "deleteVehicle ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteVehicleCrew",
              "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted.\n\u24d8This command attempts to move the given crew member out before deleting it. Made especially for deleting dead crew members, as using conventional deleteVehicle leads to all sorts of bugs and ghost objects. While the argument is global, you should take extra steps and execute this where vehicle is local as moving units out of the vehicle happens where vehicle is local and you want this to always precede deletion.",
              "snippet": "deleteVehicleCrew ${2:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteWaypoint",
              "description": "Removes the specified waypoint.\n\u24d8\nWhen a waypoint is deleted, all other group waypoints are immediately re-indexed. See Example 2 for a deletion of all group's waypoints.\nDeleting a group's current waypoint will not stop the group on its tracks.",
              "snippet": "deleteWaypoint ${1:[${2:group}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/detach",
              "description": "Detaches previously attached with attachTo object.",
              "snippet": "detach ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/detectedMines",
              "description": "Returns an array of all mines detected by a given side",
              "text": "detectedMines"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeMissionFSMs",
              "description": "Returns array with active Mission FSMs. To see number of all scripts currently in the scheduler use diag_activeScripts.",
              "text": "diag_activeMissionFSMs"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeScripts",
              "description": "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]",
              "text": "diag_activeScripts"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeSQFScripts",
              "description": "Returns information about active SQF scripts. To see number of all scripts currently in the scheduler use diag_activeScripts.",
              "text": "diag_activeSQFScripts"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeSQSScripts",
              "description": "Returns array with active SQSs. To see number of all scripts currently in the scheduler use diag_activeScripts.",
              "text": "diag_activeSQSScripts"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20allMissionEventHandlers",
              "description": "Returns an array with all mission event handlers.",
              "text": "diag_allMissionEventHandlers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureFrame",
              "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.\nThis can also be executed on a dedicated Server and because a Server has no UI it will behave like diag_captureFrameToFile.\nSpecial: BattlEye's RCON variant of this command is #captureFrame \nNote: Only available in specific builds. See Performance Profiling for details.",
              "snippet": "diag_captureFrame ${1:frame}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureFrameToFile",
              "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and \nwritten to a log file in the same directory as the .rpt file.\nThe full Path to the log file is logged to simultaneously.\nThe data in the log file can be copied and pasted into the diag_captureFrame UI dialog to get a visualisation later on.\nNote: Only available in specific builds. See Performance Profiling for details.",
              "snippet": "diag_captureFrameToFile ${1:frame}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureSlowFrame",
              "description": "Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:\nRender\n - bgD3D\nMain Thread\n - total\n - memAl\nVisualize\n - visul\nMjob\n - Mjob\nNote: Only available in specific builds. See Performance Profiling for details.",
              "snippet": "diag_captureSlowFrame [${1:section}, ${2:threshold}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20codePerformance",
              "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance\n\u24d8For security purposes, this command will only run for 1 cycle in MP, unless in-game debug console is available via description.ext option or Eden attribute setting.",
              "snippet": "diag_codePerformance ${1:[${2:code}, ${3:arguments}, ${4:${7:cycles}}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20deltaTime",
              "description": "Returns the duration of the previous frame in seconds",
              "text": "diag_deltaTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20drawMode",
              "description": "Activates specific debug visualization.",
              "snippet": "diag_drawMode ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20dumpCalltraceToLog",
              "description": "\u26a0Command name/format may change in the future.\ndumps current callstack/calltrace to RPT.\n\n\u26a0Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "text": "diag_dumpCalltraceToLog"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20dynamicSimulationEnd",
              "description": "Ends dynamic simulation stats gathering and writes it into given file.",
              "snippet": "diag_dynamicSimulationEnd ${1:file}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "diag_mode ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20enable",
              "description": "Used to enable/disabled various diagnostics.",
              "snippet": "diag_enable ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20enabled",
              "description": "Checks whether specific diagnostic mode is activated.",
              "snippet": "diag_enabled ${1:diag_mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20fps",
              "description": "Returns average framerate calculated over last 16 frames.",
              "text": "diag_fps"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20fpsMin",
              "description": "Returns minimal framerate. Calculated from the longest frame over last 16 frames.",
              "text": "diag_fpsMin"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20frameNo",
              "description": "Returns number of frame currently displayed.",
              "text": "diag_frameNo"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20lightNewLoad",
              "description": "Allows loading of lightning config during the gameplay (effectively changing the current scene lightning). Filename path can be either absolute or relative. The file must contain only the class LightningNew, which should contain lightning configuration.",
              "snippet": "diag_lightNewLoad ${1:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20list",
              "description": "Returns an array of all diag modes available in the game.",
              "snippet": "diag_list ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20log",
              "description": "Dumps the argument's value to the report file. Each call creates a new line in the file.",
              "snippet": "diag_log ${1:output}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20logSlowFrame",
              "description": "Log all frames, where section takes longer than the threshold (in seconds).\n\u24d8Only available in specific builds. See Performance Profiling for details.\n\u26a0This command is not implemented in Arma 3 builds.",
              "snippet": "diag_logSlowFrame [${1:section}, ${2:threshold}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20mergeConfigFile",
              "description": "Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory). Location is relative to the Userdir (default) or mission directory depending on the the value of UserDir [FileName,UserDir]. \nDoesn't work with cfgAmmo & few other classes. (Since 1.69, cfgAmmo should be mergeable!) Merging config file means also that you can't delete parameters through diag_mergeConfigFile. Changes applied by diag_mergeConfigFile are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick.",
              "snippet": "diag_mergeConfigFile ${1:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20recordTurretLimits",
              "description": "Start recording tool for creating turret aiming limits.",
              "snippet": "diag_recordTurretLimits ${1:section}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20resetShapes",
              "description": "Reload models on-the-fly without the need of restarting the game. Changes applied by diag_resetShapes are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with \"-FilePatching\" in combination with local data. Command will reload only models present in local data.\n\n\nLimitation - you can't reload cfgSkeletons (Which is inside model.cfg)",
              "text": "diag_resetShapes"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20setLightNew",
              "description": "Overrides currently used scene lightning. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of simulWeatherSync.",
              "snippet": "diag_setLightNew ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20tickTime",
              "description": "Real time in seconds spent from the start of the game. On Windows the command uses timeGetTime.",
              "text": "diag_tickTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20toggle",
              "description": "Used to enable/disabled various diagnostics.",
              "snippet": "diag_toggle ${1:diag_mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dialog",
              "description": "Tests whether any user dialog is open.",
              "text": "dialog"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diaryRecordNull",
              "description": "A non-existent Diary Record. To compare non-existent objects use isNull or isEqualTo:\ndiaryRecordNull == diaryRecordNull; //\u00a0false\nisNull diaryRecordNull; //\u00a0true\ndiaryRecordNull isEqualTo diaryRecordNull; //\u00a0true",
              "text": "diaryRecordNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diarySubjectExists",
              "description": "Checks whether given subject is present in the diary of given person.",
              "snippet": "diarySubjectExists ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/didJIP",
              "description": "Checks if the current client Joined In Progress.",
              "text": "didJIP"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/didJIPOwner",
              "description": "Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false.",
              "snippet": "didJIPOwner ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficulty",
              "description": "Returns high-level selected difficulty mode.   \n\nReturned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)",
              "text": "difficulty"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyEnabled",
              "description": "\u26a0This command is deprecated since Arma 3 1.58. Since this version it always returns false. Use difficultyOption instead. See Arma 3 Difficulty Overhaul for further details.\nFormer functionality:\nChecks specific difficulty settings of the current user. Difficulty flag names can be found in the ArmA profile file under class Difficulties/xxx/Flags (xxx being regular or veteran).\nNote: stress damage for some reason is a separate difficulty so difficultyEnabled \"stressDamageEnabled\" might not return correct set value. There are however 2 dedicated commands for it:\n\nenableStressDamage\nisStressDamageEnabled\nNote: auto trim is also for some reason a separate difficulty so difficultyEnabled \"autoTrimEnabled\" might not return correct set value. There are also 2 dedicated commands for it:\n\nenableAutoTrimRTD\nisAutoTrimOnRTD",
              "snippet": "difficultyEnabled ${1:flagName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyEnabledRTD",
              "description": "Returns true if Advanced Flight Model is enabled. Forcing of rotorlib simulation could be done with mission param forceRotorLibSimulation",
              "text": "difficultyEnabledRTD"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyOption",
              "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in \nArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran). This command replaces difficultyEnabled as many options have multiple values and former command only provided Boolean return.",
              "snippet": "difficultyOption ${1:optionName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/direction",
              "description": "Returns the direction an object or a location is facing (differs from getDir in that this also works with locations).",
              "snippet": "direction ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/directSay",
              "description": "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of fadeRadio. The message is defined in CfgRadio in the description.ext file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec). \nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "directSay ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableAI",
              "description": "Disables parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local. If unit changes locality, it might need to be executed again at the new locality to maintain effect.\n\nPossible values are:\n\"TARGET\" - stop the unit to watch the assigned target / group commander may not assign targets\n\"AUTOTARGET\" - prevent the unit from assigning a target independently and watching unknown objects / no automatic target selection\n\"MOVE\" - disable the AI's movement / do not move\n\"ANIM\" - disable ability of AI to change animation. Available only since ArmA: Cold War Assault (OFP 1.99).\n\"TEAMSWITCH\" - AI disabled because of Team Switch\n\"FSM\" - disable the execution of AI behavior scripts. Available only since Operation Arrowhead v1.60.\n\"WEAPONAIM\" - no weapon aiming\n\"AIMINGERROR\" - prevents AI's aiming from being distracted by its shooting, moving, turning, reloading, hit, injury, fatigue, suppression or concealed/lost target  Available only since Arma 3 v1.42.\n\"SUPPRESSION\" - prevents AI from being suppressed  Available only since Arma 3 v1.42.\n\"CHECKVISIBLE\" - disables visibility raycasts  Available only since Arma 3 v1.54.\n\"COVER\" - disables usage of cover positions by the AI  Available only since Arma 3 v1.56.\n\"AUTOCOMBAT\" - disables autonomous switching to COMBAT when in danger Available only since Arma 3 v1.56.\n\"PATH\" - stops the AI\u2019s movement but not the target alignment Available only since Arma 3 v1.61.\n\"MINEDETECTION\" - disable AI mine detection.\n\"NVG\" - Stops AI from putting NVGs on but not taking them off Available since Arma 3 v1.92\n\"LIGHTS\" - Stops AI from operating vehicle headlights as well as collision lights Available since Arma 3 v1.92\n\"RADIOPROTOCOL\" - Stops AI from talking and texting while still being able to issue orders Available since Arma 3 v1.95\n\nSince Arma v1.65 a special operational keyword \"all\" is introduced to set all AI flags to the same value.\nSince Arma 3 v1.95.145843 it is possible to return the state of the given AI flag via checkAIFeature command or set it using alias command enableAIFeature",
              "snippet": "disableAI ${2:section}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableCollisionWith",
              "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects.\n\u26a0Command has to be executed where objects are local, and as long as they don't change locality, the effect of this command will be global.\nIf the two objects are not local to the same computer, then it has to be executed on both computers to achieve the desired effect.\n\nIf one or both objects change locality, the command needs to be executed again on the new owner's machine(s) to maintain the effect.",
              "snippet": "disableCollisionWith ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableConversation",
              "description": "Disable the ability to talk to other people.",
              "snippet": "disableConversation ${2:disable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableDebriefingStats",
              "description": "Disable debriefing score table.\n\u26a0This command is broken.",
              "text": "disableDebriefingStats"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableMapIndicators",
              "description": "Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.",
              "snippet": "disableMapIndicators [${1:disableFriendly},${2:disableEnemy},${3:disableMines},${4:disablePing}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableNVGEquipment",
              "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.",
              "snippet": "disableNVGEquipment ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableRemoteSensors",
              "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. Units, that are not in a group with at least one local member, will not check visibility of other units. This will cause, that remote units will not have updated knowsAbout and it will save some CPU time. If a group contains a single local entity then calculations will still be performed for the entire group.\n\nThese raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like knowsAbout, nearTargets and targetKnowledge will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.",
              "snippet": "disableRemoteSensors ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableSerialization",
              "description": "Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types). See Namespace serialization for more information.\n\n\u26a0In Arma 2 and up to a certain version of Arma 3, giving a Display or Control to spawned code would raise an error due to the usage of the then non-serializable _this variable. Using disableSerialization or uiNamespace wouldn't help; the trick here is to pass the argument inside an array:\n_display = findDisplay 46;\u00a0_display\u00a0 spawn { hint str _this; };\t\t\t\t//\u00a0would raise a serialization error[_display] spawn { hint str (_this select 0); };\t//\u00a0OK",
              "text": "disableSerialization"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableTIEquipment",
              "description": "Disables TI (Thermal Imaging) equipment for given vehicle.\n\u24d8In older versions of Arma this command would also disable NV (Night Vision), but since Arma 3 v1.52.132676 this command disables only TI. Use disableNVGEquipment to disable NV.",
              "snippet": "disableTIEquipment ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableUAVConnectability",
              "description": "Disables unit's AV terminal(s) connecting to UAV.",
              "snippet": "disableUAVConnectability [${2:uav}, ${3:checkAllItems}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableUserInput",
              "description": "Disables or enables the keyboard and mouse input. Usually used during cutscenes.\n\u26a0Be careful and responsible with the usage of this command. Once the user input is disabled, the only option left is to restart the game. Make sure you provide scripted mechanics to resolve this, should you need to disable user input for any reason.",
              "snippet": "disableUserInput ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayAddEventHandler",
              "description": "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.\n\nReturning true in EH code will override default engine handling for keyboard events.\n\nSee User Interface Event Handlers for the full list of event names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.\n\u26a0Display EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.\n\n\n\u26a0When using the event names listed here with the ctrlAddEventHandler, ctrlSetEventHandler, displayAddEventHandler or displaySetEventHandler commands, the prefix \"on\" in the event name must be removed (e.g. 'ButtonDown' instead of 'onButtonDown').",
              "snippet": "displayAddEventHandler ${2:[${3:eventName}, ${4:code}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Control) = display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayCtrl",
              "description": "Return child control with specified idc.",
              "snippet": "displayCtrl ${2:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayNull",
              "description": "A non-existing Display. To compare non-existent displays use isNull or isEqualTo:\ndisplayNull == displayNull; // false\nisNull displayNull; // true\ndisplayNull  isEqualTo displayNull; // true",
              "text": "displayNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayParent",
              "description": "Returns parent display of the given display.",
              "snippet": "displayParent ${1:display}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayRemoveAllEventHandlers",
              "description": "Remove all event handlers from the given display.",
              "snippet": "displayRemoveAllEventHandlers ${2:eventName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayRemoveEventHandler",
              "description": "Remove a given event handler from the given display.",
              "snippet": "displayRemoveEventHandler ${2:[handler name,id]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "display ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displaySetEventHandler",
              "description": "Sets given event handler of given display.\n\nThe return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it is default code should be executed. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.\n\n\u26a0When using the event names listed here with the ctrlAddEventHandler, ctrlSetEventHandler, displayAddEventHandler or displaySetEventHandler commands, the prefix \"on\" in the event name must be removed (e.g. 'ButtonDown' instead of 'onButtonDown').",
              "snippet": "displaySetEventHandler ${2:[${3:handlerName}, ${4:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dissolveTeam",
              "description": "Dissolves the given team. All members become members of the main team. Possible team values are: \"RED\", \"GREEN\", \"BLUE\" or \"YELLOW\".",
              "snippet": "dissolveTeam ${1:teamColor}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = param1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance",
              "description": "Returns a distance in meters between Objects, Positions or Locations.\n\n\u26a0If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea. If Position2D is supplied, z is assumed 0. If you need distance between two Position3D coordinates, use vectorDistance.",
              "snippet": "distance ${2:param2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = location1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance",
              "description": "Returns a distance in meters between Objects, Positions or Locations.\n\n\u26a0If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea. If Position2D is supplied, z is assumed 0. If you need distance between two Position3D coordinates, use vectorDistance.",
              "snippet": "distance ${2:location2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = param1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance2D",
              "description": "Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position.",
              "snippet": "distance2D ${2:param2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = var1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distanceSqr",
              "description": "Computes the squared distance between two objects or positions.",
              "snippet": "distanceSqr ${2:var2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distributionRegion",
              "description": "Returns the numerical index for the distribution region of this copy of Armed Assault.\nUSA\nRest of the world",
              "text": "distributionRegion"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/do",
              "description": "Executes code. Used as part of a construct, such as while, with, for and switch. The code is always executed in missionNamespace unless do is used with with as an argument.",
              "snippet": "do ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/do3DENAction",
              "description": "Performs given Eden Editor action.\n\nSee the list of all actions.",
              "snippet": "do3DENAction ${1:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doArtilleryFire",
              "description": "Orders a unit to reload defined magazine commence fire burst on the given position (silently).",
              "snippet": "doArtilleryFire ${2:[${3:position}, type, ${5:rounds}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFire",
              "description": "Order the given unit(s) to fire on the given target (without radio messages).\n\nThe target is set with doTarget or commandTarget.\n\nThe target can be a unit or a vehicle, but not an object.",
              "snippet": "doFire ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFollow",
              "description": "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after doStop, just doFollow leader even if it is the leader himself you want to resume (see Example 2).",
              "snippet": "doFollow ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFSM",
              "description": "Orders a unit to process command defined by FSM file (silently). \n\nUnlike with execFSM where _this is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n_leader\nleader of subgroup with this command",
              "snippet": "doFSM ${2:[${3:fsmName}, ${4:position}, ${5:target}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doGetOut",
              "description": "Orders one or multiple units to get out from the vehicle (silently). Same as commandGetOut with latter being shown via radio chat.\n\nNotes:\nWorks for both AI and player entities\nAI unit gets back in - unless is under player command or combined with other sqf commands (orderGetIn false, allowGetIn false or leaveVehicle)\nIgnores vehicle's lock state - unlike action \"Eject\" and moveOut\nAI waits for execution until vehicle has stopped/is no longer flying (unclear if any timeout exists for order to be discarded) - unlike action \"Eject\" and moveOut\nPlays the vehicle's position's get out animation (same as action \"Eject\") - unlike moveOut\nWhen execute for multiple units, it waits till the action is completed, before the next to take his turn (same as action \"Eject\") - unlike moveOut\nAI gets back into formation afterwards\nWorks only on alive units - unlike action \"Eject\" (one after another) or moveOut (instantly)\nDoes not work on unconscious - unless the AI is under player command. Unlike moveOut or action \"Eject\" (but one after another))",
              "snippet": "doGetOut ${1:units}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit(s) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doMove",
              "description": "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use doStop to stop units returning to formation.",
              "snippet": "doMove ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doorPhase",
              "description": "Return animation phase of door on vehicle.",
              "snippet": "doorPhase ${2:door}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doStop",
              "description": "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit. The units will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation. To resume group default behaviour, use doFollow command. For example: units _group doFollow leader _group;",
              "snippet": "doStop ${1:unit(s)}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doSuppressiveFire",
              "description": "Orders the given unit or a group of units to suppress the given position or target (without radio messages, see commandSuppressiveFire is you need messages). \nWhen an Array of units is passed as param, only units from the same Group as the first unit in array are considered.\nThe unit (units) starts firing at the given target or position random amount of shots (exact formula unknown, but seems to depend on amount of ammo unit has) after which it stops.\ncurrentCommand shows \"Suppress\" and there is no way of stopping unit before it completes random amount of rounds.\nIf position is passed as target param, it stays fixed.\nIf object is passed as target param, it depends on what kind of object. If it is considered a proper target by the unit, it is tracked by the unit dynamically. If it is not, the position gets obtained via getPosWorld, which could be different from PositionASL of the object, and it is fixed even if the target is able to change position later.",
              "snippet": "doSuppressiveFire ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doTarget",
              "description": "Order the given unit(s) to target the given target (without radio messages).Targeting can be stopped by _unit doWatch objNull; or_unit commandWatch objNull;",
              "snippet": "doTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit(s) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doWatch",
              "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.",
              "snippet": "doWatch ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit(s) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doWatch",
              "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.",
              "snippet": "doWatch ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawArrow",
              "description": "Draws a single line arrow on the map. To draw a color filled arrow of custom shape see BIS_fnc_drawArrow",
              "snippet": "drawArrow ${2:[${3:from}, ${5:to}, ${6:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawEllipse",
              "description": "Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon.",
              "snippet": "drawEllipse ${2:[${3:c}, ${4:a}, ${5:b}, ${6:angle}, ${7:color}, ${8:fill}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawIcon",
              "description": "Draws an icon on the map. The command needs to be called every frame, preferably with \"Draw\" control event handler ctrlAddEventHandler.",
              "snippet": "drawIcon ${2:[${3:texture}, ${4:color}, ${5:position}, ${6:width}, ${7:height}, ${8:angle}, ${9:text}, ${10:shadow}, ${11:textSize}, ${12:font}, ${13:align}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawIcon3D",
              "description": "Draws an ingame icon at a given position. Command has to be executed each frame. Use addMissionEventHandler \"Draw3D\" which is executed each frame and if user can see the drawing. In order for the results of this command to be visible through a  custom camera, enable HUD with cameraEffectEnableHUD. showHUD false will hide icon drawing. In order for arrows to appear, the icon texture should exist. The arrows size is proportionate to icon size.",
              "snippet": "drawIcon3D ${1:[${2:texture}, ${3:color}, ${4:position}, ${5:width}, ${6:height}, ${7:angle}, ${8:text}, ${9:shadow}, ${10:textSize}, ${11:font}, ${12:textAlign}, ${13:drawSideArrows}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLine",
              "description": "Draw a line on the map. Can decrease framerate!",
              "snippet": "drawLine ${2:[${3:position1}, ${4:position2}, ${5:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLine3D",
              "description": "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\".",
              "snippet": "drawLine3D ${1:[${2:start}, ${3:end}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLink",
              "description": "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW. \n\u24d8Some Old Editor Command",
              "snippet": "drawLink ${2:[from,to,param type,line type,color]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLocation",
              "description": "Unknown effect.",
              "snippet": "drawLocation ${2:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawPolygon",
              "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw<shape> commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.",
              "snippet": "drawPolygon [${2:polygon}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawRectangle",
              "description": "Draws a rectangle on the map.",
              "snippet": "drawRectangle ${2:[${3:c}, ${5:a}, ${6:b}, ${7:angle}, ${8:color}, ${9:fill}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawTriangle",
              "description": "Draws a single triangle or multiple triangles on the map. Triangle is defined by 3 positions of its verticies: p0, p1, p2 in a single array [p0, p1, p2]. Next 3 positions in the same array [p0, p1, p2, p0, p1, p2] will be used to draw second triangle, another 3 positions [p0, p1, p2, p0, p1, p2, p0, p1, p2] to draw 3rd and so on. \n\u24d8When fill param is absent or is an empty string \"\", the triangle is drawn with lines of the color set in color param. In order to draw color filled triangle of the same color as color param, set fill param to opaque white procedural texture\"#(rgb,1,1,1)color(1,1,1,1)\".",
              "snippet": "drawTriangle ${2:[${3:vertices}, ${4:color}, ${5:fill}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/driver",
              "description": "Returns the driver of a vehicle.",
              "snippet": "driver ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drop",
              "description": "Creates a particle effect.\nThis command is used to create smoke, fire and similar effects.\nThe particles are single polygons with single textures that always face the player.\nThey can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind.",
              "snippet": "drop ${1:parameters}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationDistance",
              "description": "A getter for setDynamicSimulationDistance",
              "snippet": "dynamicSimulationDistance ${1:category}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationDistanceCoef",
              "description": "A getter for setDynamicSimulationDistanceCoef",
              "snippet": "dynamicSimulationDistanceCoef ${1:class}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationEnabled",
              "description": "A getter for enableDynamicSimulation",
              "snippet": "dynamicSimulationEnabled ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationSystemEnabled",
              "description": "A getter for enableDynamicSimulationSystem",
              "text": "dynamicSimulationSystemEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/east",
              "description": "Pre-defined variable for the eastern side.",
              "text": "east"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/echo",
              "description": "Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version.",
              "snippet": "echo ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/edit3DENMissionAttributes",
              "description": "Open a window with scenario attribute in given section.",
              "snippet": "edit3DENMissionAttributes ${1:section}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/editObject",
              "description": "Show the edit object dialog for the given object. \n\u24d8Some Old Editor Command",
              "snippet": "editObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/editorSetEventHandler",
              "description": "Sets given event handler of given editor.\n\u24d8Some Old Editor Command",
              "snippet": "editorSetEventHandler ${2:[handler name,function]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/effectiveCommander",
              "description": "Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the effectiveCommander is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the effectiveCommander role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.",
              "snippet": "effectiveCommander ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/elevatePeriscope",
              "description": "Elevates periscope of a vehicle. Vehicles in Arma 3 which are compatible with this tech are Strider, remote laser designators, the robot arm on Eddie, etc. Please note that SDV submarine has a different periscope, which is just an animated selection and could be raised and lowered with animate command. \n\u24d8User can immediately override any elevation in progress by using assigned keyboard keys. To block user input use blockuser param.\nA  PeriscopeElevationChanged entity event handler is also provided.",
              "snippet": "elevatePeriscope ${2:[${3:turret}, ${4:elevation}, ${5:speed}, ${6:blockuser}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ifCode ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/else",
              "description": "Executes else code when if condition returns false",
              "snippet": "else ${2:elseCode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/emptyPositions",
              "description": "Returns the number of given positions in the vehicle.\n\nPositions can be \"Commander\", \"Driver\", \"Gunner\" or \"Cargo\"",
              "snippet": "emptyPositions ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAI",
              "description": "Enables parts of the AI behavior that was disabled by disableAI. \n\n\u26a0When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it _unit enableAI \"TeamSwitch\" so that the unit continues with waypoints\nSince Arma 3 v1.95.145843 it is possible to return the state of the given AI flag via checkAIFeature or set it using alias command enableAIFeature",
              "snippet": "enableAI ${2:skilltype}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "feature ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAIFeature",
              "description": "Enables/disables given AI feature. Feature may be one of:\n\n\"AwareFormationSoft\"\n\"CombatFormationSoft\"\n\nSince Arma 3 v1.95.145843 this command also supports disableAI / enableAI feature set via an alternative syntax.",
              "snippet": "enableAIFeature ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAIFeature",
              "description": "Enables/disables given AI feature. Feature may be one of:\n\n\"AwareFormationSoft\"\n\"CombatFormationSoft\"\n\nSince Arma 3 v1.95.145843 this command also supports disableAI / enableAI feature set via an alternative syntax.",
              "snippet": "enableAIFeature ${2:[${3:feature}, enable]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAimPrecision",
              "description": "Set whether animation's aim precision affects weapon sway.",
              "snippet": "enableAimPrecision ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAttack",
              "description": "Set if leader can issue attack commands to the soldiers in his group.",
              "snippet": "enableAttack ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAudioFeature",
              "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\".",
              "snippet": "enableAudioFeature [${1:feature}, ${2:enable}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAutoStartUpRTD",
              "description": "Toggle availability of the automated helicopter start-up and shutdown sequences.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enableAutoStartUpRTD ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAutoTrimRTD",
              "description": "Toggle auto-trim for RTD helicopters. \nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enableAutoTrimRTD ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCamShake",
              "description": "Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately.\nBy default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.",
              "snippet": "enableCamShake ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCaustics",
              "description": "Enable/disable caustics drawing.",
              "snippet": "enableCaustics ${1:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "channel ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableChannel",
              "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in Description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command.\n\u26a0Only the Alternative Syntax can affect Custom Radio channels (6-15).\n\u24d8This command:\ncannot disable global channel for the admin\ndoes not disable incoming text or voice\ndoes not interrupt own client's transmission in progress (but will prevent any further ones)\ndoes not affect chat related scripting commands such as vehicleChat, globalRadio etc.\nChannel\u00a0/\u00a0Number correspondence:\n\n0 = Global\n1 = Side\n2 = Command\n3 = Group (cannot be disabled with enableChannel nor Description.ext/disableChannels[])\n4 = Vehicle\n5 = Direct\n6-15 = Custom Radio",
              "snippet": "enableChannel ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "channel ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableChannel",
              "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in Description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command.\n\u26a0Only the Alternative Syntax can affect Custom Radio channels (6-15).\n\u24d8This command:\ncannot disable global channel for the admin\ndoes not disable incoming text or voice\ndoes not interrupt own client's transmission in progress (but will prevent any further ones)\ndoes not affect chat related scripting commands such as vehicleChat, globalRadio etc.\nChannel\u00a0/\u00a0Number correspondence:\n\n0 = Global\n1 = Side\n2 = Command\n3 = Group (cannot be disabled with enableChannel nor Description.ext/disableChannels[])\n4 = Vehicle\n5 = Direct\n6-15 = Custom Radio",
              "snippet": "enableChannel ${2:[${3:chat}, ${4:VoN}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCollisionWith",
              "description": "Cancels the effects of disableCollisionWith.",
              "snippet": "enableCollisionWith ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopter ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCoPilot",
              "description": "Toggles availability of the actions related to copilots (taking over controls, suspending controls, etc.). For Arma 3 version see enableCopilot",
              "snippet": "enableCoPilot ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCopilot",
              "description": "Enables copilot actions, toggles availability of the actions related to copilots, such as taking over controls, suspending controls, etc. This command triggers \"ControlsShifted\" event handler.\n\u24d8In multiplayer, execute this command globally to have it synced on all clients",
              "snippet": "enableCopilot ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDebriefingStats",
              "description": "Enable debriefing score table.",
              "snippet": "enableDebriefingStats [${1:left}, ${2:top}, ${3:width}, ${4:height}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDiagLegend",
              "description": "Enable or disable the legend for diagnostics. Internal dev only",
              "snippet": "enableDiagLegend ${1:Bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDynamicSimulation",
              "description": "Enables or disables Arma_3_Dynamic_Simulation for given non AI object",
              "snippet": "enableDynamicSimulation ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDynamicSimulationSystem",
              "description": "Enables or disables the whole Arma_3_Dynamic_Simulation system",
              "snippet": "enableDynamicSimulationSystem ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEndDialog",
              "description": "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.",
              "text": "enableEndDialog"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEngineArtillery",
              "description": "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.",
              "snippet": "enableEngineArtillery ${1:enabled}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEnvironment",
              "description": "Enable/disable environmental effects: ambient life and/or ambient sound.\n\u24d8Disabling ambient life will remove generation of anything that is coming from AmbientA3 map class (see Ambient System).\nThat means removing not only bees and cicadas around a player, but rabbits, snakes, seagulls and all the fish in the sea.",
              "snippet": "enableEnvironment ${1:enabled}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEnvironment",
              "description": "Enable/disable environmental effects: ambient life and/or ambient sound.\n\u24d8Disabling ambient life will remove generation of anything that is coming from AmbientA3 map class (see Ambient System).\nThat means removing not only bees and cicadas around a player, but rabbits, snakes, seagulls and all the fish in the sea.",
              "snippet": "enableEnvironment [${1:ambientLife}, ${2:ambientSound}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/environmentEnabled",
              "description": "Returns status of enableEnvironment command",
              "text": "environmentEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableFatigue",
              "description": "Enables/Disables the person's fatigue.",
              "snippet": "enableFatigue ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableGunLights",
              "description": "Sets AI group option how to use gun lights. The string argument can be:\n\"Auto\" - Depends on combat mode\n\"ForceOn\" - Always on\n\"ForceOff\" - Always off\n\nThis syntax is for Arma 3. For Arma 2 syntax, see enableGunLights Arma 2.",
              "snippet": "enableGunLights ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "thing ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableGunLights%20Arma%202",
              "description": "Force the AI to use gun lights. This command can be used to force lights on, but not to force lights off.\nThis syntax is for Arma 2: Operation Arrowhead. For Arma 3 syntax, see enableGunLights.",
              "snippet": "enableGunLights ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableInfoPanelComponent",
              "description": "Controls availability of component to given object info panel.",
              "snippet": "enableInfoPanelComponent [${2:panelID}, ${3:componentClassOrType}, ${4:enable}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = [unit, turretPath] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableInfoPanelComponent",
              "description": "Controls availability of component to given object info panel.",
              "snippet": "enableInfoPanelComponent [${3:panelID}, ${4:componentClassOrType}, ${5:enable}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitOrGroup ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableIRLasers",
              "description": "Allows the AI to use IR lasers.",
              "snippet": "enableIRLasers ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableMimics",
              "description": "Enables/disables mimics on a given unit.",
              "snippet": "enableMimics ${2:enabled}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enablePersonTurret",
              "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.",
              "snippet": "enablePersonTurret ${2:[${3:turretPath}, ${4:enable}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableRadio",
              "description": "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.",
              "snippet": "enableRadio ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableReload",
              "description": "Enable / disable reload when magazine is empty.",
              "snippet": "enableReload ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableRopeAttach",
              "description": "Enables or disables the ability to be attached to a rope end for the given entity.",
              "snippet": "enableRopeAttach ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSatNormalOnDetail",
              "description": "Enables/Disables satellite normal map or detail maps.",
              "snippet": "enableSatNormalOnDetail ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSaving",
              "description": "Enable / disable saving of the game with an optional autosave.",
              "snippet": "enableSaving ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSaving",
              "description": "Enable / disable saving of the game with an optional autosave.",
              "snippet": "enableSaving [${1:enable}, ${2:save}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSentences",
              "description": "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.",
              "snippet": "enableSentences ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSimulation",
              "description": "Enables / disables simulation for the given entity. This command will affect entity simulation only locally. For a global and JIP enabled alternative see enableSimulationGlobal",
              "snippet": "enableSimulation ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSimulationGlobal",
              "description": "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as enableSimulation when used in SP.",
              "snippet": "enableSimulationGlobal ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableStamina",
              "description": "Enable/disable stamina system",
              "snippet": "enableStamina ${2:enabled}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableStressDamage",
              "description": "Toggles stress damage in  Advanced Flight Model, which otherwise could be manually toggles in game setting: Options - Game - Helicopter Flight Model - Advanced - Stress Damage.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enableStressDamage ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableTeamSwitch",
              "description": "Enable / disable Team Switch. The default setting is enabled.",
              "snippet": "enableTeamSwitch ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableTraffic",
              "description": "Enable ambient traffic.",
              "snippet": "enableTraffic ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableUAVConnectability",
              "description": "Enables unit's AV terminal(s) connecting to UAV.",
              "snippet": "enableUAVConnectability [${2:uav}, ${3:checkAllItems}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "uav ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableUAVWaypoints",
              "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.",
              "snippet": "enableUAVWaypoints ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableVehicleCargo",
              "description": "Enable/disable option to transport other vehicles (if configured) or be transported.",
              "snippet": "enableVehicleCargo ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableVehicleSensor",
              "description": "Enable/disable given sensor",
              "snippet": "enableVehicleSensor [${2:componentName}, ${3:state}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableWeaponDisassembly",
              "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.",
              "snippet": "enableWeaponDisassembly ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableWeaponDisassembly",
              "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.",
              "snippet": "enableWeaponDisassembly ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endLoadingScreen",
              "description": "Finishes loading screen started by startLoadingScreen.",
              "text": "endLoadingScreen"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endMission",
              "description": "Finish the mission.\n\nThe end type can be:\n\"CONTINUE\"\n\"KILLED\"\n\"LOSER\"\n\"END1\"\n\"END2\"\n\"END3\"\n\"END4\"\n\"END5\"\n\"END6\"\n\nMission saves are deleted. Use failMission if they should not.\nTo maintain Arma 3 visual style, it is recommended to use BIS_fnc_endMission instead.",
              "snippet": "endMission ${1:endType}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enemy",
              "description": "Enemy side (enemy to all units). This command is not functional and appears to have be replaced by sideEnemy.",
              "text": "enemy"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/engineOn",
              "description": "Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local. \n\nNOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while.",
              "snippet": "engineOn ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesIsOnRTD",
              "description": "Returns which engines are producing some work.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enginesIsOnRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesPowerRTD",
              "description": "Returns power produced by engines in Watts.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enginesPowerRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesRpmRTD",
              "description": "Returns all engines RPM.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enginesRpmRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesTorqueRTD",
              "description": "Torque produced by engines in N\u00b7m (Newton*meter).For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "enginesTorqueRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/entities",
              "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.\nAlternative syntax introduced in Arma 3 v1.65.138685 allows to filter entities by type and alive status as well as to return entities currently in vehicles.\nOptimisation tip: Keep number of types in both includeTypes and excludeTypes arrays to a minimum by possibly using parent/base classes. If you have to use several types, arrange them in order so that the more common types go at the beginning of the array.",
              "snippet": "entities ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/entities",
              "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.\nAlternative syntax introduced in Arma 3 v1.65.138685 allows to filter entities by type and alive status as well as to return entities currently in vehicles.\nOptimisation tip: Keep number of types in both includeTypes and excludeTypes arrays to a minimum by possibly using parent/base classes. If you have to use several types, arrange them in order so that the more common types go at the beginning of the array.",
              "snippet": "entities ${1:[${2:typesInclude}, ${3:typesExclude}, ${4:includeCrews}, ${5:excludeDead}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/estimatedEndServerTime",
              "description": "Estimated end of MP game in seconds converted to serverTime.",
              "text": "estimatedEndServerTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/estimatedTimeLeft",
              "description": "Sets the estimated time left in the game that is shown in the \"Game in progress\" screen or in the master browser.\n\u24d8This command will force the server to broadcast serverTime to all clients without waiting for the next broadcast window (usually every 5 minutes).",
              "snippet": "estimatedTimeLeft ${1:seconds}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/evalObjectArgument",
              "description": "Return argument in mission editor of a given object. \n\u24d8Some Old Editor Command",
              "snippet": "evalObjectArgument ${2:[object, argument]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/everyBackpack",
              "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.",
              "snippet": "everyBackpack ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/everyContainer",
              "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.",
              "snippet": "everyContainer ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "argument ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exec",
              "description": "Execute a script using (the deprecated but still available) SQS syntax. SQF syntax (and execVM) is the most recent scripting language.\nThe magic variable _time used within the script contains the elapsed time in seconds since the script started.\n\u24d8To see the active SQS scripts currently in the scheduler, use diag_activeSQSScripts command.",
              "snippet": "exec ${2:script}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execEditorScript",
              "description": "Execute an editor script for the specified object.\n\u24d8Some Old Editor Command",
              "snippet": "execEditorScript ${2:[object,script]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = arguments ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execFSM",
              "description": "Execute scripted FSM and return the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. Variables set inside FSMs can be read/modified externally, using setFSMVariable and getFSMVariable commands.\n\nThe return value is the FSM handle; it can be used to determine (via completedFSM) when the FSM has finished.\nIn Arma 3, the FSM handle is also available within the FSM through the _thisFSM variable.\n\nScripted FSMs are added into the scheduler just like exec scripts, execVM scripts and spawn scripts.\nTo see what FSMs are currently in the scheduler, use diag_activeMissionFSMs command.\n\n\u26a0While the code placed into any of the sections of FSM cannot be suspended (canSuspend is false), the FSM itself is suspended every simulation between the state's init and precondition (exception is the init state). This is the only place where scripted FSM is suspended/resumed.\nThe usual difference between the state's init and precondition is 1 frame but if the scheduler is busy it can take longer. See FSM for more information about FSM's structure.",
              "snippet": "execFSM ${2:fsmFilePath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execFSM",
              "description": "Execute scripted FSM and return the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. Variables set inside FSMs can be read/modified externally, using setFSMVariable and getFSMVariable commands.\n\nThe return value is the FSM handle; it can be used to determine (via completedFSM) when the FSM has finished.\nIn Arma 3, the FSM handle is also available within the FSM through the _thisFSM variable.\n\nScripted FSMs are added into the scheduler just like exec scripts, execVM scripts and spawn scripts.\nTo see what FSMs are currently in the scheduler, use diag_activeMissionFSMs command.\n\n\u26a0While the code placed into any of the sections of FSM cannot be suspended (canSuspend is false), the FSM itself is suspended every simulation between the state's init and precondition (exception is the init state). This is the only place where scripted FSM is suspended/resumed.\nThe usual difference between the state's init and precondition is 1 frame but if the scheduler is busy it can take longer. See FSM for more information about FSM's structure.",
              "snippet": "execFSM ${1:fsmFilePath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Script) = arguments ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execVM",
              "description": "Compiles and adds SQF Script to the scheduler queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in private variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.\nIn order to understand execVM consider the following comparison:\nprivate _handle = _args execVM \"someFile.sqf\";\n//\u00a0is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\nSo if you need multiple execution of the same file, you might want to store it in a function (Functions Library), otherwise, for a single execution, execVM is a good choice.\n\nTo see what VM scripts are currently in the scheduler, use diag_activeSQFScripts command.\n\u26a0If the file you are executing is not prepared using UTF-8 encoding and contains some characters  with codes > 127, they might convert incorrectly",
              "snippet": "execVM ${2:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Script) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execVM",
              "description": "Compiles and adds SQF Script to the scheduler queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in private variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.\nIn order to understand execVM consider the following comparison:\nprivate _handle = _args execVM \"someFile.sqf\";\n//\u00a0is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\nSo if you need multiple execution of the same file, you might want to store it in a function (Functions Library), otherwise, for a single execution, execVM is a good choice.\n\nTo see what VM scripts are currently in the scheduler, use diag_activeSQFScripts command.\n\u26a0If the file you are executing is not prepared using UTF-8 encoding and contains some characters  with codes > 127, they might convert incorrectly",
              "snippet": "execVM ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exit",
              "description": "Stops the execution of a  SQS script.\n\nIt's ignored in  SQF Scripts.",
              "text": "exit"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ifType ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exitWith",
              "description": "Exits current scope {...} it is executed from if condition evaluates true, creates new scope {...code...} and executes the given code in it. Often used for exiting do, for, count or forEach. Simply exiting waitUntil or onEachFrame scopes with exitWith will have no effect as these scopes are called repeatedly by the engine and require different handling to terminate (see Example 3).",
              "snippet": "exitWith ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exp",
              "description": "Let x be a number, then exp (x) is equal to e to the power of x (or e^x)",
              "snippet": "exp ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/expectedDestination",
              "description": "Return expected destination of unit as an array.",
              "snippet": "expectedDestination ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exportJIPMessages",
              "description": "Export list of JIP to a file. Special: BattlEye's RCON variant of this command is #exportJIPqueue (see also Multiplayer_Server_Commands)",
              "snippet": "exportJIPMessages ${1:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exportLandscapeXYZ",
              "description": "Exports landscape as XYZ file.\n\nNote: Not available in Retail Version",
              "snippet": "exportLandscapeXYZ ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/eyeDirection",
              "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).",
              "snippet": "eyeDirection ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/eyePos",
              "description": "Returns the object's eyes / main turret position.",
              "snippet": "eyePos ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/face",
              "description": "Returns the face of a person.",
              "snippet": "face ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/faction",
              "description": "Gets unit faction. Factions were introduced in Arma 2 and are defined under CfgFactionClasses.\n\n\n\nSide\n\n1.00\n\n1.51\n\n1.96\n\n\nwest/blufor\n\n\nUSMC\nCDF\n\n\nBIS_US\nBIS_CZ\nBIS_GER\nBIS_BAF (BAF DLC)\n\n\nBLU_F (NATO)\nBLU_G_F (FIA)\nBLU_T_F (Pacific NATO, Apex Expansion)\nBLU_CTRG_F (Pacific CTRG, Apex Expansion)\nBLU_GEN_F (Gendarmerie, Apex Expansion)\nBLU_W_F (Woodland NATO, Contact Expansion)\n\n\neast/opfor\n\n\nINS (ChDKZ)\nRU (Russia)\n\n\nBIS_TK (Takistan army)\nBIS_TK_INS (TK insurgents)\n\n\nOPF_F (Iranian CSAT)\nOPF_G_F (FIA)\nOPF_T_F (Chinese CSAT, Apex Expansion)\nOPF_R_F (Spetznatz, Contact Expansion)\n\n\nresistance/independent\n\n\nGUE (Guerilla)\n\n\nBIS_TK_GUE\nBIS_UN (United Nations)\nPMC_BAF (PMC DLC)\n\n\nIND_F (AAF)\nIND_G_F (FIA)\nIND_C_F (Syndikat, Apex Expansion)\nIND_E_F (LDF, Contact Expansion)\nIND_L_F (Looters, Contact Expansion)\n\n\ncivilian\n\n\nCIV\nCIV_RU\n\n\nBIS_TK_CIV\nBIS_CIV_special\n\n\nCIV_F\nCIV_IDAP_F (Laws of War DLC)\n\n\u24d8If a unit's faction is not defined in its config, an empty string is returned.",
              "snippet": "faction ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeMusic",
              "description": "Changes the current music volume to the given value smoothly within the given time.",
              "snippet": "fadeMusic ${2:volume}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeRadio",
              "description": "Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0.",
              "snippet": "fadeRadio ${2:volume}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeSound",
              "description": "Changes the sound volume smoothly within the given time.",
              "snippet": "fadeSound ${2:volume}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeSpeech",
              "description": "Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0.",
              "snippet": "fadeSpeech ${2:volume}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/failMission",
              "description": "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission.\n\nThe end type can be:\n\"CONTINUE\"\n\"KILLED\"\n\"LOSER\"\n\"END1\"\n\"END2\"\n\"END3\"\n\"END4\"\n\"END5\"\n\"END6\"\n\nMission saves won't be deleted.\n\nTo maintain Arma 3 visual style, it is recommended to use BIS_fnc_endMission instead.",
              "snippet": "failMission ${1:endtype}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/false",
              "description": "Always false.",
              "text": "false"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fillWeaponsFromPool",
              "description": "Adds magazines from the campaign pool to the given unit, depending on his weapons.",
              "snippet": "fillWeaponsFromPool ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/find",
              "description": "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found.\n\u26a0Search is cASe-seNsItiVE!",
              "snippet": "find ${2:element}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/find",
              "description": "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found.\n\u26a0Search is cASe-seNsItiVE!",
              "text": "string"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findCover",
              "description": "Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional.\n\u26a0Not implemented in Arma 2 or Arma 3, always returns objNull",
              "snippet": "findCover ${2:[${3:position}, ${4:hidePosition}, ${5:maxDist}, ${6:minDist}, ${7:visibilityPosition}, ${8:ignoreObject}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Display) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findDisplay",
              "description": "Finds a display by its IDD which can either be defined in missionConfigFile (description.ext) or configFile (config.cpp)\nIf the specified display can't be found displayNull (\"No display\") is returned, which can be tested with the isNull command.\n\n\u26a0Dedicated servers and headless clients don't have a primary display (e.g findDisplay 46 will return displayNull).\nDetect both with the hasInterface command.\nA list of common displays can be found in the notes below; for a full list, see findDisplay/Arma 3 IDD list.",
              "snippet": "findDisplay ${1:idd}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEditorObject",
              "description": "Return object that matches the provided reference. \n\u24d8Some Old Editor Command",
              "snippet": "findEditorObject ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = center ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEmptyPosition",
              "description": "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [radius] from the [center] and looks as far away as [radius + maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned. This command ignores moving objects present within search area. The search area could be preloaded with findEmptyPositionReady command. See also: BIS_fnc_findSafePos.",
              "snippet": "findEmptyPosition ${2:[${3:radius}, ${4:maxDistance}, vehicleType]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = center ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEmptyPositionReady",
              "description": "Preloads area to be used with findEmptyPosition command and returns true when area is ready. The size of the area preloaded is from center - radius - maxDistance to center + radius + maxDistance\n\u26a0Preloading large areas may take a long time, we are talking minutes. However once preloaded, it stays preloaded even after mission restart",
              "snippet": "findEmptyPositionReady ${2:[${3:radius}, ${4:maxDistance}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findIf",
              "description": "Searches for an element within array for which the code evaluates to true.\nReturns the zero-based index on success or -1 if not found.\nCode on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as _x.\n\n\u24d8findIf terminates as soon as it finds an element that fulfills the condition, thus it is more efficient than count in scenarios where you need to check for presence / absence of at least one element that evaluates to true.",
              "snippet": "findIf ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findNearestEnemy",
              "description": "Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see addVehicle) can be returned as valid nearest target.",
              "snippet": "findNearestEnemy ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnloadInCombat",
              "description": "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.",
              "snippet": "setUnloadInCombat ${2:[${3:allowCargo}, ${4:allowTurrets}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/finishMissionInit",
              "description": "Finish world initialization before mission is launched.",
              "text": "finishMissionInit"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/finite",
              "description": "Returns true if the provided number is finite (not infinite and a valid number). \n\u24d8\nMaximum finite Number\u00a0: 3.40282e+38\nMinimum finite Number\u00a0: -3.40282e+38",
              "snippet": "finite ${1:number}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fire",
              "description": "Forces a unit to fire the given weapon. See also: BIS_fnc_fire.\n\u24d8Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local.",
              "snippet": "fire ${2:muzzle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fire",
              "description": "Forces a unit to fire the given weapon. See also: BIS_fnc_fire.\n\u24d8Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local.",
              "snippet": "fire ${2:[${3:muzzle}, ${4:mode}, ${5:magazine}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = sourceVehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fireAtTarget",
              "description": "Remotely forces a unit to fire the given weapon. See also: BIS_fnc_fire",
              "snippet": "fireAtTarget ${2:[${3:targetVehicle}, ${4:weaponMuzzleName}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/firstBackpack",
              "description": "Returns the first stored backpack.",
              "snippet": "firstBackpack ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flag",
              "description": "Returns the original flag pole of the flag the unit is carrying.",
              "snippet": "flag ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagAnimationPhase",
              "description": "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed",
              "snippet": "flagAnimationPhase ${1:flag}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagOwner",
              "description": "Returns the global owner of a flag. A getter for setFlagOwner. Note that owner of a flag is Object rather than Number, as how it is usually with other owner commands",
              "snippet": "flagOwner ${1:flag}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fleeing",
              "description": "Checks if a unit is fleeing.\n\nNotes:\nFleeing only affects AI led groups.\nOnly the group as a whole can flee (or not).\nThe courage of the AI group is based on the group's leader courage subskill.\nEach group has a max strength (summed \"armor\" of all infantry units - plus armor when inside vehicles).\nIf the group losses by injury/damage or death/destruction are higher than the max strength, multiplied by leader's courage or allowFleeing level , then the group will start fleeing.\nAs result primarily the AI flees to a nearby \"supply point\" (some friendly units - preferably with medic or engineer, or a vehicle with repair/ammo/fuel cargo). Alternatively it will try to find a safe position within a 600m radius from the initial waypoint (danger, distance, amount of cover positions are taken into account).\nAfter the fleeing has been finished the group's initial strength is reset.\nFleeing units in combatMode red, will be set to yellow when fleeing to avoid engaging enemies while doing so.\nWhile fleeing, the group leader will be set to green, to avoid giving engage or fire orders, unless in combatMode blue already. Also speedMode is set to full.\nWhen reaching their flee point/destination, they will change to combatMode yellow and speedMode normal.\nWith allowFleeing one can make unit's flee earlier (or essentially never flee). Apply it, overrides the courage subskill influence.",
              "snippet": "fleeing ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/floor",
              "description": "Returns the next lowest integer in relation to x.",
              "snippet": "floor ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "aircraft ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flyInHeight",
              "description": "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.",
              "snippet": "flyInHeight ${2:altitude}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "aircraft ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flyInHeightASL",
              "description": "Sets the minimal ASL height. Final height is flyInHeight max flyInHeightASL - the higher altitude has priority.",
              "snippet": "flyInHeightASL [${2:standardAltitude}, ${3:combatAltitude}, ${4:stealthAltitude}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fog",
              "description": "A getter for setFog. Returns the current value of the fog in range 0...1.",
              "text": "fog"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fogForecast",
              "description": "Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.",
              "text": "fogForecast"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fogParams",
              "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog",
              "text": "fogParams"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceAddUniform",
              "description": "Create a new uniform and hard link it into slot (without any restrictions).",
              "snippet": "forceAddUniform ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceAtPositionRTD",
              "description": "Adds force generator to world.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "forceAtPositionRTD ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceCadetDifficulty",
              "description": "Forces showCadetHints and showCadetWP global Cadet  Arma 3 difficulty, returns previous settings.",
              "snippet": "forceCadetDifficulty [${1:showCadetHints}, ${2:showCadetWP}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forcedMap",
              "description": "Returns if map was forced by using forceMap command or openMap command with force option",
              "text": "forcedMap"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceEnd",
              "description": "Forces mission ending (set with endMission) even if a camera effect or any another condition delays the endMission (mostly in Operation Flashpoint).",
              "text": "forceEnd"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceFlagTexture",
              "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture, but getForcedFlagTexture.\n\u24d8Forced flag texture is an additional flag texture, which visually overrides original flag texture and therefore is very expensive to simulate, so use the functionality sparingly.",
              "snippet": "forceFlagTexture ${2:texture}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceFollowRoad",
              "description": "Forces the vehicle to stay on road.",
              "snippet": "forceFollowRoad ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceGeneratorRTD",
              "description": "Adds force generator to world.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "forceGeneratorRTD ${1:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceMap",
              "description": "Opens non-interactive main map in background that overrides user screen. \n\u26a0When map is forced with this command, the user is able to fire but cannot see the world, just the map. The map cannot be closed manually and the user can get stuck requiring the game restart. Make sure you provide scripted mechanics to resolve this, should you need to force the map.\nTo force open interactive map use openMap command.",
              "snippet": "forceMap ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceRespawn",
              "description": "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no \"so and so was killed\" message and no score adjustment.",
              "snippet": "forceRespawn ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceSpeed",
              "description": "Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s.",
              "snippet": "forceSpeed ${2:speed}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWalk",
              "description": "Forces unit to walk even if run or sprint is selected.",
              "snippet": "forceWalk ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWeaponFire",
              "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on player. See also: BIS_fnc_fire",
              "snippet": "forceWeaponFire [${2:muzzle}, ${3:firemode}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWeatherChange",
              "description": "Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag). \n\n\n\n\u24d8The engine has own idea about the weather and will interfere with your scripted weather at every opportunity it gets. So don't give it the opportunity. In the editor's Intel there are Manual Override setting for many aspects of the weather. Select them to disable engine interference. Some commands such as setWaves and  setLightnings will not even work until their respective settings are set to manual.",
              "text": "forceWeatherChange"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = code ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEach",
              "description": "Executes the given command(s) on every item of an array.\nThe array items are represented by the magic variable _x. The array indices are represented by _forEachIndex.\nIn Arma 2 and later, the variable _x is always local to the forEach block so it is safe to nest them.",
              "snippet": "forEach ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "command ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMember",
              "description": "Executes the given command recursively for both teams and agents that are members of the given team. For teams only use forEachMemberTeam. For agents only use forEachMemberAgent.",
              "snippet": "forEachMember ${2:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "command ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMemberAgent",
              "description": "Executes the given command recursively for each agent that is a member of the given team. For just teams use forEachMemberTeam. For both teams and agents use forEachMember.",
              "snippet": "forEachMemberAgent ${2:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "command ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMemberTeam",
              "description": "Executes the given command recursively for each team that is a member of the given team. For just agents use forEachMemberAgent. For both teams and agents use forEachMember.",
              "snippet": "forEachMemberTeam ${2:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forgetTarget",
              "description": "Resets the info a group has about a target, forcing knowsAbout value to 0.",
              "snippet": "forgetTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/format",
              "description": "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use parseNumber. \n\u26a0The output of this command is limited to ~8Kb. joinString on the other hand doesn't have such limit",
              "snippet": "format ${1:[${2:formatString}, ${3:var1}, ${4:var2} ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formation",
              "description": "Returns the current formation of a group.",
              "snippet": "formation ${1:grp}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationDirection",
              "description": "Return the direction in degrees of the 'unit' watching in formation.",
              "snippet": "formationDirection ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationLeader",
              "description": "Return leader of the formation.",
              "snippet": "formationLeader ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationMembers",
              "description": "Return list of units (drivers) in the formation.",
              "snippet": "formationMembers ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationPosition",
              "description": "Return position of unit in the formation",
              "snippet": "formationPosition ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationTask",
              "description": "Return the current task of the unit in the formation.\n \nYou can't use it in ArmA 2, it will always returns \"NOTHING\"",
              "snippet": "formationTask ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formatText",
              "description": "Creates a Structured Text similar to format command.",
              "snippet": "formatText ${1:[${2:format}, argument1, argument2, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formLeader",
              "description": "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.",
              "snippet": "formLeader ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/freeLook",
              "description": "Returns true if freelook is active.",
              "text": "freeLook"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/friendly",
              "description": "Friendly side (friendly to all units).\n\u26a0This command is not functional and appears to have be replaced by sideFriendly.",
              "text": "friendly"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(For Type) = for ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/from",
              "description": "Continue sequence of for construct. It sets the start value of the index variable.",
              "snippet": "from ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fromEditor",
              "description": "Return if given team was inserted directly from mission editor.",
              "snippet": "fromEditor ${1:teamMember}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fuel",
              "description": "Checks how much fuel is left in the gas tank of a vehicle.",
              "snippet": "fuel ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, String, Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fullCrew",
              "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.\nNOTE that with introduction of person turrets, the cargo indexes listed in the return are true for moveInCargo command but incompatible with actions such as \"GetInCargo\" and \"MoveToCargo\". To find out seats compatible with cargo action commands, execute command with \"cargo\" filter:\nfullCrew [heli, \"cargo\", true];\nThe return array is ordered according to cargo index compatible with action cargo commands, i.e. 1st element has index 0, second - index 1, etc. For example armed WY-55 Hellcat reports:\n[[<NULL-object>,\"cargo\",2,[],false],[<NULL-object>,\"cargo\",3,[],false],[<NULL-object>,\"cargo\",4,[],false],[<NULL-object>,\"cargo\",5,[],false]]\nfor cargo positions. The following commands will put player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];",
              "snippet": "fullCrew ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, String, Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fullCrew",
              "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.\nNOTE that with introduction of person turrets, the cargo indexes listed in the return are true for moveInCargo command but incompatible with actions such as \"GetInCargo\" and \"MoveToCargo\". To find out seats compatible with cargo action commands, execute command with \"cargo\" filter:\nfullCrew [heli, \"cargo\", true];\nThe return array is ordered according to cargo index compatible with action cargo commands, i.e. 1st element has index 0, second - index 1, etc. For example armed WY-55 Hellcat reports:\n[[<NULL-object>,\"cargo\",2,[],false],[<NULL-object>,\"cargo\",3,[],false],[<NULL-object>,\"cargo\",4,[],false],[<NULL-object>,\"cargo\",5,[],false]]\nfor cargo positions. The following commands will put player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];",
              "snippet": "fullCrew ${1:[${2:vehicle}, ${3:type}, ${4:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearIDCAmmoCount",
              "description": "Returns ammo count of assigned magazine.",
              "snippet": "gearIDCAmmoCount ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearSlotAmmoCount",
              "description": "Returns ammo count of assigned magazine.",
              "snippet": "gearSlotAmmoCount ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearSlotData",
              "description": "Returns gear slot item name.",
              "snippet": "gearSlotData ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENActionState",
              "description": "Returns state of given action in the Eden Editor.\n\nSee the list of all actions.",
              "snippet": "get3DENActionState ${1:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Anything) = entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENAttribute",
              "description": "Returns the value of the given entity's attribute in Eden Editor.\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "get3DENAttribute ${2:attribute}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENCamera",
              "description": "Returns the camera Object used by the Eden Editor.",
              "text": "get3DENCamera"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Eden Entity) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENConnections",
              "description": "Return all connections currently present on an entity.",
              "snippet": "get3DENConnections ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Eden Entity, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENEntity",
              "description": "Returns Eden Entity based on its Eden ID. If the ID points to a layer or a comment, the ID will be returned instead.",
              "snippet": "get3DENEntity ${1:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENEntityID",
              "description": "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.",
              "snippet": "get3DENEntityID ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENGrid",
              "description": "Returns the grid increment for the given transformation type.\nTransformation types:\nRotation - \"r\"\nTranslation - \"t\"\nScale - \"s\"",
              "snippet": "get3DENGrid ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENIconsVisible",
              "description": "Get visibility state of Eden Editor icons.",
              "text": "get3DENIconsVisible"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENLayerEntities",
              "description": "Return all entities and sub-layer in Eden Entity layer.",
              "snippet": "get3DENLayerEntities ${1:layerID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENLinesVisible",
              "description": "Get visibility state of Eden Editor lines.",
              "text": "get3DENLinesVisible"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = section ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENMissionAttribute",
              "description": "Return value of scenario attribute. For a list of all available mission attributes see Mission Attributes.\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "get3DENMissionAttribute ${2:class}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Eden Entity, Object, Group, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENMouseOver",
              "description": "Returns the Eden Entity the mouse is hovering over in Eden Editor.",
              "text": "get3DENMouseOver"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENSelected",
              "description": "Returns an array of all selected Eden Editor Entities of the given type, or, if empty string \"\" is used, an array of 6 arrays in the following format: [[/*objects...*/],[/*groups...*/],[/*triggers...*/],[/*logics...*/],[/*waypoints...*/],[/*markers...*/]] Layers and comments are not included in the all types array return. In case a wrong type is used the command will return [[],[],[],[],[],[]] and an error message is displayed.",
              "snippet": "get3DENSelected ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAimingCoef",
              "description": "Get current aiming coefficient (higher ~ less precise, default is 1)",
              "snippet": "getAimingCoef ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllEnvSoundControllers",
              "description": "Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds.",
              "snippet": "getAllEnvSoundControllers ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllHitPointsDamage",
              "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:\n0: no damage\n1: full damage",
              "snippet": "getAllHitPointsDamage ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllOwnedMines",
              "description": "Gets all mine objects this unit has ownership over.",
              "snippet": "getAllOwnedMines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllSoundControllers",
              "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.",
              "snippet": "getAllSoundControllers ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllUnitTraits",
              "description": "Returns unit traits, native or set by setUnitTrait.",
              "snippet": "getAllUnitTraits ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAmmoCargo",
              "description": "Returns the amount (1 is full) of ammo resources in the cargo space of a rearm vehicle. \n\u24d8Since Arma 3 v1.94.145939 the return value for vehicles that are not configured to have ability to rearm other vehicles is -1. (Prior to that the value was negative infinity)",
              "snippet": "getAmmoCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAnimAimPrecision",
              "description": "Returns aim precision for current animation",
              "snippet": "getAnimAimPrecision ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAnimSpeedCoef",
              "description": "Get coefficient for animation speed.",
              "snippet": "getAnimSpeedCoef ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArray",
              "description": "Extract array from config entry.",
              "snippet": "getArray ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryAmmo",
              "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.",
              "snippet": "getArtilleryAmmo ${1:[unit1, unit2, unit3....]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryComputerSettings",
              "description": "Returns settings from artillery computer currently opened by player.",
              "text": "getArtilleryComputerSettings"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryETA",
              "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.",
              "snippet": "getArtilleryETA [${2:targetPosition}, ${3:magazineType}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssetDLCInfo",
              "description": "Returns DLC information about given object or model.",
              "snippet": "getAssetDLCInfo ${1:asset}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Boolean, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssetDLCInfo",
              "description": "Returns DLC information about given object or model.",
              "snippet": "getAssetDLCInfo ${1:[${2:class}, ${3:config}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssignedCuratorLogic",
              "description": "Returns curator logic to which given player has access.",
              "snippet": "getAssignedCuratorLogic ${1:player}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssignedCuratorUnit",
              "description": "Returns unit assigned to curator logic.",
              "snippet": "getAssignedCuratorUnit ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAttackTarget",
              "description": "Returns the target given unit is engaging.",
              "text": "getAttackTarget"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAudioOptionVolumes",
              "description": "Returns profile audio volumes in format [effects, music, radio, von].",
              "text": "getAudioOptionVolumes"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBackpackCargo",
              "description": "Returns all backpack types and count from the cargo space.",
              "snippet": "getBackpackCargo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBleedingRemaining",
              "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.",
              "snippet": "getBleedingRemaining ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBurningValue",
              "description": "Returns how much the unit is exposed to fire damage.",
              "snippet": "getBurningValue ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCalculatePlayerVisibilityByFriendly",
              "description": "Returns true if visibility of player by friendly units is calculated.",
              "text": "getCalculatePlayerVisibilityByFriendly"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCameraViewDirection",
              "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]",
              "snippet": "getCameraViewDirection ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCargoIndex",
              "description": "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.",
              "snippet": "getCargoIndex ${2:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCenterOfMass",
              "description": "Returns center of mass of an object.",
              "snippet": "getCenterOfMass ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getClientState",
              "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\n\ngetClientStateNumber\n\ngetClientState\n\nDescription\n\n\n0\n\"NONE\"\nNo client (or singleplayer)\n\n\n1\n\"CREATED\"\nClient is created\n\n\n2\n\"CONNECTED\"\nClient is connected to server, message formats are registered\n\n\n3\n\"LOGGED IN\"\nIdentity is created\n\n\n4\n\"MISSION SELECTED\"\nMission is selected\n\n\n5\n\"MISSION ASKED\"\nServer was asked to send / not send mission\n\n\n6\n\"ROLE ASSIGNED\"\nRole was assigned (and confirmed)\n\n\n7\n\"MISSION RECEIVED\"\nMission received\n\n\n8\n\"GAME LOADED\"\nIsland loaded, vehicles received\n\n\n9\n\"BRIEFING SHOWN\"\nBriefing was displayed\n\n\n10\n\"BRIEFING READ\"\nReady to play mission\n\n\n11\n\"GAME FINISHED\"\nGame was finished\n\n\n12\n\"DEBRIEFING READ\"\nDebriefing read, ready to continue with next mission",
              "text": "getClientState"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getClientStateNumber",
              "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\n\ngetClientStateNumber\n\ngetClientState\n\nDescription\n\n\n0\n\"NONE\"\nNo client (or singleplayer)\n\n\n1\n\"CREATED\"\nClient is created\n\n\n2\n\"CONNECTED\"\nClient is connected to server, message formats are registered\n\n\n3\n\"LOGGED IN\"\nIdentity is created\n\n\n4\n\"MISSION SELECTED\"\nMission is selected\n\n\n5\n\"MISSION ASKED\"\nServer was asked to send / not send mission\n\n\n6\n\"ROLE ASSIGNED\"\nRole was assigned (and confirmed)\n\n\n7\n\"MISSION RECEIVED\"\nMission received\n\n\n8\n\"GAME LOADED\"\nIsland loaded, vehicles received\n\n\n9\n\"BRIEFING SHOWN\"\nBriefing was displayed\n\n\n10\n\"BRIEFING READ\"\nReady to play mission\n\n\n11\n\"GAME FINISHED\"\nGame was finished\n\n\n12\n\"DEBRIEFING READ\"\nDebriefing read, ready to continue with next mission",
              "text": "getClientStateNumber"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCompatiblePylonMagazines",
              "description": "Get array of compatible pylon magazines",
              "snippet": "getCompatiblePylonMagazines ${2:pylon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vehicleClass ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCompatiblePylonMagazines",
              "description": "Get array of compatible pylon magazines",
              "snippet": "getCompatiblePylonMagazines ${2:pylon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getConnectedUAV",
              "description": "Returns UAV if unit has connection to some UAV.",
              "snippet": "getConnectedUAV ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getContainerMaxLoad",
              "description": "Returns max load value of given container. Currently works only with uniform, vest and backpack classes.",
              "snippet": "getContainerMaxLoad ${1:containerClass}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCursorObjectParams",
              "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).",
              "text": "getCursorObjectParams"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCustomAimCoef",
              "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.",
              "snippet": "getCustomAimCoef ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCustomSoundController",
              "description": "Returns current value set to the controller (see setCustomSoundController)",
              "snippet": "getCustomSoundController [${1:vehicle}, ${2:controller}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCustomSoundControllerCount",
              "description": "Returns current number of custom sound controllers supported by the engine for the given vehicle (currently 32)",
              "snippet": "getCustomSoundControllerCount ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDammage",
              "description": "Returns the object damage in the range from 0 to 1. Alias of damage.",
              "snippet": "getDammage ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDescription",
              "description": "Returns the string representation of unit as an four slots array.",
              "snippet": "getDescription ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDir",
              "description": "Returns the object heading in the range 0..360.\n\nAn alternative syntax was added that gets heading from one object or position to another object or position, the engine equivalent of BIS_fnc_dirTo.",
              "snippet": "getDir ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = pos1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDir",
              "description": "Returns the object heading in the range 0..360.\n\nAn alternative syntax was added that gets heading from one object or position to another object or position, the engine equivalent of BIS_fnc_dirTo.",
              "snippet": "getDir ${2:pos2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDirVisual",
              "description": "Returns object's heading in the range from 0 to 360 in render time scope.",
              "snippet": "getDirVisual ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDiverState",
              "description": "Returns true when object is in diver state i.e. when unit would put diving goggles on. \n\u24d8Diving goggles remove blurriness underwater, however when assigned, they do not appear on the face of the unit until the unit steps into the water. This command allows to detect the moment when the goggles are visible. If the unit doesn't have diving goggles assigned, this command would still return true at appropriate time if the unit steps into the water.",
              "snippet": "getDiverState ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDLCAssetsUsage",
              "description": "Returns an array of the DLC usage times.",
              "text": "getDLCAssetsUsage"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDLCAssetsUsageByName",
              "description": "Returns an array with the session and global time the asset has been used.",
              "snippet": "getDLCAssetsUsageByName ${1:assetName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDLCs",
              "description": "Returns array of appIDs of DLCs.",
              "snippet": "getDLCs ${1:filter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDLCUsageTime",
              "description": "Returns total time the assets of the given DLC have been used. See Arma 3 DLCs Overview for a list of DLCs and ids.",
              "snippet": "getDLCUsageTime ${1:appId}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorCamera",
              "description": "Fetches a reference to the mission editor camera.\n\u24d8Some Old Editor Command",
              "snippet": "getEditorCamera ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorMode",
              "description": "Returns the current mode of the editor.\n\u24d8Some Old Editor Command",
              "snippet": "getEditorMode ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorObjectScope",
              "description": "Returns the editor object scope of the specified editor object.\n\u24d8Some Old Editor Command",
              "snippet": "getEditorObjectScope ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getElevationOffset",
              "description": "Returns the map elevation offset from [map]/config.cpp.\n\nReturns 0 if there's no elevationOffset defined in the config of the current world.",
              "text": "getElevationOffset"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEnvSoundController",
              "description": "Returns value of the specified controller.",
              "snippet": "getEnvSoundController ${2:controller}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFatigue",
              "description": "Returns fatigue of given unit.",
              "snippet": "getFatigue ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFieldManualStartPage",
              "description": "Returns array of the starting topic and hint the given field manual should display.",
              "snippet": "getFieldManualStartPage ${1:display}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getForcedFlagTexture",
              "description": "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture",
              "snippet": "getForcedFlagTexture ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = side1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFriend",
              "description": "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it is friendly. See also Side relations.",
              "snippet": "getFriend ${2:side2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = FSMhandle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFSMVariable",
              "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
              "snippet": "getFSMVariable ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = FSMhandle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFSMVariable",
              "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
              "snippet": "getFSMVariable ${1:[${3:name}, ${4:defaultValue}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFuelCargo",
              "description": "Returns the fuel amount (1 is full) in the cargo space of a refueling vehicle.\n\u24d8Since Arma 3 v1.94.145939 the return value for vehicles that are not configured to have ability to refuel other vehicles is -1. (Prior to that the value was negative infinity)",
              "snippet": "getFuelCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGraphValues",
              "description": "Generate graph y - coordinates of all input values within specific x and y range.",
              "snippet": "getGraphValues [[${1:graphMinX}, ${2:graphMaxX}, ${3:graphMinY}, ${4:graphMaxY}, ${5:valueCount}, ${6:randomOffset}], x1, y1, x2, y2, ... xn, yn]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIcon",
              "description": "Get group icon properties.",
              "snippet": "getGroupIcon ${2:ID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIconParams",
              "description": "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.",
              "snippet": "getGroupIconParams ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIcons",
              "description": "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]",
              "snippet": "getGroupIcons ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHideFrom",
              "description": "Returns the Position where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.",
              "snippet": "getHideFrom ${2:enemy}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Nothing) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHit",
              "description": "Returns selection damage. Same as getHitPointDamage, only the argument is selection part instead of hit point.\n\u24d8Some part names are in Czech; see translation table.",
              "snippet": "getHit ${2:selection}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Nothing) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHitIndex",
              "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.\n0: no damage\n1: full damage",
              "snippet": "getHitIndex ${2:hitPartIndex}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Nothing) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHitPointDamage",
              "description": "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit.\n0: no damage\n1: full damage",
              "snippet": "getHitPointDamage ${2:hitPointName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getItemCargo",
              "description": "Returns all items names and count from ammo box (or any general weapon holder container).",
              "snippet": "getItemCargo ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array, Number, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getLighting",
              "description": "Gets general environment's light settings.",
              "text": "getLighting"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getLightingAt",
              "description": "Gets provided object's lighting information.",
              "snippet": "getLightingAt ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getLoadedModsInfo",
              "description": "Returns information about all loaded modifications.\n\n\u24d8The first 7 are equal to whats printed to RPT at game startup in the ======== mods ======= category.",
              "text": "getLoadedModsInfo"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMagazineCargo",
              "description": "Returns all magazines types and count from the cargo space",
              "snippet": "getMagazineCargo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerColor",
              "description": "Returns marker color for given marker.\n\u24d8This command is identical to markerColor.",
              "snippet": "getMarkerColor ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerPos",
              "description": "Returns marker position. See also setMarkerPos.\n\u24d8This command is identical to markerPos.",
              "snippet": "getMarkerPos ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerPos",
              "description": "Returns marker position. See also setMarkerPos.\n\u24d8This command is identical to markerPos.",
              "snippet": "getMarkerPos ${1:[${2:markerName}, ${3:preserveElevation}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerSize",
              "description": "Returns the size of the given marker. A getter for setMarkerSize and an alias of markerSize.",
              "snippet": "getMarkerSize ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerType",
              "description": "Returns the type of a given marker. See cfgMarkers for a list of standard markers.",
              "snippet": "getMarkerType ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMass",
              "description": "Returns mass of a PhysX object.",
              "snippet": "getMass ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfig",
              "description": "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:\nExternal Description.ext file\nEden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
              "snippet": "getMissionConfig ${1:attribute}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, String, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfigValue",
              "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:\nExternal Description.ext file\nEden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.\n\n\u26a0This command cannot force return type, it will return the value of the type given in config. Use isEqualType to additionally reaffirm the correct type if necessary to account for human error.",
              "snippet": "getMissionConfigValue ${1:attribute}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, String, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfigValue",
              "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:\nExternal Description.ext file\nEden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.\n\n\u26a0This command cannot force return type, it will return the value of the type given in config. Use isEqualType to additionally reaffirm the correct type if necessary to account for human error.",
              "snippet": "getMissionConfigValue [${1:attribute}, ${2:defaultValue}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionDLCs",
              "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!",
              "text": "getMissionDLCs"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionLayerEntities",
              "description": "Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace.\n\nUseful for disabling / enabling whole parts of the scenario which you add to specific layer while editing.\n\u24d8Default layers are not returned.",
              "snippet": "getMissionLayerEntities ${1:layerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionLayerEntities",
              "description": "Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace.\n\nUseful for disabling / enabling whole parts of the scenario which you add to specific layer while editing.\n\u24d8Default layers are not returned.",
              "snippet": "getMissionLayerEntities ${1:layerID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionPath",
              "description": "Returns mission root plus the filename in a form of filepath to be used with commands requiring absolute path such as playSound3D, drawIcon3D, createSimpleObject, etc. Any leading \"\\\" in the filename will be stripped as the mission root includes one already.",
              "snippet": "getMissionPath ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getModelInfo",
              "description": "Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command.",
              "snippet": "getModelInfo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMousePosition",
              "description": "Returns mouse position in UI coordinates.",
              "text": "getMousePosition"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMusicPlayedTime",
              "description": "Returns elapsed time in seconds for currently playing music track.",
              "text": "getMusicPlayedTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getNumber",
              "description": "Extract number from config entry.",
              "snippet": "getNumber ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectArgument",
              "description": "Return name of object argument in mission editor.\n\u24d8Some Old Editor Command",
              "snippet": "getObjectArgument [${2:object}, ${3:argument}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectChildren",
              "description": "Return a list of all the children of the specified object.\n\u24d8Some Old Editor Command",
              "snippet": "getObjectChildren ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectDLC",
              "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.",
              "snippet": "getObjectDLC ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectFOV",
              "description": "Returns Field of View of the given object in radians. Static objects return default value, which is 1. FOV of objNull is 0. Object FOV is indirectly connected with optics magnification or player view zoom, the narrower the angle the greater the zoom.\n\u24d8The FOV returned by this command doesn't change if user has custom FOV set in profile. Use it in combination with getResolution to adjust for the difference if required.",
              "snippet": "getObjectFOV ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectMaterials",
              "description": "Gets all custom materials associated with the object.",
              "snippet": "getObjectMaterials ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectProxy",
              "description": "Return the proxy object associated with the given editor object.\n\u24d8Some Old Editor Command",
              "snippet": "getObjectProxy ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectTextures",
              "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.  Doesn't work on simple objects",
              "snippet": "getObjectTextures ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectType",
              "description": "Returns object type as a number:\n1 - Primary - Normal object placed in Visitor, part of landscape\n2 - Network - Road placed in Visitor, part of landscape\n4 - Temporary - Temporary object (like tracks)\n8 - TypeVehicle - Some entity added by game\n16 - TypeTempVehicle - Temporary entity\n32 - LandDecal - Land decal",
              "snippet": "getObjectType ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectViewDistance",
              "description": "Gets the values of rendering distances of objects and shadows.",
              "text": "getObjectViewDistance"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getOxygenRemaining",
              "description": "Returns amount of remaining oxygen.",
              "snippet": "getOxygenRemaining ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPersonUsedDLCs",
              "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.",
              "snippet": "getPersonUsedDLCs ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraDirection",
              "description": "Returns model space vector of the object airplane or helicopter pilotCamera .",
              "snippet": "getPilotCameraDirection ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraPosition",
              "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .",
              "snippet": "getPilotCameraPosition ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraRotation",
              "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
              "snippet": "getPilotCameraRotation ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position, Object, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraTarget",
              "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.",
              "snippet": "getPilotCameraTarget ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlateNumber",
              "description": "Get the license plates from any vehicle which has plates configured.",
              "snippet": "getPlateNumber ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerChannel",
              "description": "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:\nIt does not work on dedicated server, the return is always -1, only client can detect other client talking.\nIt does not detect when someone talks on direct chat at all anywhere.\nThe client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on.\nIn short, this command mimics the speaking icon from the UI. Correspondence between channel and number:\n0 = Global\n1 = Side\n2 = Command\n3 = Group\n4 = Vehicle\n5 = Direct (Is not detected by getPlayerChannel)\n6-15 = Custom Radio (see radioChannelCreate)",
              "snippet": "getPlayerChannel ${1:player}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerScores",
              "description": "In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). In SP: empty array []",
              "snippet": "getPlayerScores ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String, Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerUID",
              "description": "Return a UniqueID of the given unit (player).\n\n\u26a0Up until Arma 2: Operation Arrowhead v1.60, the result always consisted of a stringified number (see getPlayerUIDOld), but always had to be considered and processed as a String. Converting it to a Number could cause precision problems, as Number cannot accurately represent integers above 16777216 (224). Moreover, games since Arma 2: Operation Arrowhead v1.61 provide a value that is not all-numeric.\nThe returned string is the player's steamID64:\nprivate _steamProfileUrl = \"http://steamcommunity.com/profiles/\" + (getPlayerUID player);",
              "snippet": "getPlayerUID ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerUIDOld",
              "description": "Returns the old UniqueID of Arma 2 OA of the given unit as string if it is player and empty value if it is AI. The uniqueID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).\n\n\u26a0While for Arma 2 or Arma 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as it cannot accurately represent integers above 16777216 (2^24).Moreover, game versions since Arma 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.",
              "snippet": "getPlayerUIDOld ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerVoNVolume",
              "description": "Gets provided player's Voice over Network (VoN) volume.",
              "snippet": "getPlayerVoNVolume ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPos",
              "description": "Returns object or location position. If the argument is the object, the return value is in format PositionAGLS. Z value is height over the surface underneath.\nThe alternative syntax gets the position given distance and heading away from provided object or position - the equivalent of BIS_fnc_relPos.",
              "snippet": "getPos ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPos",
              "description": "Returns object or location position. If the argument is the object, the return value is in format PositionAGLS. Z value is height over the surface underneath.\nThe alternative syntax gets the position given distance and heading away from provided object or position - the equivalent of BIS_fnc_relPos.",
              "snippet": "getPos ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = origin ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPos",
              "description": "Returns object or location position. If the argument is the object, the return value is in format PositionAGLS. Z value is height over the surface underneath.\nThe alternative syntax gets the position given distance and heading away from provided object or position - the equivalent of BIS_fnc_relPos.",
              "snippet": "getPos [${2:distance}, ${3:heading}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASL",
              "description": "Returns the object position height above sea level.",
              "snippet": "getPosASL ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASLVisual",
              "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL.",
              "snippet": "getPosASLVisual ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASLW",
              "description": "Returns the object position height above sea surface (waves included).",
              "snippet": "getPosASLW ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosATL",
              "description": "Returns the position of an object relative to the terrain.",
              "snippet": "getPosATL ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosATLVisual",
              "description": "Returns an object's rendered 3D position ATL (z value above ground) in render time scope.",
              "snippet": "getPosATLVisual ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosVisual",
              "description": "Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope. Alias of visiblePosition.",
              "snippet": "getPosVisual ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosWorld",
              "description": "Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices.",
              "snippet": "getPosWorld ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosWorldVisual",
              "description": "Returns render version of PositionWorld, which is PositionASL of the model centre [0,0,0] of an object in render scope, rather than transformed boundingCenter or LandContact vertices.",
              "snippet": "getPosWorldVisual ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPylonMagazines",
              "description": "Return array of magazines on pylons",
              "snippet": "getPylonMagazines ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRelDir",
              "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo. Taking the current direction of the object into account.",
              "snippet": "getRelDir ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRelPos",
              "description": "Returns position, which is given distance and relative direction away from original object.",
              "snippet": "getRelPos ${2:[${3:distance}, ${4:direction}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRemoteSensorsDisabled",
              "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.",
              "text": "getRemoteSensorsDisabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRepairCargo",
              "description": "Returns the amount (1 is full) of repair resources in the cargo space of a repair vehicle. \n\u24d8Since Arma 3 v1.94.145939 the return value for vehicles that are not configured to have ability to repair other vehicles is -1. (Prior to that the value was negative infinity)",
              "snippet": "getRepairCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getResolution",
              "description": "Returns an array containing all information about current client screen resolution in format:\n[screenW, screenH, viewPortW, viewPortH, aspectRatio, uiScale, fovTop, fovLeft, tripleHead]\nWhere:\nscreenW: Number - width of the screen in pixels\nscreenH: Number - height of the screen in pixels\nviewPortW: Number - width of the 4:3 view port in pixels\nviewPortH: Number - height of the 4:3 view port in pixels\naspectRatio: Number - screen aspect ratio\nuiScale: Number - the scale of the UI, which affects view port size:\n\nArma 3\n\n\nVery Small\nSmall\nNormal\nLarge\nVery Large\n\n\n0.47\n0.55\n0.7\n0.85\n1",
              "text": "getResolution"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Object, Number, Boolean, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRoadInfo",
              "description": "Returns road info in format [mapType, width, isPedestrian, texture, textureEnd, material, begPos, endPos, isBridge]\n\n\u24d8The bridges are special case. Only large bridges are part of Road Net. Small pedestrian bridges are not recognized as roads. Bridge `mapType` is \"ROAD\" so the best way to detect bridges is to check `isBridge` boolean. Bridges are not part of new roads and don't have the same info as other new roads, so only `mapType`, `texture` (maybe `textureEnd`), `begPos`, `endPos` and `isBridge` are  updated.\n\u24d8Pedestrian roads `mapType` is usually \"TRAIL\". They are part of Road Net but excluded from path finding. Use roadsConnectedTo with alternative flag to find the connections between pedestrian roads.",
              "snippet": "getRoadInfo ${1:road}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRotorBrakeRTD",
              "description": "Returns if rotor break is on.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "getRotorBrakeRTD ${1:helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getShadowDistance",
              "description": "Gets the shadows rendering distance.",
              "text": "getShadowDistance"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getShotParents",
              "description": "Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.",
              "snippet": "getShotParents ${1:projectile}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSlingLoad",
              "description": "Return object which is sling loaded by vehicle",
              "snippet": "getSlingLoad ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSoundController",
              "description": "Returns value of the given sound controller.",
              "snippet": "getSoundController ${2:controller}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSoundControllerResult",
              "description": "Returns the calculated value of simple expression defined in config. Config could be any config entry, even  mission config entry. It is more important that the vehicle is a transport and not any object. If the expression contains sound controllers, the controller values will be taken from the given vehicle.",
              "snippet": "getSoundControllerResult ${2:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSpeed",
              "description": "Get the speed for the given speed mode.\n\nSpeedMode can be:\n\"AUTO\"\n\"SLOW\"\n\"NORMAL\"\n\"FAST\"",
              "snippet": "getSpeed ${2:speedMode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getStamina",
              "description": "Get current stamina (~ seconds until depletion)",
              "snippet": "getStamina ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getStatValue",
              "description": "Returns value of the given stat.\nA list of possible StatNames can be found here: Arma 3 Stat Names",
              "snippet": "getStatValue ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSteamFriendsServers",
              "description": "Returns servers information of Steam friends currently playing the game.",
              "text": "getSteamFriendsServers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSubtitleOptions",
              "description": "Returns subtitles settings in format [subtitles, radio subtitles].",
              "text": "getSubtitleOptions"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSuppression",
              "description": "Gets the suppression value for the given unit. Returns varying Number between 0 and 1, or -1 if suppression is disabled (disableAI \"SUPPRESSION\") or the suppression value is not available. Suppression is not calculated for player entities and is always 0, unless it is set with setSuppression. In this case the return value is the set value. Before Arma 3 v1.91.145360 this command could return nil.  \n\u26a0The unit must not be objNull, must be local and alive",
              "snippet": "getSuppression ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTerrainGrid",
              "description": "A getter for setTerrainGrid, returns the current terrain grid.",
              "text": "getTerrainGrid"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTerrainHeightASL",
              "description": "Returns the terrain height above the sea for the given position.",
              "snippet": "getTerrainHeightASL ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getText",
              "description": "Extracts localized text from config entry, if entry is subject to  localization, otherwise returns text value. To obtain the translation key itself, see getTextRaw.",
              "snippet": "getText ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTextRaw",
              "description": "Returns raw text from config entry. If entry is subject to  localization, the translation key is returned. To obtain the  localized text, see getText.",
              "snippet": "getTextRaw ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = text ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTextWidth",
              "description": "Returns estimated width of the text based on font type and size. Similar to ctrlTextWidth but doesn't require a control and can be used to estimate text width for any control including buttons. Result does not include left and right margins (hardcoded at 0.008 each).",
              "snippet": "getTextWidth ${2:[${3:font}, ${4:size}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTotalDLCUsageTime",
              "description": "Returns total DLC usage time in this game session",
              "text": "getTotalDLCUsageTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTrimOffsetRTD",
              "description": "Returns controls trim offset.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "getTrimOffsetRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = { \"V_PlateCarrier1_rgr\", \"H_HelmetB\", \"ItemCompass\", \"ItemWatch\", \"ItemRadio\", \"NVGoggles\" };\n\tweapons[] = { \"arifle_MX_ACO_pointer_F\", \"hgun_P07_F\" };\n\titems[] = { \"FirstAidKit\", \"FirstAidKit\", \"FirstAidKit\" };\n\tmagazines[] = {\n\t\t\"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\",\n\t\t\"SmokeShell\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\"\n\t};\n};\n\n\u24d8Since Arma 3 v1.92 an empty loadout could be obtained with getUnitLoadout (configFile >> \"EmptyLoadout\")",
              "snippet": "getUnitLoadout ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = { \"V_PlateCarrier1_rgr\", \"H_HelmetB\", \"ItemCompass\", \"ItemWatch\", \"ItemRadio\", \"NVGoggles\" };\n\tweapons[] = { \"arifle_MX_ACO_pointer_F\", \"hgun_P07_F\" };\n\titems[] = { \"FirstAidKit\", \"FirstAidKit\", \"FirstAidKit\" };\n\tmagazines[] = {\n\t\t\"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\",\n\t\t\"SmokeShell\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\"\n\t};\n};\n\n\u24d8Since Arma 3 v1.92 an empty loadout could be obtained with getUnitLoadout (configFile >> \"EmptyLoadout\")",
              "snippet": "getUnitLoadout ${1:[${2:unit}, ${3:fullMagazines}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = { \"V_PlateCarrier1_rgr\", \"H_HelmetB\", \"ItemCompass\", \"ItemWatch\", \"ItemRadio\", \"NVGoggles\" };\n\tweapons[] = { \"arifle_MX_ACO_pointer_F\", \"hgun_P07_F\" };\n\titems[] = { \"FirstAidKit\", \"FirstAidKit\", \"FirstAidKit\" };\n\tmagazines[] = {\n\t\t\"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\",\n\t\t\"SmokeShell\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\"\n\t};\n};\n\n\u24d8Since Arma 3 v1.92 an empty loadout could be obtained with getUnitLoadout (configFile >> \"EmptyLoadout\")",
              "snippet": "getUnitLoadout ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = { \"V_PlateCarrier1_rgr\", \"H_HelmetB\", \"ItemCompass\", \"ItemWatch\", \"ItemRadio\", \"NVGoggles\" };\n\tweapons[] = { \"arifle_MX_ACO_pointer_F\", \"hgun_P07_F\" };\n\titems[] = { \"FirstAidKit\", \"FirstAidKit\", \"FirstAidKit\" };\n\tmagazines[] = {\n\t\t\"30Rnd_65x39_caseless_mag\", \"16Rnd_9x21_Mag\",\n\t\t\"SmokeShell\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\",\n\t\t\"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\", \"HandGrenade\"\n\t};\n};\n\n\u24d8Since Arma 3 v1.92 an empty loadout could be obtained with getUnitLoadout (configFile >> \"EmptyLoadout\")",
              "snippet": "getUnitLoadout ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean, Number, Nothing) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitTrait",
              "description": "Gets the current value of a trait of the given unit.\n\u24d8For the default values please visit setUnitTrait.",
              "snippet": "getUnitTrait ${2:skillName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUserMFDText",
              "description": "Returns array of user text variables used in MFD.",
              "snippet": "getUserMFDText ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUserMFDValue",
              "description": "Returns array of user text variables used in MFD.",
              "snippet": "getUserMFDValue ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = varspace ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVariable",
              "description": "Returns the value of variable in the variable space assigned to various data types.\nAll available data types combinations:\n\n\nPrimary syntax (String)\n\nAlternative syntax (Array)\n\n\n\nNamespace getVariable String\nObject getVariable String\nGroup getVariable String\nTeam_Member getVariable String\nTask getVariable String\nLocation getVariable String\nControl getVariable String (since Arma 3 v1.55.133553)\nDisplay getVariable String (since Arma 3 v1.55.133553)\n\n\nNamespace getVariable Array (since Arma 2 OA v1.60)\nObject getVariable Array\nGroup getVariable Array\nTeam_Member getVariable Array\nTask getVariable Array (since Arma 3 v1.67)\nLocation getVariable Array (since Arma 3 v1.67)\nControl getVariable Array (since Arma 3 v1.55.133553))\nDisplay getVariable Array (since Arma 3 v1.55.133553)\n\n\u26a0When variable is set on a Task, it is not actually set on the task itself, but on the FSM attached to the task.\nIf there is no FSM, getVariable will not work.\nIn the case of Alt Syntax usage in Arma 3, defaultValue will be returned if:\nRequested variable is either undefined or nil\nVariable namespace is null (objNull, grpNull, etc.)",
              "snippet": "getVariable ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = varspace ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVariable",
              "description": "Returns the value of variable in the variable space assigned to various data types.\nAll available data types combinations:\n\n\nPrimary syntax (String)\n\nAlternative syntax (Array)\n\n\n\nNamespace getVariable String\nObject getVariable String\nGroup getVariable String\nTeam_Member getVariable String\nTask getVariable String\nLocation getVariable String\nControl getVariable String (since Arma 3 v1.55.133553)\nDisplay getVariable String (since Arma 3 v1.55.133553)\n\n\nNamespace getVariable Array (since Arma 2 OA v1.60)\nObject getVariable Array\nGroup getVariable Array\nTeam_Member getVariable Array\nTask getVariable Array (since Arma 3 v1.67)\nLocation getVariable Array (since Arma 3 v1.67)\nControl getVariable Array (since Arma 3 v1.55.133553))\nDisplay getVariable Array (since Arma 3 v1.55.133553)\n\n\u26a0When variable is set on a Task, it is not actually set on the task itself, but on the FSM attached to the task.\nIf there is no FSM, getVariable will not work.\nIn the case of Alt Syntax usage in Arma 3, defaultValue will be returned if:\nRequested variable is either undefined or nil\nVariable namespace is null (objNull, grpNull, etc.)",
              "snippet": "getVariable [${2:name}, ${3:defaultValue}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVehicleCargo",
              "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.",
              "snippet": "getVehicleCargo ${1:storingVehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVehicleTIPars",
              "description": "returns array [alive factor, movementfactor, metabolism factor] see setVehicleTIPars",
              "snippet": "getVehicleTIPars ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWeaponCargo",
              "description": "Returns all weapons types and count from the cargo space",
              "snippet": "getWeaponCargo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWeaponSway",
              "description": "Returns current size of weapon sway of a given unit, in radians",
              "snippet": "getWeaponSway ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWingsOrientationRTD",
              "description": "Returns orientation of horizontal stabilizers.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "getWingsOrientationRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWingsPositionRTD",
              "description": "Returns position of stabilizers.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "getWingsPositionRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWorld",
              "description": "Returns the name of the current map. Name is actually class as defined in config (eg Intro). \n\u26a0This command doesn't exist outside of Operation Flashpoint. Use worldName instead",
              "text": "getWorld"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWPPos",
              "description": "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.",
              "snippet": "getWPPos ${1:[${2:group}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit(s) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/glanceAt",
              "description": "Control what the unit(s) is/are glancing at (target or Position). If target is used, it will get revealed fully.\n\nHow frequently the unit(s) is/are glancing there depends on behaviour.",
              "snippet": "glanceAt ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/globalChat",
              "description": "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "globalChat ${2:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/globalRadio",
              "description": "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "globalRadio ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/goggles",
              "description": "Returns name of currently used goggles (for NVGoggles use hmd).",
              "snippet": "goggles ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/goto",
              "description": "Break script flow and go to given label (defined by # - NOT to be confused with SQF's hash sign!)\n\u26a0This command only works in SQS syntax.\n\u24d8Note that labels are not case sensitive and are searched for from the top of the script, so multiple occurrences of a label will only result in the topmost one ever being found.",
              "snippet": "goto ${1:label}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/group",
              "description": "Returns the group a unit is assigned to.",
              "snippet": "group ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupChat",
              "description": "Types text to the group radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "groupChat ${2:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupFromNetId",
              "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.",
              "snippet": "groupFromNetId ${1:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupIconSelectable",
              "description": "Returns whether or not group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.",
              "text": "groupIconSelectable"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupIconsVisible",
              "description": "Returns array with group icons visibility. A getter for setGroupIconsVisible",
              "text": "groupIconsVisible"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupId",
              "description": "Returns group name.",
              "snippet": "groupId ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupOwner",
              "description": "Returns the  machine network ID of the client to which the group is local. This command only works when called from the server. When called from a client, it always returns 0.",
              "snippet": "groupOwner ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupRadio",
              "description": "Sends the audio message to the group radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "groupRadio ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupSelectedUnits",
              "description": "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected.",
              "snippet": "groupSelectedUnits ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "player ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupSelectUnit",
              "description": "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.",
              "snippet": "groupSelectUnit ${2:[${3:unit}, ${4:select}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Group) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/grpNull",
              "description": "A non-existing Group. To compare non-existent groups use isNull or isEqualTo:\ngrpNull == grpNull; // false\nisNull grpNull; // true\ngrpNull isEqualTo grpNull; // true",
              "text": "grpNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gunner",
              "description": "Returns the gunner of a vehicle.",
              "snippet": "gunner ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gusts",
              "description": "Return the current gusts value. Scale is 0 to 1.",
              "text": "gusts"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/halt",
              "description": "This command was meant to break the script into debugger, however currently it doesn't do anything except displaying and logging the following error: Error Debugger breakpoint hit.",
              "text": "halt"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunItems",
              "description": "Returns array with all items assigned to the handgunWeapon except magazines. Use handgunMagazine command for the latter. This command is used for infantry weapons only.",
              "snippet": "handgunItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunMagazine",
              "description": "Collects all loaded magazines from all handgunWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
              "snippet": "handgunMagazine ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunWeapon",
              "description": "Returns the name of a unit's handgun (an empty string if there is none).",
              "snippet": "handgunWeapon ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handsHit",
              "description": "Checks if a soldier's hands are hit, which results in inaccurate aiming.",
              "snippet": "handsHit ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasInterface",
              "description": "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.",
              "text": "hasInterface"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasPilotCamera",
              "description": "Returns true if the object airplane or helicopter has a pilotCamera.",
              "snippet": "hasPilotCamera ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasWeapon",
              "description": "Checks if a unit has the given weapon in hands or on back/in holster. Weapons inside unit containers such as vest and backpack are not counted.",
              "snippet": "hasWeapon ${2:weaponName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcAllGroups",
              "description": "Returns selected groups in high command.",
              "snippet": "hcAllGroups ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcGroupParams",
              "description": "Returns parameters describing group in high command bar. Return value is array in format [groupName, teamName] or [] if error. Possible values for team name:\n\"teammain\" (default)\n\"teamred\"\n\"teamgreen\"\n\"teamblue\"\n\"teamyellow\"",
              "snippet": "hcGroupParams ${2:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcLeader",
              "description": "Returns group's high command commander.",
              "snippet": "hcLeader ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcRemoveAllGroups",
              "description": "Remove all groups from unit's high command bar.",
              "snippet": "hcRemoveAllGroups ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcRemoveGroup",
              "description": "Removes group from unit's high command bar.",
              "snippet": "hcRemoveGroup ${2:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSelected",
              "description": "Returns selected groups in high command.",
              "snippet": "hcSelected ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSelectGroup",
              "description": "Select given group in high command bar.",
              "snippet": "hcSelectGroup ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSetGroup",
              "description": "Add group to unit's high command bar.\n\nArray parameters are group, group-name and team (teammain, teamred, teamgreen, teamblue, teamyellow).\n\nGroup is the only necessary parameter.",
              "snippet": "hcSetGroup ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcShowBar",
              "description": "Shows or hides high command bar. There must be some groups under HC command to show HC bar.\nSince Arma 3 v1.93.145657 this command returns Nothing as it should",
              "snippet": "hcShowBar ${1:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcShownBar",
              "description": "Return true if the high command bar is shown/active.",
              "text": "hcShownBar"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/headgear",
              "description": "Returns headgear of unit.",
              "snippet": "headgear ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideBehindScripted",
              "description": "When set to true it disables the default engine hiding behavior.",
              "snippet": "hideBehindScripted ${2:scriptedHideBehind}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideBody",
              "description": "Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes grpNull, the body gets deleted and becomes objNull. If applied to alive unit, nothing happens until unit dies, then the unit's body gets hidden. If a dead unit is human player, the body is hidden but not deleted until player respawns.",
              "snippet": "hideBody ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObject",
              "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.",
              "snippet": "hideObject ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObject",
              "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.",
              "snippet": "hideObject ${2:hidden}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObjectGlobal",
              "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on static objects. In SP this command behaves just like hideObject.",
              "snippet": "hideObjectGlobal ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObjectGlobal",
              "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on static objects. In SP this command behaves just like hideObject.",
              "snippet": "hideObjectGlobal ${2:hidden}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideSelection",
              "description": "Hides or enables the given selection for the  simple object",
              "snippet": "hideSelection [${1:${3:selection}}, ${4:hidden}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hierarchyObjectsCount",
              "description": "The number of objects in hierarchy. This command is not present in Arma 3",
              "text": "hierarchyObjectsCount"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hint",
              "description": "Outputs a hint message to the right of the screen (left of the screen in Operation Flashpoint) with a sound (except in Armed Assault). Use hintSilent for soundless hint. To split message in multiple lines either use Structured Text or \\n (in lower case).",
              "snippet": "hint ${1:message}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until \"Continue\" is pressed.\n\n\u24d8In Singleplayer, the game is paused as well.\nAfter user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "snippet": "hintC ${1:content}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "title ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until \"Continue\" is pressed.\n\n\u24d8In Singleplayer, the game is paused as well.\nAfter user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "snippet": "hintC ${2:content}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintCadet",
              "description": "Shows a text hint only when in cadetMode.\n\nThe text can contain several lines. \\n is used to indicate the end of a line.",
              "snippet": "hintCadet ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintSilent",
              "description": "Same as hint, but without a sound.",
              "snippet": "hintSilent ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hmd",
              "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.",
              "snippet": "hmd ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hostMission",
              "description": "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog.\nFor example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded.\nYou need to provide the display which is active when the hostMission command is called.",
              "snippet": "hostMission ${1:[${2:pConfig}, ${3:pDisplay}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/htmlLoad",
              "description": "Load HTML from file or Uri using given control. File path is relative to current mission dir or an absolute path (with drive letter etc.). The command is subject to restrictions, imposed by CfgCommands class.\n\u26a0For unknown reasons, URL's length is limited to 255 characters.",
              "snippet": "htmlLoad ${2:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/HUDMovementLevels",
              "description": "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]",
              "text": "HUDMovementLevels"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/humidity",
              "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.",
              "text": "humidity"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(If Type) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/if",
              "description": "This operator creates a If Type which is used in the if-construct as described here.",
              "snippet": "if ${1:condition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/image",
              "description": "Creates a structured text containing the given image. Use setAttributes to set additional  attributes on the image.",
              "snippet": "image ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/importAllGroups",
              "description": "Imports all groups into the RTE. \n\u24d8Some Old Editor Command",
              "snippet": "importAllGroups ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/importance",
              "description": "Returns a location's importance value.",
              "snippet": "importance ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = value ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "description": "Checks whether value is in array, unit is in vehicle, position is inside location or string is part of other string.\n\u24d8String comparison is case-sensitive (see Examples 2 and 6).\nSince Arma 3 you can test for arrays within arrays.",
              "snippet": "in ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "description": "Checks whether value is in array, unit is in vehicle, position is inside location or string is part of other string.\n\u24d8String comparison is case-sensitive (see Examples 2 and 6).\nSince Arma 3 you can test for arrays within arrays.",
              "snippet": "in ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "description": "Checks whether value is in array, unit is in vehicle, position is inside location or string is part of other string.\n\u24d8String comparison is case-sensitive (see Examples 2 and 6).\nSince Arma 3 you can test for arrays within arrays.",
              "snippet": "in ${2:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = needle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "description": "Checks whether value is in array, unit is in vehicle, position is inside location or string is part of other string.\n\u24d8String comparison is case-sensitive (see Examples 2 and 6).\nSince Arma 3 you can test for arrays within arrays.",
              "snippet": "in ${2:haystack}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "snippet": "inArea ${2:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "snippet": "inArea ${2:marker}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "snippet": "inArea ${2:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "snippet": "inArea [${2:center}, ${3:a}, ${4:b}, ${5:angle}, ${6:isRectangle}, ${7:c}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Position) = positions ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "snippet": "inAreaArray ${2:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Position) = positions ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "snippet": "inAreaArray ${2:marker}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "text": "positions"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "text": "positions"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/incapacitatedState",
              "description": "Returns the incapacitated state of the given unit.",
              "snippet": "incapacitatedState ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/independent",
              "description": "Pre-defined variable for the independent side.\n Alias for resistance.",
              "text": "independent"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "fireplace ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inflame",
              "description": "Control fireplace burning. Set inflame to true (on) or false (off).",
              "snippet": "inflame ${2:burn}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inflamed",
              "description": "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command.",
              "snippet": "inflamed ${1:fireplace}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanel",
              "description": "Returns information about what is currently displayed on given player's info panel.\nReturns [\"EmptyDisplay\",\"EmptyDisplayComponent\"] when no panel is open.",
              "snippet": "infoPanel ${1:infoPanelId}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanelComponentEnabled",
              "description": "Controls availability of component to given object info panel.",
              "snippet": "infoPanelComponentEnabled [${2:panelID}, ${3:componentClassOrType}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = [unit, turretPath] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanelComponentEnabled",
              "description": "Controls availability of component to given object info panel.",
              "snippet": "infoPanelComponentEnabled [${3:panelID}, ${4:componentClassOrType}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanelComponents",
              "description": "Returns array of all components available to given object info panel.",
              "snippet": "infoPanelComponents ${2:panelID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Boolean) = [unit, turretPath] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanelComponents",
              "description": "Returns array of all components available to given object info panel.",
              "snippet": "infoPanelComponents ${3:panelID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanels",
              "description": "Returns array all info panels configured for given object or object and turret path.",
              "snippet": "infoPanels ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/infoPanels",
              "description": "Returns array all info panels configured for given object or object and turret path.",
              "snippet": "infoPanels [${1:unit}, ${2:turretPath}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inGameUISetEventHandler",
              "description": "Sets given event handler of in-game UI. If EH function returns true, performed action is overridden. Event handlers available are:\n\"PrevAction\" - mouse scroll up\n\"Action\" - action key press\n\"NextAction\" - mouse scroll down\nThis is \"set\" type EH, which means it will replace previously set EH of the same type. So to remove EH, set another one with empty string \"\" for the function.\n\nSince Arma 3 v1.49.131743 this EH returns array of params for selected/activated action in _this variable:\n0: Object - target object to which action is attached\n1: Object - caller object, basically player\n2: Number - index of the action in action menu (0 - top most)\n3: String - engine based action name (\"User\" for user added actions)\n4: String - localized action plain text as seen by the caller\n5: Number - action priority value\n6: Boolean - action showWindow value\n7: Boolean - action hideOnUse value\n8: String - action shortcut name or \"\"\n9: Boolean - action menu visibility (on first scroll or action press the menu is still invisible, so no action is performed, only menu is shown). See also: isActionMenuVisible\n10: String - EH event name",
              "snippet": "inGameUISetEventHandler ${1:[${2:handlerName}, ${3:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inheritsFrom",
              "description": "Returns base entry of config entry.",
              "snippet": "inheritsFrom ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/initAmbientLife",
              "description": "Initialises the ambient life on local client from CfgWorlds >> worldName >> AmbientA3. Has no effect on dedicated server or headless client.",
              "text": "initAmbientLife"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inPolygon",
              "description": "Checks whether position is inside given polygon",
              "snippet": "inPolygon ${2:polygon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inputAction",
              "description": "Return the state of input devices mapped to given input action.\n\nFor Arma 3 inputActions and its bindings see: inputAction/actions.\n\nFor earlier Arma editions  see Category:Key Actions.",
              "snippet": "inputAction ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = pos ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inRangeOfArtillery",
              "description": "Returns true if all given units are able to fire at given position with given magazineType.",
              "snippet": "inRangeOfArtillery ${2:[${3:[${4:unit}]}, magazineType]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/insertEditorObject",
              "description": "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.\n\u24d8Some Old Editor Command",
              "snippet": "insertEditorObject ${2:[type,value,[name1,value1,...],subtype class]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = [object, lodName] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/intersect",
              "description": "Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. lodName could be one of the following: \n\"FIRE\"\n\"VIEW\"\n\"GEOM\"\n\"IFIRE\" - (\"I\" stands for Indirect, almost the same as FIRE)\n\"PHYSX\" - PhysX geometry LOD (since Arma 3 v2.01.146666)",
              "snippet": "intersect ${4:[${5:begPos}, ${6:endPos}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/is3DEN",
              "description": "Returns true if the Eden Editor is currently being used. true when inside editor environment, false when outside of editor environment. (see also is3DENMultiplayer, is3DENPreview)",
              "text": "is3DEN"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/is3DENMultiplayer",
              "description": "Returns true if the Eden Editor is in multiplayer mode. Returns true in the following cases:\nMultiplayer Preview launched directly from 3DEN - true in preview and only for the creator\nMP mission is chosen for editing when creating a server: Multiplayer - Server Browser - Host Server. When 3D EDITOR button is clicked for selected mission and 3DEN is launched, command returns true within the editor environment. (see also is3DEN, is3DENPreview)",
              "text": "is3DENMultiplayer"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/is3DENPreview",
              "description": "Returns true if the Eden Editor is currently in mission preview mode, single player or multiplayer. (see also is3DEN, is3DENMultiplayer)",
              "text": "is3DENPreview"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAbleToBreathe",
              "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.",
              "snippet": "isAbleToBreathe ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isActionMenuVisible",
              "description": "Returns true if scroll menu is visible.",
              "text": "isActionMenuVisible"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAgent",
              "description": "Check if team member is an agent.",
              "snippet": "isAgent ${1:teamMember}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAimPrecisionEnabled",
              "description": "Returns true if procedural aiming precision affects weapon sway.",
              "snippet": "isAimPrecisionEnabled ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isArray",
              "description": "Check if config entry represents array.",
              "snippet": "isArray ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutoHoverOn",
              "description": "Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)",
              "snippet": "isAutoHoverOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutonomous",
              "description": "Returns whether the UAV is in autonomous mode or not.",
              "snippet": "isAutonomous ${1:uav}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutotest",
              "description": "Returns true if game was started with autotest parameter",
              "text": "isAutotest"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isBleeding",
              "description": "Returns whether the unit is bleeding.",
              "snippet": "isBleeding ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isBurning",
              "description": "Returns whether the unit is burning.\nThis returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.",
              "snippet": "isBurning ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isClass",
              "description": "Check if config entry represents config class.",
              "snippet": "isClass ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isCollisionLightOn",
              "description": "Returns true if vehicle collision lights are on otherwise false.",
              "snippet": "isCollisionLightOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isCopilotEnabled",
              "description": "Returns true if copilots actions are enabled.",
              "snippet": "isCopilotEnabled ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDamageAllowed",
              "description": "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. A complete solution for being able to tell whether or not an object can be damaged at current locality looks like this:\n_canBeDamaged = local _obj && isDamageAllowed _obj;",
              "snippet": "isDamageAllowed ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDedicated",
              "description": "Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false.",
              "text": "isDedicated"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDLCAvailable",
              "description": "Returns true if the DLC is marked as available. (Steam)",
              "snippet": "isDLCAvailable ${1:appid}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEngineOn",
              "description": "Returns true if engine is on, false if it is off.",
              "snippet": "isEngineOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = val1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTo",
              "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.\nSome differences between isEqualTo and ==:\nIt performs case sensitive comparison on Strings\nIt doesn't throw error when comparing different types, i.e. (\"eleven\" isEqualTo 11)\nIt can compare Arrays, Scripts and Booleans (alive player isEqualTo true)\nIt can compare non-existent game objects (grpNull isEqualTo grpNull)\nIt can compare Namespaces (As of Arma 3 v1.47)\nIt is slightly faster than ==, especially when comparing Strings \n\u24d8A compiled code is not equal to the same compiled code made final: _a = compile \"123\"; _b = compileFinal \"123\"; _a isEqualTo _b; // false\n\u26a0When comparing Arrays, if an array contains nil element, the comparison will return false. For example:\nprivate _array1 = [1,nil,2];\nprivate _array2 = [1,nil,2];\n_array1 isEqualTo _array2 // false\nUNLESS the compared arrays are the same array:\nprivate _array1 = [1,nil,2];\nprivate _array2 = _array1;\n_array1 isEqualTo _array2 // true\n\nSee: BIS_fnc_areEqual vs. BIS_fnc_areEqualNotNil",
              "snippet": "isEqualTo ${2:val2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = val1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualType",
              "description": "Compares 2 values by their type. A much faster alternative to typeName a == typeName b.",
              "snippet": "isEqualType ${2:val2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = arr ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeAll",
              "description": "Compares types of all elements of an array to the type of a single value.",
              "snippet": "isEqualTypeAll ${2:val}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = val ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeAny",
              "description": "Compares type of given value to every type in the given array and if match is found, true is returned.",
              "snippet": "isEqualTypeAny ${2:types}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = arr1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeArray",
              "description": "Compares types of all elements of one array to types of all elements of another array.",
              "snippet": "isEqualTypeArray ${2:arr2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = input ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeParams",
              "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:\nInput can be anything but will be expected to be an Array, otherwise false is returned\nInput array can be longer but not shorter than template array, will return false if shorter\nnil could be used in template type array as a wild card to allow any type match",
              "snippet": "isEqualTypeParams ${2:template}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFilePatchingEnabled",
              "description": "Returns true if file patching is enabled otherwise false",
              "text": "isFilePatchingEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFinal",
              "description": "Checks if code or a variable was compiled final with compileFinal.",
              "text": "isFinal"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFinal",
              "description": "Checks if code or a variable was compiled final with compileFinal.",
              "snippet": "isFinal ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFlashlightOn",
              "description": "Returns true if there is a linked and enabled flashlight on a given weapon.",
              "snippet": "isFlashlightOn ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFlatEmpty",
              "description": "Checks given position against given filter params. Filter includes checks for:\nIf there are any objects closer than given distance from given position (in 2D)\nIf the area around position is flat enough to match given gradient\nIf the given position is over water or land\nIf the given position is over shore line\nThe gradient seems to correlate with general hill steepness: 0.1 (10%) ~6\u00b0, 0.5 (50%) ~27\u00b0, 1.0 (100%) ~45\u00b0, etc.\n\u24d8See also BIS_fnc_findSafePos.",
              "snippet": "isFlatEmpty ${2:[${3:minDistance}, ${4:mode}, ${5:maxGradient}, ${6:maxGradientRadius}, ${7:overLandOrWater}, ${8:shoreLine}, ${9:ignoreObject}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isForcedWalk",
              "description": "Returns true if player is forced to walk with forceWalk.",
              "snippet": "isForcedWalk ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFormationLeader",
              "description": "Returns true if the specified unit is subgroup leader.",
              "snippet": "isFormationLeader ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isGameFocused",
              "description": "Returns false if the game window lost focus, due to user Alt+Tab-ing for example.",
              "text": "isGameFocused"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isGamePaused",
              "description": "Returns true if the game simulation is paused due to some system event like a dialog or pause menu or when user has Alt+Tab-ed (except when -nopause start up param is used). Relevant to SP, in MP simulation does not get paused. \n\u24d8onEachFrame event and \"EachFrame\" event handler continue to execute when the simulation is paused, which could result in undesired backlog. Use isGamePaused to skip loop if needed.",
              "text": "isGamePaused"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isGroupDeletedWhenEmpty",
              "description": "Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty.",
              "snippet": "isGroupDeletedWhenEmpty ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isHidden",
              "description": "Return whether the person is hidden (reached the hiding position). For command that tests general visibility of an object use isObjectHidden",
              "snippet": "isHidden ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isHideBehindScripted",
              "description": "Return whether the vehicle has set the hideBehindScripted to true or not. \n\u26a0This command is neither in Arma 3 nor in Arma 2",
              "snippet": "isHideBehindScripted ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isInRemainsCollector",
              "description": "Checks if unit or vehicle is queued for disposal after death.",
              "snippet": "isInRemainsCollector ${1:remain}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isInstructorFigureEnabled",
              "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).",
              "text": "isInstructorFigureEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isIRLaserOn",
              "description": "Returns true if there is a linked and enabled IR on the given weapon.",
              "snippet": "isIRLaserOn ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKeyActive",
              "description": "Checks whether the given key is active in the current user profile.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "snippet": "isKeyActive ${1:keyName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "description": "Checks whether the object is (a subtype) of the given type. While main and alternative syntaxes support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alternative syntax 2 allows to specify any config, including mission config.",
              "snippet": "isKindOf ${2:typeName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = typeName1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "description": "Checks whether the object is (a subtype) of the given type. While main and alternative syntaxes support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alternative syntax 2 allows to specify any config, including mission config.",
              "snippet": "isKindOf ${2:typeName2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = typeName1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "description": "Checks whether the object is (a subtype) of the given type. While main and alternative syntaxes support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alternative syntax 2 allows to specify any config, including mission config.",
              "snippet": "isKindOf [${2:typeName2}, ${3:targetConfig}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLaserOn",
              "description": "Returns true if the vehicle has its laser turned on. Not to be confused with isIRLaserOn which is for units",
              "snippet": "isLaserOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLightOn",
              "description": "Returns true if vehicle headlights are on otherwise false.  \n\u24d8Since Arma 3 v1.94 it is possible to get the status of a search light on a turret (see alt syntax).",
              "snippet": "isLightOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLightOn",
              "description": "Returns true if vehicle headlights are on otherwise false.  \n\u24d8Since Arma 3 v1.94 it is possible to get the status of a search light on a turret (see alt syntax).",
              "snippet": "isLightOn [${1:vehicle}, ${2:turret}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLocalized",
              "description": "Checks whether given string name is localized.",
              "snippet": "isLocalized ${1:stringName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isManualFire",
              "description": "Returns true if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with action \"ManualFire\" and \"ManualFireCancel\". Always returns false for a soldier.",
              "snippet": "isManualFire ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMarkedForCollection",
              "description": "Checks whether the object is marked for weapons collection.",
              "snippet": "isMarkedForCollection ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMultiplayer",
              "description": "Return true if multiPlayer.",
              "text": "isMultiplayer"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNil",
              "description": "Tests whether the variable given by its name is nil or undefined, or whether the given expression evaluates to nil or Nothing.\n\u24d81.00 This command doesn't exist in Operation Flashpoint but can be emulated (see Example 5).",
              "snippet": "isNil ${1:variableName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNil",
              "description": "Tests whether the variable given by its name is nil or undefined, or whether the given expression evaluates to nil or Nothing.\n\u24d81.00 This command doesn't exist in Operation Flashpoint but can be emulated (see Example 5).",
              "snippet": "isNil ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = val1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNotEqualTo",
              "description": "Performs strict comparison between var1 and var2 and returns false if equal, otherwise true.",
              "snippet": "isNotEqualTo ${2:val2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNull",
              "description": "Checks whether the tested item is null.\nWhich null type the item has to be equal to depends on the type of game entity tested:\n\n\n\nType\n\nObject\n\nGroup\n\nControl\n\nDisplay\n\nLocation\n\nTask\n\nScript\n\nConfig\n\nDiary Record\n\n\nNull value\n\nobjNull\n\ngrpNull\n\ncontrolNull\n\ndisplayNull\n\nlocationNull\n\ntaskNull\n\nscriptNull\n\nconfigNull\n\ndiaryRecordNull\n\n\nSince\n\nOFP v1.00\n\nOFP v1.00\n\nArmA v1.00\n\nArmA v1.00\n\nArma 2 v1.00\n\nArma 2 v1.00\n\nArma 3 v1.29.127075\n\nArma 3 v1.53.133130\n\nArma 3 v1.99.146508\n\n\u26a0A test via == does not work, because a null value is not equal to anything, not even itself (configNull being the exception).\nSee also isEqualTo.",
              "snippet": "isNull ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNumber",
              "description": "Check if config entry represents number.",
              "snippet": "isNumber ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isObjectHidden",
              "description": "Checks visibility of a given object on the local machine.",
              "snippet": "isObjectHidden ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isObjectRTD",
              "description": "Returns true if RTD model is loaded.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "isObjectRTD ${1:helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isOnRoad",
              "description": "Checks if given position is inside road segment. Same as roadAt, only return is boolean instead of road object.",
              "snippet": "isOnRoad ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPiPEnabled",
              "description": "Returns whether Picture-In-Picture video option is enabled or not.",
              "text": "isPiPEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPipEnabled",
              "description": "Returns true if Picture in Picture (Render to Texture) is enabled.",
              "text": "isPipEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPlayer",
              "description": "Checks if given person is player. Returns true for headless clients as well.\n\u26a0In some cases, the identity of certain player units might fail to propagate to other clients and the server, which causes isPlayer and getPlayerUID to incorrectly return false and \"\", respectively, where the affected units are not local.[1] Therefore, beware of false negatives.",
              "snippet": "isPlayer ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRealTime",
              "description": "Returns true if the mission editor is operating in real time mode. \n\u24d8Some Old Editor Command",
              "snippet": "isRealTime ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRemoteExecuted",
              "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP",
              "text": "isRemoteExecuted"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRemoteExecutedJIP",
              "description": "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of isRemoteExecuted:\nNormal remote execution:\nisRemoteExecuted - true\nisRemoteExecutedJIP - false\nRemote execution from JIP queue:\nisRemoteExecuted - true\nisRemoteExecutedJIP - true\nIn SP always returns false.",
              "text": "isRemoteExecutedJIP"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSensorTargetConfirmed",
              "description": "Returns if given unit is confirmed target for given side.",
              "snippet": "isSensorTargetConfirmed ${2:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isServer",
              "description": "Returns true if the machine (executing the command) is the server in a multiplayer game or is running single player. It will return true for both dedicated and player-hosted server.\n\u24d8See also Multiplayer Scripting/machines.",
              "text": "isServer"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isShowing3DIcons",
              "description": "Returns true if the editor is set to draw 3D icons.\n\u24d8Some Old Editor Command",
              "snippet": "isShowing3DIcons ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSimpleObject",
              "description": "Returns true if given object is simple object",
              "snippet": "isSimpleObject ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSprintAllowed",
              "description": "Returns true if player is allowed to sprint",
              "snippet": "isSprintAllowed ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isStaminaEnabled",
              "description": "Check if stamina depletion is enabled",
              "snippet": "isStaminaEnabled ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSteamMission",
              "description": "Returns true if the current mission is a Steam Workshop mission.",
              "text": "isSteamMission"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isStreamFriendlyUIEnabled",
              "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).",
              "text": "isStreamFriendlyUIEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isStressDamageEnabled",
              "description": "Returns true if stress damage is enabled in the game settings. A getter for enableStressDamage.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "text": "isStressDamageEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isText",
              "description": "Check if config entry represents text.",
              "snippet": "isText ${1:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTouchingGround",
              "description": "Returns true if object is touching the ground.",
              "snippet": "isTouchingGround ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTurnedOut",
              "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.",
              "snippet": "isTurnedOut ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTutHintsEnabled",
              "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).",
              "text": "isTutHintsEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUAVConnectable",
              "description": "Returns true if UAV is connectable by AV terminal(s).",
              "snippet": "isUAVConnectable [${2:uav}, ${3:checkAllItems}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUAVConnected",
              "description": "Returns true if UAV is connected to some terminal.",
              "snippet": "isUAVConnected ${1:uav}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUIContext",
              "description": "Returns true if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.",
              "text": "isUIContext"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUniformAllowed",
              "description": "Check whether given uniform can be dressed by target soldier.",
              "snippet": "isUniformAllowed ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleCargo",
              "description": "Despite a misleading name, returns the vehicle that is transporting given vehicle in cargo. If the given vehicle is not in vehicle cargo, objNull is returned.",
              "snippet": "isVehicleCargo ${1:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleRadarOn",
              "description": "Returns true if vehicle has active sensors on.",
              "snippet": "isVehicleRadarOn ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleSensorEnabled",
              "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled",
              "snippet": "isVehicleSensorEnabled ${2:componentName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWalking",
              "description": "Returns true if walk is toggled (default W+S in Arma 3).\n\u24d8This command can still return true when the unit is sprinting or stopped; it only returns the toggle value of walking, not if the unit is walking right now.",
              "snippet": "isWalking ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWeaponDeployed",
              "description": "Returns true if weapon is currently deployed.",
              "snippet": "isWeaponDeployed ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWeaponRested",
              "description": "Returns true if weapon is currently rested.",
              "snippet": "isWeaponRested ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/itemCargo",
              "description": "Get array with items from ammo box (or any general weapon holder container).",
              "snippet": "itemCargo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/items",
              "description": "Returns an array of names of all unit's stored items, including weapons but excluding magazines (see itemsWithMagazines) and assignedItems.",
              "snippet": "items ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/itemsWithMagazines",
              "description": "Returns combined array including all unit's stored items and all unit's stored magazines and all unit's stored weapons. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine, binocularMagazine as well as assignedItems are excluded.",
              "snippet": "itemsWithMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitArray ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/join",
              "description": "Join all units in the array to given group. \n\nMaximum number of group members is:\nOFP: 12\nArma: 144\nArma 2:\u00a0?\nArma 3: \"unlimited\" (3000+)\nVBS 2: \"unlimited\" (260+)\n\nTo have a group member leave a group, join him with the grpNull group (e.g. [guy1] join grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
              "snippet": "join ${2:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinAs",
              "description": "Joins the unit to the given group, if position id is available, this one is used.",
              "snippet": "joinAs ${2:[${3:group}, ${4:id}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinAsSilent",
              "description": "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.",
              "snippet": "joinAsSilent ${2:[${3:group}, ${4:id}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitArray ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinSilent",
              "description": "Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e.g. [guy1] joinSilent grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
              "snippet": "joinSilent ${2:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinString",
              "description": "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.",
              "snippet": "joinString ${2:separator}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddDatabase",
              "description": "Register knowledge base database to given person. See Conversations for more details.\n\n\nThis function is no longer available in Arma 2.\n\n\n\nThis function is no longer available in Arma 3.",
              "snippet": "kbAddDatabase ${2:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddDatabaseTargets",
              "description": "Register target list knowledge base database to given person. See Conversations for more details.\n\n\nThis function is no longer available in Arma 2.\n\n\n\nThis function is no longer available in Arma 3.",
              "snippet": "kbAddDatabaseTargets ${2:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddTopic",
              "description": "Register conversation topic to given person. See Conversations for more details.\n\u24d8Only the speaker(s) need to have the topic added.",
              "snippet": "kbAddTopic [${2:topicName}, ${3:conversationFile}, ${4:fsmFile}, ${5:eventHandler}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbHasTopic",
              "description": "Check if conversation topic was registered to given person. See Conversations for more details.",
              "snippet": "kbHasTopic ${2:topicName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbReact",
              "description": "Pass a non-verbal communication to the receiver. This command does as if the sentence was said and triggers the reaction scripts (AI FSM or player's conversation EH). See Conversations for more details.",
              "snippet": "kbReact [${3:receiver}, ${4:topicName}, ${5:sentenceID}(, argumentArray1, argumentArray2, \u2026)]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbRemoveTopic",
              "description": "Unregister conversation topic from given person. See Conversations for more details.",
              "snippet": "kbRemoveTopic ${2:topicName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbTell",
              "description": "Make the person tell to the receiver the sentence. See Conversations for more details.",
              "snippet": "kbTell [${3:receiver}, ${4:topicName}, ${5:sentenceClass}(, argumentArray1, argumentArray2, (\u2026), ${11:forceRadio})]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbWasSaid",
              "description": "Check if given item was said by person to someone. See Conversations for more details.",
              "snippet": "kbWasSaid ${2:[${3:receiver}, ${4:topic}, ${5:sentenceID}, ${6:maxAge}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/keyImage",
              "description": "Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.",
              "snippet": "keyImage ${1:dikCode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/keyName",
              "description": "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.",
              "snippet": "keyName ${1:dikCode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = who ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/knowsAbout",
              "description": "Checks if a group or a side knows about target.\nEnemy knowledge is instantly shared among the group units\nUnits in the same group always perfectly know about each others\nAI knowledge cannot check beyond current viewDistance and it resets to zero as soon as the target's distance is over itNote: neither fog nor daylight affect this behaviour\nLosing sight of a target for more than 120 seconds resets its knowsAbout to zero as well\nMagic number is the value that must be reached for a unit to shoot at an enemy (used by \"Detected by\" triggers as well):\n\n\nGame\n\n1.46\n\n1.96\n\n1.18\n\n1.11\n\n1.62\n\n1.82\n\n\nMagic value\n\n0.7\n\n0.105\n\n?\n\n?\n\n?\n\n?",
              "snippet": "knowsAbout ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetKnowledge",
              "description": "Returns unit's knowledge about target. The returned array includes information whether the target is \nknown by group\nknown by the unit\nlast time the target was seen by the unit\nlast time the target endangered the unit\ntarget side\nposition error\ntarget position",
              "snippet": "targetKnowledge ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopter ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/land",
              "description": "Force helicopter landing. Landing mode may be: \n\n\"LAND\" (complete stop)\n\"GET IN\" (hovering very low, for another unit to get in)\n\"GET OUT\" (hovering low,for another unit to get out)\n\"NONE\" (cancel a landing) Available since ArmA 2 57463 build.",
              "snippet": "land ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "plane ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landAt",
              "description": "Order an AI airplane to land at a given airport.\nId is the number to identify which map airport you want the airplane to land at. See Arma: Airport IDs for more information.\nSince Arma 3 v1.68 it is possible to also make the airplane land at a dynamic airport object (e.g. aircraft carrier, makeshift runway...) \u2013 see Example 2.",
              "snippet": "landAt ${2:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "plane ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landAt",
              "description": "Order an AI airplane to land at a given airport.\nId is the number to identify which map airport you want the airplane to land at. See Arma: Airport IDs for more information.\nSince Arma 3 v1.68 it is possible to also make the airplane land at a dynamic airport object (e.g. aircraft carrier, makeshift runway...) \u2013 see Example 2.",
              "snippet": "landAt ${2:airportObject}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landResult",
              "description": "Return the result of helicopter landing position searching (performed, after land command).",
              "snippet": "landResult ${1:helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/language",
              "description": "Returns current game language.",
              "text": "language"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/laserTarget",
              "description": "Returns laser target object created by given unit (vehicle or soldier) when using a laser targeting device.",
              "snippet": "laserTarget ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbAdd",
              "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.\n\nIt returns the index of the newly added item.",
              "snippet": "lbAdd ${1:[${2:idc}, ${3:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbAdd",
              "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.\n\nIt returns the index of the newly added item.",
              "snippet": "lbAdd ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbClear",
              "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.",
              "snippet": "lbClear ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbClear",
              "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.",
              "snippet": "lbClear ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColor",
              "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "snippet": "lbColor ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColor",
              "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "snippet": "lbColor ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColorRight",
              "description": "Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "snippet": "lbColorRight ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColorRight",
              "description": "Returns the text color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "snippet": "lbColorRight ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbCurSel",
              "description": "Returns the index of the selected item of the listbox, combobox or toolbox with id idc of the topmost user dialog. For listbox  LB_MULTI (multi-selection) use lbSelection.",
              "snippet": "lbCurSel ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbCurSel",
              "description": "Returns the index of the selected item of the listbox, combobox or toolbox with id idc of the topmost user dialog. For listbox  LB_MULTI (multi-selection) use lbSelection.",
              "snippet": "lbCurSel ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbData",
              "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbData ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbData",
              "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbData ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbDelete",
              "description": "Removes the item with the given index from the listbox or combobox/toolbox with id idc of the topmost user dialog.",
              "snippet": "lbDelete ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbDelete",
              "description": "Removes the item with the given index from the listbox or combobox/toolbox with id idc of the topmost user dialog.",
              "snippet": "lbDelete ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbIsSelected",
              "description": "Checks whether or not given row of the given listbox is selected.",
              "snippet": "lbIsSelected ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPicture",
              "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbPicture ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPicture",
              "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbPicture ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPictureRight",
              "description": "Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbPictureRight ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPictureRight",
              "description": "Returns the right picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbPictureRight ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSelection",
              "description": "Returns Array of selected rows indices in the given listbox. If listbox is of style LB_MULTI (multi-selection) the array will contain multiple elements, otherwise only a single element. For single selection listbox one can also use lbCurSel. See also lbIsSelected, lbSetSelected",
              "snippet": "lbSelection ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColor",
              "description": "Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetColor [${1:idc}, ${2:index}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColor",
              "description": "Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetColor [${2:index}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColorRight",
              "description": "Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetColorRight ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColorRight",
              "description": "Sets the color of the item (right) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetColorRight ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetCurSel",
              "description": "Selects the item with the given index in the listbox, listnbox, combobox, xcombobox, xlistbox\n\u26a0The following only applicable to Alternative Syntax when used with CT_LISTBOX and CT_LISTNBOXTo deselect all entries, use -1: _ctrl lbSetCurSel -1; For listbox of style LB_MULTI use lbSetSelected instead.",
              "snippet": "lbSetCurSel ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetCurSel",
              "description": "Selects the item with the given index in the listbox, listnbox, combobox, xcombobox, xlistbox\n\u26a0The following only applicable to Alternative Syntax when used with CT_LISTBOX and CT_LISTNBOXTo deselect all entries, use -1: _ctrl lbSetCurSel -1; For listbox of style LB_MULTI use lbSetSelected instead.",
              "snippet": "lbSetCurSel ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetData",
              "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "snippet": "lbSetData ${1:[${2:idc}, ${3:index}, ${4:data}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetData",
              "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "snippet": "lbSetData ${2:[${3:index}, ${4:data}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPicture",
              "description": "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureColor as default [0,0,0,0] color makes picture invisible.",
              "snippet": "lbSetPicture ${1:[${2:idc}, ${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPicture",
              "description": "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureColor as default [0,0,0,0] color makes picture invisible.",
              "snippet": "lbSetPicture ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColor",
              "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColor [${2:idc}, ${3:index}, ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColor",
              "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColor [${3:index}, ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorDisabled",
              "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColorDisabled ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorDisabled",
              "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColorDisabled ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorSelected",
              "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColorSelected ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorSelected",
              "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureColorSelected ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRight",
              "description": "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureRightColor as default [0,0,0,0] color makes picture invisible. \n\n\u24d8When trying to select a listBox entry by clicking at the right picture, the control in the background is focused. It seems the width of the control is not extended by adding a right picture.",
              "snippet": "lbSetPictureRight ${1:[${2:idc}, ${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRight",
              "description": "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureRightColor as default [0,0,0,0] color makes picture invisible. \n\n\u24d8When trying to select a listBox entry by clicking at the right picture, the control in the background is focused. It seems the width of the control is not extended by adding a right picture.",
              "snippet": "lbSetPictureRight ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColor",
              "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColor [${2:idc}, ${3:index}, ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColor",
              "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColor [${3:index}, ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorDisabled",
              "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColorDisabled ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorDisabled",
              "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColorDisabled ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorSelected",
              "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColorSelected ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorSelected",
              "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "snippet": "lbSetPictureRightColorSelected ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetText",
              "description": "Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbSetText ${1:[${2:idc}, ${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetText",
              "description": "Sets the text on the left side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbSetText ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetTextRight",
              "description": "Sets the text on the right side of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbSetTextRight ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColor",
              "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetSelectColor ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColor",
              "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetSelectColor ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColorRight",
              "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetSelectColorRight ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColorRight",
              "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "snippet": "lbSetSelectColorRight ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelected",
              "description": "Sets the selection state of the given row of the given listbox of style LB_MULTI. The command has to be called for every row which is needed to be selected in multi-selection listbox. For single selection listbox use lbSetCurSel instead.",
              "snippet": "lbSetSelected ${2:[${3:index}, ${4:selected}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetTooltip",
              "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "snippet": "lbSetTooltip ${1:[${2:idc}, ${3:index}, ${4:tooltip}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetTooltip",
              "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "snippet": "lbSetTooltip ${2:[${3:index}, ${4:tooltip}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetValue",
              "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.",
              "snippet": "lbSetValue ${1:[${2:idc}, ${3:index}, ${4:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetValue",
              "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.",
              "snippet": "lbSetValue ${2:[${3:index}, ${4:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSize",
              "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.",
              "snippet": "lbSize ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSize",
              "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.",
              "snippet": "lbSize ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "description": "Sorts listbox entries alphabetically ascending by their lbText.",
              "snippet": "lbSort ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "description": "Sorts listbox entries alphabetically ascending by their lbText.",
              "snippet": "lbSort [${1:control}, ${2:sortOrder}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "description": "Sorts listbox entries alphabetically ascending by their lbText.",
              "snippet": "lbSort ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "description": "Sorts listbox entries alphabetically ascending by their lbText.",
              "snippet": "lbSort [${1:idc}, ${2:sortOrder}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSortByValue",
              "description": "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.",
              "snippet": "lbSortByValue ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSortByValue",
              "description": "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.",
              "snippet": "lbSortByValue ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbText",
              "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbText ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbText",
              "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbText ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbTextRight",
              "description": "Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbTextRight ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbTextRight",
              "description": "Returns the shown right text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbTextRight ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbValue",
              "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbValue ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbValue",
              "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "snippet": "lbValue ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leader",
              "description": "Returns the group leader for the given unit or group. For dead units, objNull is returned.",
              "snippet": "leader ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardDeInit",
              "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.",
              "snippet": "leaderboardDeInit ${1:boardName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardGetRows",
              "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!",
              "snippet": "leaderboardGetRows ${1:boardName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardInit",
              "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.",
              "snippet": "leaderboardInit ${1:boardName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardRequestRowsFriends",
              "description": "Requests given leaderboard to download friends rows from the given leaderboard",
              "snippet": "leaderboardRequestRowsFriends ${1:boardName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardsRequestUploadScore",
              "description": "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.",
              "snippet": "leaderboardsRequestUploadScore [${1:boardName}, ${2:score}, [${3:details}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardsRequestUploadScoreKeepBest",
              "description": "Starts async. operation to upload score to board with given name, value is only stored to board if it is better than one already in the board. The details array is optional. The board has to be initialized before the call.",
              "snippet": "leaderboardsRequestUploadScoreKeepBest [${1:boardName}, ${2:score}, [${3:details}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardState",
              "description": "returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async. operation ended with error; 3: Invalid board (bad board name, not initialized etc.).",
              "snippet": "leaderboardState ${1:boardname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaveVehicle",
              "description": "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.\nIn short the command could be hypothetically presented as:\nleaveVehicle = un-addVehicle + unassignVehicle forEach crew \nHowever, to make it more reliable, it is best to move unit out of the vehicle manually with moveOut command and force unassign the vehicle with unassignVehicle",
              "snippet": "leaveVehicle ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/libraryCredits",
              "description": "Returns the credits for the libraries used by the game.",
              "text": "libraryCredits"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/libraryDisclaimers",
              "description": "Returns the library disclaimers.",
              "text": "libraryDisclaimers"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lifeState",
              "description": "Returns the life state of the given unit.\n\n\nArma 2\n\nArma 3\n\n\n\n\"ALIVE\"\n\"DEAD\"\n\"DEAD-RESPAWN\"\n\"DEAD-SWITCHING\"\n\"ASLEEP\"\n\"UNCONSCIOUS\"\n\n\n\"HEALTHY\"\n\"DEAD\"\n\"DEAD-RESPAWN\"\n\"DEAD-SWITCHING\"\n\"INCAPACITATED\"\n\"INJURED\"\n\nIn Arma 3, lifeState seems to change to \"INJURED\" when  damage aliveUnit >= 0.1 (0.1 seeming to be the value defined in config under \"InjuredTreshold\"sic).",
              "snippet": "lifeState ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightAttachObject",
              "description": "Attach light to given object at given position on object.",
              "snippet": "lightAttachObject ${2:[${3:object}, ${4:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightDetachObject",
              "description": "Detach light from object.",
              "snippet": "lightDetachObject ${1:light}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightIsOn",
              "description": "Check if lampost is on (shining).\n\u24d8A lamp state is local to each client (see switchLight).\nThis command was originally designed to only work with CfgNonAIVehicles class \"StreetLamp\" only;\nsince Arma 3 v1.92 this command was extended to work with street lights.",
              "snippet": "lightIsOn ${1:lamppost}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightnings",
              "description": "Return the current lightnings value.",
              "text": "lightnings"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/limitSpeed",
              "description": "Limit speed of given vehicle or person to given value (in km/h).",
              "snippet": "limitSpeed ${2:speed}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/linearConversion",
              "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what. Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be linearConversion [0,1,0.55,0,100]; //55 but if given value is 1.1linearConversion [0,1,1.1,0,100,false]; //110 or if clipping is true  linearConversion [0,1,1.1,0,100,true]; //100",
              "snippet": "linearConversion ${1:[${2:minFrom}, ${3:maxFrom}, ${4:value}, ${5:minTo}, ${6:maxTo}, ${7:clip}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endl",
              "description": "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (end line). The command returns \"\\r\\n\", which contains control characters rather than printable characters:  \nhint str count \"\\r\\n\"; // 4\nhint str count endl; // 2\nThe line break works for diag_log and ctrlSetText. It doesn't work with the hint because hint interprets printable \"\\n\" as line break instead. Alternatively one can use toString command to get other characters.",
              "text": "endl"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineBreak",
              "description": "Creates a structured text containing a line break.",
              "text": "lineBreak"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersects",
              "description": "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.\n\nNOTE: Doesn't work under water. Max harcoded distance is 1000m.",
              "snippet": "lineIntersects ${1:[${2:begPos}, ${3:endPos}, ${4:objIgnore1}, ${5:objIgnore2}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsObjs",
              "description": "Returns list of objects intersected by given line from begPos to endPos.",
              "snippet": "lineIntersectsObjs [${1:begPos}, ${2:endPos}, ${3:withObj}, ${4:ignoreObj}, ${5:sortByDistance}, ${6:flags}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsSurfaces",
              "description": "Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.69.140138, this could be tweaked with an optional param. \n\u24d8If begPosASL is under the ground and endPosASL is above it, the command will only return intersection with the ground, this is engine limitation and none of the intersectXXX commands will work when initiated from under the ground.\nSince Arma v1.51.131920 it is possible to indicate primary and secondary LOD to look for intersection. Available options are:\n\n\"FIRE\"\n\"VIEW\"\n\"GEOM\"\n\"IFIRE\" - (\"I\" stands for Indirect, practically the same as FIRE)\n\"NONE\"\n\"PHYSX\" - PhysX geometry LOD (since Arma 3 v2.01.146666)\nDefault LODs are \"VIEW\" and \"FIRE\"\n\n\u26a0Only a single LOD is checked for intersection. LOD1 is Primary LOD and will be checked first. LOD2 is Secondary LOD. If LOD1 is not possible to check, LOD2 will be used.",
              "snippet": "lineIntersectsSurfaces [${2:begPosASL}, ${3:endPosASL}, ${4:ignoreObj1}, ${5:ignoreObj2}, ${6:sortMode}, ${7:maxResults}, ${8:LOD1}, ${9:LOD2}, ${10:returnUnique}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsWith",
              "description": "Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true. \u26a0Doesn't work under water. Max hardcoded distance is 1000m.",
              "snippet": "lineIntersectsWith ${1:[${2:begPos}, ${3:endPos}, ${4:objIgnore1}, ${5:objIgnore2}, ${6:sortByDistance}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/linkItem",
              "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.",
              "snippet": "linkItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/list",
              "description": "List of units that would activate given Trigger.\n\nIt returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started.Since this is just a reference this means that the value in your local variable will change as the content of the trigger area changes. To permanently copy the returned list to a different variable, use _mylist = +(list triggerOne).\n\nThe second example can be used inside the trigger (in that case, no need to name your trigger).\n\nThe list returned for trigger of type \"Not present\" is the same as that returned for type \"present\". \n\nNOTE: While the command can query any trigger, local or remote, the result will be only for the trigger condition set on the local client. See createTrigger for more info.",
              "snippet": "list ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listObjects",
              "description": "Return the list of all objects of given type.\n\u24d8Some Old Editor Command",
              "snippet": "listObjects ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listRemoteTargets",
              "description": "Return list of datalink targets and time for which they will be/were known",
              "snippet": "listRemoteTargets ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listVehicleSensors",
              "description": "Returns an array of the sensors in the given vehicle's config (configfile >> CfgVehicles >> vehicle >> Components >> SensorsManagerComponent >> Components).",
              "snippet": "listVehicleSensors ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ln",
              "description": "Natural logarithm of x.",
              "snippet": "ln ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddArray",
              "description": "Adds list of rows of strings.",
              "snippet": "lnbAddArray ${1:[${2:idc}, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = _ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddColumn",
              "description": "Adds an column at given position. It returns the index of the newly added column.",
              "snippet": "lnbAddColumn ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddColumn",
              "description": "Adds an column at given position. It returns the index of the newly added column.",
              "snippet": "lnbAddColumn ${1:[idc(Number) or Control,position(Number)]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddRow",
              "description": "Adds a row of strings.",
              "snippet": "lnbAddRow [${1:idc}, ${2:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddRow",
              "description": "Adds a row of strings.",
              "snippet": "lnbAddRow ${2:data}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbClear",
              "description": "Clears all items in the given listbox or combobox.",
              "snippet": "lnbClear ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbClear",
              "description": "Clears all items in the given listbox or combobox.",
              "snippet": "lnbClear ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbColor",
              "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.",
              "snippet": "lnbColor [${1:idc}, [${2:row}, ${3:column}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbColor",
              "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.",
              "snippet": "lnbColor [${2:row}, ${3:column}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbCurSelRow",
              "description": "Returns the index of the selected row id 2D listbox.",
              "snippet": "lnbCurSelRow ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbCurSelRow",
              "description": "Returns the index of the selected row id 2D listbox.",
              "snippet": "lnbCurSelRow ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbData",
              "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
              "snippet": "lnbData [${1:idc}, [${2:row}, ${3:column}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbData",
              "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
              "snippet": "lnbData [${2:row}, ${3:column}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteColumn",
              "description": "Removes column with given index from ListNBox control.",
              "snippet": "lnbDeleteColumn [${1:idc}, ${2:index}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteColumn",
              "description": "Removes column with given index from ListNBox control.",
              "snippet": "lnbDeleteColumn ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "_ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteRow",
              "description": "Removes row with the given index from the given listbox or combobox.",
              "snippet": "lnbDeleteRow ${2:row}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbGetColumnsPosition",
              "description": "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions.",
              "snippet": "lnbGetColumnsPosition ${1:_ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbPicture",
              "description": "Returns the picture name or path of the item with the given position of the 2D listbox.",
              "snippet": "lnbPicture [${1:idc}, [${2:row}, ${3:column}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbPicture",
              "description": "Returns the picture name or path of the item with the given position of the 2D listbox.",
              "snippet": "lnbPicture [${2:row}, ${3:column}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColor",
              "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.",
              "snippet": "lnbSetColor [${1:idc}, [${2:row}, ${3:column}], ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColor",
              "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.",
              "snippet": "lnbSetColor [[${2:row}, ${3:column}], ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColumnsPos",
              "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition.",
              "snippet": "lnbSetColumnsPos [${1:idc}, ${2:positions}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColumnsPos",
              "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition.",
              "snippet": "lnbSetColumnsPos ${2:positions}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetCurSelRow",
              "description": "Selects the row with the given index of the 2D listbox.",
              "snippet": "lnbSetCurSelRow [${1:idc}, ${2:index}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetCurSelRow",
              "description": "Selects the row with the given index of the 2D listbox.",
              "snippet": "lnbSetCurSelRow ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetData",
              "description": "Sets the additional text (invisible) on the item with the given position of the 2D listbox.",
              "snippet": "lnbSetData ${1:[${2:idc}, ${3:[${4:row}, ${5:column}]}, ${6:data}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetData",
              "description": "Sets the additional text (invisible) on the item with the given position of the 2D listbox.",
              "snippet": "lnbSetData ${2:[${3:[${4:row}, ${5:column}]}, ${6:data}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPicture",
              "description": "Sets the picture in the item with the given position of the 2D listbox.\nName is the picture name.\nThe picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).",
              "snippet": "lnbSetPicture [${1:idc}, [${2:row}, ${3:column}], ${4:picturePathOrName}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPicture",
              "description": "Sets the picture in the item with the given position of the 2D listbox.\nName is the picture name.\nThe picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).",
              "snippet": "lnbSetPicture [[${2:row}, ${3:column}], ${4:picturePathOrName}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureColor",
              "description": "Sets the cell picture's colour.",
              "snippet": "lnbSetPictureColor [${1:idc}, [${2:row}, ${3:column}], ${4:colour}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureColor",
              "description": "Sets the cell picture's colour.",
              "snippet": "lnbSetPictureColor [[${2:row}, ${3:column}], ${4:colour}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureColorSelected",
              "description": "Sets the cell picture's colour on cell selection.",
              "snippet": "lnbSetPictureColorSelected [${1:idc}, [${2:row}, ${3:column}], ${4:colour}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureColorSelected",
              "description": "Sets the cell picture's colour on cell selection.",
              "snippet": "lnbSetPictureColorSelected [[${2:row}, ${3:column}], ${4:colour}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureRight",
              "description": "Sets the cell's right-picture. The picture is set to the end of the row, the column parameter does not matter.\n\u24d8The picture is searched in the mission, directory, the campaign directory's dtaExt subdirectory, and the data bank (or directory).",
              "snippet": "lnbSetPictureRight [${1:idc}, [${2:row}, ${3:column}], ${4:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPictureRight",
              "description": "Sets the cell's right-picture. The picture is set to the end of the row, the column parameter does not matter.\n\u24d8The picture is searched in the mission, directory, the campaign directory's dtaExt subdirectory, and the data bank (or directory).",
              "snippet": "lnbSetPicture [[${2:row}, ${3:column}], ${4:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetText",
              "description": "Sets the text in the item with the given position of the 2D listbox.",
              "snippet": "lnbSetText [${1:idc}, [${2:row}, ${3:column}], ${4:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetText",
              "description": "Sets the text in the item with the given position of the 2D listbox.",
              "snippet": "lnbSetText [[${2:row}, ${3:column}], ${4:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetTextRight",
              "description": "Sets cell's right-aligned text. Does not replace cell's text.",
              "snippet": "lnbSetTextRight [${1:idc}, [${2:row}, ${3:column}], ${4:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetTextRight",
              "description": "Sets cell's right-aligned text. Does not replace cell's text.",
              "snippet": "lnbSetTextRight [[${2:row}, ${3:column}], ${4:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetTooltip",
              "description": "Sets tooltip on the item with the given row and column of the 2D listbox. \n\u26a0While it is possible to set tooltip on any column, only tooltip from the primary column 0 is displayed for the whole row under cursor, which makes adding tooltips to columns other than 0 impractical.",
              "snippet": "lnbSetTooltip ${1:[${2:idc}, ${3:[${4:row}, ${5:column}]}, ${6:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetTooltip",
              "description": "Sets tooltip on the item with the given row and column of the 2D listbox. \n\u26a0While it is possible to set tooltip on any column, only tooltip from the primary column 0 is displayed for the whole row under cursor, which makes adding tooltips to columns other than 0 impractical.",
              "snippet": "lnbSetTooltip ${2:[${3:[${4:row}, ${5:column}]}, ${6:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetValue",
              "description": "Sets the additional integer value in the item with the position index of the 2D listbox.",
              "snippet": "lnbSetValue [${1:idc}, [${2:row}, ${3:column}], ${4:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetValue",
              "description": "Sets the additional integer value in the item with the position index of the 2D listbox.",
              "snippet": "lnbSetValue [[${2:row}, ${3:column}], ${4:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSize",
              "description": "Returns size of 2D listbox or combobox as [rows, columns].",
              "snippet": "lnbSize ${1:ctrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSort",
              "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.",
              "snippet": "lnbSort ${1:[${2:idc}, ${3:column}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSort",
              "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.",
              "snippet": "lnbSort ${2:[${3:column}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSortByValue",
              "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.",
              "snippet": "lnbSortByValue ${1:[${2:idc}, ${3:column}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSortByValue",
              "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.",
              "snippet": "lnbSortByValue ${2:[${3:column}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbText",
              "description": "Returns the shown text in the item with the given position of the given 2D listbox.",
              "snippet": "lnbText ${2:[row,column]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbValue",
              "description": "Returns the additional integer value in the item with the given position of the 2D listbox.",
              "snippet": "lnbValue [${1:idc}, [${2:row}, ${3:column}]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbValue",
              "description": "Returns the additional integer value in the item with the given position of the 2D listbox.",
              "snippet": "lnbValue [${2:row}, ${3:column}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/load",
              "description": "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula:\n_loadPlayer = loadAbs player / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");",
              "snippet": "load ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadAbs",
              "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.",
              "snippet": "loadAbs ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadBackpack",
              "description": "Returns current percentage of mass from items stored in a backpack relative to the maximum capacity of the backpack.\nIt is equivalent to this formula:\n_loadBackpack = massOfAllItemsInBackpack / getContainerMaxLoad backpack player;",
              "snippet": "loadBackpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadFile",
              "description": "Return content of given filename as string. If you plan to compile said string, be aware that the file shouldn't contain comments or compile will throw an error. If there are comments, use preprocessFile/preprocessFileLineNumbers instead. \n\u26a0If the file you are loading is not prepared using UTF-8 encoding and contains some characters  with codes > 127, they might convert incorrectly",
              "snippet": "loadFile ${1:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadGame",
              "description": "Loads game from the last autosave made with saveGame. If no autosave exists, restarts the mission. When used in campaign it will also deduct 1 life, defined in:\ncampaignConfigFile / \"Campaign\" / <battle> / <mission> / \"lives\"\n\u24d8A  mission event handler  \"Loaded\" is available and is important that it is added in preInit in order for it to fire on load from save",
              "text": "loadGame"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadIdentity",
              "description": "Loads person's identity from Objects.sav file in campaign directory (from entry name).",
              "snippet": "loadIdentity ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "transport ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadMagazine",
              "description": "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime.\nThe turret has to be manned. One can also change the magazine if its respective weapon is not selected.",
              "snippet": "loadMagazine [${2:turretPath}, ${3:weaponName}, ${4:magazineName}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadOverlay",
              "description": "Creates the load overlay dialog for the specified type of overlay.\n\u24d8Some Old Editor Command",
              "snippet": "loadOverlay ${2:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadStatus",
              "description": "Loads object's properties from Objects.sav file in campaign directory (from entry name).",
              "snippet": "loadStatus ${2:entryName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadUniform",
              "description": "Returns current percentage of mass from items stored in a uniform relative to the maximum capacity of the uniform. \nIt is equivalent to this formula:\n_loadUniform = massOfAllItemsInUniform / getContainerMaxLoad uniform player;",
              "snippet": "loadUniform ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadVest",
              "description": "Returns current percentage of mass from items stored in a vest relative to the maximum capacity of the vest. \nIt is equivalent to this formula:\n_loadVest = massOfAllItemsInVest / getContainerMaxLoad vest player;",
              "snippet": "loadVest ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/local",
              "description": "Check if given unit is local on the computer in Multiplayer games - see Multiplayer Scripting - Locality.\nThis can be used to determine on which computer some code must be run. In Single player all objects are local.",
              "snippet": "local ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/local",
              "description": "Check if given unit is local on the computer in Multiplayer games - see Multiplayer Scripting - Locality.\nThis can be used to determine on which computer some code must be run. In Single player all objects are local.",
              "text": "local"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/localize",
              "description": "Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName.\nIf the key couldn't be found, an empty string (\"\") is returned and an entry is added to .rpt file, for example String STR_DN_SNAKE not found.",
              "snippet": "localize ${1:stringName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Location) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locationNull",
              "description": "A non-existing Location. To compare non-existent locations use isNull or isEqualTo:\nlocationNull == locationNull; // false\nisNull locationNull; // true\nlocationNull isEqualTo locationNull; // true",
              "text": "locationNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/localNamespace",
              "description": "Returns local Namespace attached to the mission. Has the same lifetime as missionNamespace but variables cannot be broadcast out of or into this namespace in multiplayer and will not be serialized when game is saved. UI variables can be safely stored in this namespace. Use allVariables command to save the variables elsewhere if required.",
              "text": "localNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locationPosition",
              "description": "Returns the position of a location. If the location is attached to an object, that object's position is returned.",
              "snippet": "locationPosition ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lock",
              "description": "Lock vehicle (disable mounting / dismounting) for player.\nThis command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands (e.g moveInCargo).\n\u24d8Alternative syntax is similar to setVehicleLock but with numbers.",
              "snippet": "lock ${2:locked}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lock",
              "description": "Lock vehicle (disable mounting / dismounting) for player.\nThis command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands (e.g moveInCargo).\n\u24d8Alternative syntax is similar to setVehicleLock but with numbers.",
              "snippet": "lock ${2:lockstate}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCameraTo",
              "description": "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.",
              "snippet": "lockCameraTo [${2:target}, ${3:turretPath}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCargo",
              "description": "Lock all cargo positions of a vehicle or lock by index.\nThis command will remove user \"get in\" action (not get out) but will also stop player getting into vehicle via script commands (e.g moveInCargo) unlike lock command.",
              "snippet": "lockCargo ${2:lock}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCargo",
              "description": "Lock all cargo positions of a vehicle or lock by index.\nThis command will remove user \"get in\" action (not get out) but will also stop player getting into vehicle via script commands (e.g moveInCargo) unlike lock command.",
              "snippet": "lockCargo ${2:[${3:index}, ${4:lock}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockDriver",
              "description": "Lock the driver position of the vehicle. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command",
              "snippet": "lockDriver ${2:lock}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locked",
              "description": "Check if vehicle is locked. If it is locked, Persons cannot mount / dismount without order.",
              "snippet": "locked ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedCargo",
              "description": "Check whether cargo position of the vehicle is locked.",
              "snippet": "lockedCargo ${2:cargoIndex}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedDriver",
              "description": "Check whether driver position of the vehicle turret is locked.",
              "snippet": "lockedDriver ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedInventory",
              "description": "Get a vehicle's inventory lock state. Can also be used on a unit's backback (see lockInventory).",
              "snippet": "lockedInventory ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedTurret",
              "description": "Check whether gunner position of the vehicle turret is locked.",
              "snippet": "lockedTurret ${2:turretPath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockIdentity",
              "description": "Locks the identity of a person. This will disable default identity.",
              "snippet": "lockIdentity ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockInventory",
              "description": "Lock or unlock a vehicle's inventory access. This command can also lock backpack a unit is wearing to prevent access by a third party. If you set it true (locked), the inventory won't be accessed via hotkey or action menu.",
              "snippet": "lockInventory ${2:lock}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockTurret",
              "description": "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command",
              "snippet": "lockTurret ${2:[turret path,lock]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockWP",
              "description": "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.",
              "snippet": "lockWP ${2:lock}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/log",
              "description": "Base-10 logarithm of x.",
              "snippet": "log ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logEntities",
              "description": "Creates a log file containing the list of all game entities in scene. \nFile is created in the same directory as .rpt file. \nSpecial: BattlEye's RCON variant of this command is #logEntities (see also Multiplayer_Server_Commands)",
              "text": "logEntities"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logNetwork",
              "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the Arma 3 root folder.\n\u26a0logNetwork can potentially create a large log file.",
              "snippet": "logNetwork ${1:logFile}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logNetworkTerminate",
              "description": "Terminates a network log file started with logNetwork with the given handle",
              "snippet": "logNetworkTerminate ${1:handle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit(s) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lookAt",
              "description": "Control what the unit(s) is/are looking at (target or Position). If target is used, it will get revealed fully.",
              "snippet": "lookAt ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lookAtPos",
              "description": "Point the camera and center the map on the position.\n\u24d8Some Old Editor Command",
              "snippet": "lookAtPos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazineCargo",
              "description": "Get array with magazines from ammo box (or any general weapon holder container).",
              "snippet": "magazineCargo ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazines",
              "description": "Returns array of type names of all vehicle's magazines.\n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.",
              "snippet": "magazines ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazines",
              "description": "Returns array of type names of all vehicle's magazines.\n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.",
              "snippet": "magazines ${1:[${2:vehicle}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAllTurrets",
              "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.",
              "snippet": "magazinesAllTurrets ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmo",
              "description": "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.\n\nOutput format:\n\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n\n0: Magazine class name\n\n1: Magazine current ammo count",
              "snippet": "magazinesAmmo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmo",
              "description": "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.\n\nOutput format:\n\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n\n0: Magazine class name\n\n1: Magazine current ammo count",
              "snippet": "magazinesAmmo ${1:[${2:vehicle}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmoCargo",
              "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.",
              "snippet": "magazinesAmmoCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmoFull",
              "description": "Returns array of arrays of all vehicle's magazines with extended information about them. Magazine type is available for loaded magazines only, otherwise it is -1.\n\n\nOutput format:\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n0: Magazine class name\n1: Magazine current ammo count\n2: Magazine state (true - loaded, false - not loaded)\n3: Magazine type (-1 - n/a, 0 - grenade, 1 - primary weapon mag, 2 - handgun mag, 4 - secondary weapon mag, 4096 - binocular weapon mag, 65536 - vehicle mag)\n4: Magazine location (\"Vest\", \"Uniform\", \"Backpack\", \"\") or corresponding currentMuzzle \n\u26a0This command does not return empty magazines from containers, only from the weapon. Use magazinesAmmoCargo <container> instead",
              "snippet": "magazinesAmmoFull ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmoFull",
              "description": "Returns array of arrays of all vehicle's magazines with extended information about them. Magazine type is available for loaded magazines only, otherwise it is -1.\n\n\nOutput format:\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n0: Magazine class name\n1: Magazine current ammo count\n2: Magazine state (true - loaded, false - not loaded)\n3: Magazine type (-1 - n/a, 0 - grenade, 1 - primary weapon mag, 2 - handgun mag, 4 - secondary weapon mag, 4096 - binocular weapon mag, 65536 - vehicle mag)\n4: Magazine location (\"Vest\", \"Uniform\", \"Backpack\", \"\") or corresponding currentMuzzle \n\u26a0This command does not return empty magazines from containers, only from the weapon. Use magazinesAmmoCargo <container> instead",
              "snippet": "magazinesAmmoFull ${1:[${2:vehicle}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetail",
              "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.",
              "snippet": "magazinesDetail ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetail",
              "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.",
              "snippet": "magazinesDetail ${1:[${2:vehicle}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailBackpack",
              "description": "Returns an array with the type names of all the unit's backpack magazines.",
              "snippet": "magazinesDetailBackpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailBackpack",
              "description": "Returns an array with the type names of all the unit's backpack magazines.",
              "snippet": "magazinesDetailBackpack ${1:[${2:unit}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailUniform",
              "description": "Returns an array with the type names of all the unit's uniform magazines.",
              "snippet": "magazinesDetailUniform ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailUniform",
              "description": "Returns an array with the type names of all the unit's uniform magazines.",
              "snippet": "magazinesDetailUniform ${1:[${2:unit}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailVest",
              "description": "Returns an array with the type names of all the unit's vest magazines.",
              "snippet": "magazinesDetailVest ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailVest",
              "description": "Returns an array with the type names of all the unit's vest magazines.",
              "snippet": "magazinesDetailVest ${1:[${2:unit}, ${3:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesTurret",
              "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets.\n\u24d8When main syntax is used, command excludes empty magazines for driver turret [-1] but returns empty magazines for all other turrets. Since Arma 3 v2.01.146669 alternative syntax is available that makes empty magazine handling optional and consistent.",
              "snippet": "magazinesTurret ${2:turretPath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesTurret",
              "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets.\n\u24d8When main syntax is used, command excludes empty magazines for driver turret [-1] but returns empty magazines for all other turrets. Since Arma 3 v2.01.146669 alternative syntax is available that makes empty magazine handling optional and consistent.",
              "snippet": "magazinesTurret ${2:[${3:turretPath}, ${4:includeEmpty}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazineTurretAmmo",
              "description": "Returns ammo count of given type from given turret \n\u26a0Broken when vehicle has multiple magazines of the same type",
              "snippet": "magazineTurretAmmo ${2:[magazineClass, turretPath]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimAdd",
              "description": "Add next frame to map animation.",
              "snippet": "mapAnimAdd ${1:[${2:time}, ${3:zoom}, ${4:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimClear",
              "description": "Clear map animation.",
              "text": "mapAnimClear"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimCommit",
              "description": "Play map animation.",
              "text": "mapAnimCommit"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimDone",
              "description": "Check if map animation is finished.",
              "text": "mapAnimDone"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "mainmap ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapCenterOnCamera",
              "description": "ctrl mapCenterOnCamera enable syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.\nmapCenterOnCamera ctrl syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).",
              "snippet": "mapCenterOnCamera ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapCenterOnCamera",
              "description": "ctrl mapCenterOnCamera enable syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.\nmapCenterOnCamera ctrl syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).",
              "snippet": "mapCenterOnCamera ${1:minimap}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapGridPosition",
              "description": "Returns the map grid position of an object or position.\nThe format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.",
              "snippet": "mapGridPosition ${1:param}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markAsFinishedOnSteam",
              "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.",
              "text": "markAsFinishedOnSteam"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerAlpha",
              "description": "Gets the marker alpha. See setMarkerAlpha.",
              "snippet": "markerAlpha ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerBrush",
              "description": "Gets the marker brush. See setMarkerBrush.",
              "snippet": "markerBrush ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerColor",
              "description": "Returns marker color for given marker. See also setMarkerColor.",
              "snippet": "markerColor ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerDir",
              "description": "Get marker direction.",
              "snippet": "markerDir ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerPos",
              "description": "Returns marker position. See also setMarkerPos.",
              "snippet": "markerPos ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerPos",
              "description": "Returns marker position. See also setMarkerPos.",
              "snippet": "markerPos ${1:[${2:markerName}, ${3:preserveElevation}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerShape",
              "description": "Gets the marker shape. See setMarkerShape for a list of strings that can be returned. Possible return values:\n\"ICON\"\n\"RECTANGLE\"\n\"ELLIPSE\"\n\"POLYLINE\"\n\"ERROR\"",
              "snippet": "markerShape ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerSize",
              "description": "Returns marker size. This command is identical to getMarkerSize.",
              "snippet": "markerSize ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerText",
              "description": "Get marker text.",
              "snippet": "markerText ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerType",
              "description": "Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers.",
              "snippet": "markerType ${1:markerName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = matrix1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/matrixMultiply",
              "description": "Returns resulting matrix from the multiplication of two matrices. First matrix must be of the size n \u2715 k, while the second must be of the size k \u2715 m, i.e columns matrix1 == rows matrix2. The resulting matrix will be of the size n \u2715 m. If the shapes do not match, empty array [] will be returned.",
              "snippet": "matrixMultiply ${2:matrix2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/matrixTranspose",
              "description": "Returns transposed version of the given matrix. The matrix is an Array of rows. Each row is an Array of corresponding column values for the row. The minimum number of rows is 1.",
              "snippet": "matrixTranspose ${1:matrix}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/max",
              "description": "The greater of a,b",
              "snippet": "max ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/members",
              "description": "Return a list of members in given team.",
              "snippet": "members ${1:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuAction",
              "description": "Returns action stored in item on given path in CT_MENU_STRIP control.",
              "snippet": "menuAction ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuAction",
              "description": "Returns action stored in item on given path in CT_MENU_STRIP control.",
              "snippet": "menuAction ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuAdd",
              "description": "Adds new submenu entry into item on given path.",
              "snippet": "menuAdd [${1:idc}, ${2:path}, ${3:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuChecked",
              "description": "Returns if item on given path is checked or not.",
              "snippet": "menuChecked [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuClear",
              "description": "Removes all entries from given menu strip.",
              "snippet": "menuClear ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuClear",
              "description": "Removes all entries from given menu strip.",
              "snippet": "menuClear ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuCollapse",
              "description": "Collapses item on given path and all its childs.",
              "snippet": "menuCollapse [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuData",
              "description": "Returns data stored in menu entry on given path.",
              "snippet": "menuData [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuDelete",
              "description": "Deletes menu entry on given path.",
              "snippet": "menuDelete [${1:idc},${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuDelete",
              "description": "Deletes menu entry on given path.",
              "snippet": "menuDelete ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuEnable",
              "description": "Enables disabled menu entry on given path.",
              "snippet": "menuEnable [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuEnabled",
              "description": "Returns if menu entry on given path is enabled or not.",
              "snippet": "menuEnabled [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuExpand",
              "description": "Expands given menu entry on given path and all its parents so entry is visible.",
              "snippet": "menuExpand [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuHover",
              "description": "Returns path to menu entry mouse is currently hovering over.",
              "snippet": "menuHover ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuPicture",
              "description": "Returns picture set into item on given path",
              "snippet": "menuPicture [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetAction",
              "description": "Sets new action into menu entry on given path.",
              "snippet": "menuSetAction [${1:idc}, ${2:path}, action]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetCheck",
              "description": "Sets item on given path to be checked or not.",
              "snippet": "menuSetCheck [${1:idc}, ${2:path}, checkedl]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetData",
              "description": "Sets new data into item on given path.",
              "snippet": "menuSetData [${1:idc}, ${2:path}, ${3:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetPicture",
              "description": "Sets new picture into menu entry on given path.",
              "snippet": "menuSetPicture [${1:idc}, ${2:path}, ${3:picture}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetPicture",
              "description": "Sets new picture into menu entry on given path.",
              "snippet": "menuSetPicture [${2:path}, ${3:picture}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetValue",
              "description": "Sets new value into menu entry on given path.",
              "snippet": "menuSetValue [${1:idc}, ${2:path}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuShortcut",
              "description": "Returns shortcut related to menu entry on given path.",
              "snippet": "menuShortcut [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuShortcutText",
              "description": "Returns a string containing shortcut text for menu item on the given path.",
              "snippet": "menuShortcutText [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSize",
              "description": "Returns how many sub entries is in item on given path.",
              "snippet": "menuSize [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSort",
              "description": "Sorts subentries of item on given path by their text.",
              "snippet": "menuSort [${1:idc}, ${2:path}, ${3:reversed}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuText",
              "description": "Returns current text set in menu entry on given path.",
              "snippet": "menuText [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuURL",
              "description": "Returns current URL set in entry on given path.",
              "snippet": "menuURL [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuValue",
              "description": "Returns current value set in menu entry on given path.",
              "snippet": "menuValue [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/min",
              "description": "The smaller of a,b",
              "snippet": "min ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mineActive",
              "description": "Checks if the given mine is active.",
              "snippet": "mineActive ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = mine ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mineDetectedBy",
              "description": "Returns true if mine has been detected by a given side",
              "snippet": "mineDetectedBy ${2:faction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missileTarget",
              "description": "Returns a guided missile's target.",
              "snippet": "missileTarget ${1:munition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missileTargetPos",
              "description": "Returns a guided missile's target position.",
              "snippet": "missileTargetPos ${1:munition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionConfigFile",
              "description": "Return root of mission Description.ext entries hierarchy.\n\n\u26a0Since introduction of the Eden Editor, scenario attributes can be configured in the editor itself, not only in the external Description.ext file. To access desired value independently on where it is stored, use the following commands instead:\ngetMissionConfigValue\ngetMissionConfig\n\u26a0If your Description.ext file is empty, str missionConfigFile may report an empty string instead of the path to the file. You have to put at least one entry into your config.",
              "text": "missionConfigFile"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionDifficulty",
              "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it is used one from player's options.",
              "text": "missionDifficulty"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionName",
              "description": "Return currently loaded mission file (path to mission.pbo, relative to game exe).",
              "text": "missionName"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionNamespace",
              "description": "Returns the global namespace attached to mission.",
              "text": "missionNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionStart",
              "description": "Returns date and time when mission started in format [year, month, day, hour, minute, second] in MP, which differs from date format only by seconds. In SP returns [0,0,0,0,0,0].\n\n\u24d8Because this command returns the time of the actual start of the mission, it might not be available in pre-init or init, but is guaranteed to be available in post-init when time > 0",
              "text": "missionStart"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionVersion",
              "description": "Returns the version of the current mission.\nMission from the 2D Editor: 12\nMission from the Eden Editor: 15 and higher (for example current version for Eden Editor mission in Arma 3 v1.57 is 51)",
              "text": "missionVersion"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mod",
              "description": "Remainder of a divided by b.",
              "snippet": "mod ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = model ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorld",
              "description": "Translates relative position from object model space into world position.\nThis command will take into account vectorUp of the object when calculating relative coordinates.\nFor ASL version see modelToWorldWorld",
              "snippet": "modelToWorld ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldVisual",
              "description": "Converts position from object model space to world space in render time scope. For ASL version see modelToWorldVisualWorld.",
              "snippet": "modelToWorldVisual ${2:modelPos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldVisualWorld",
              "description": "Converts position from object model space to world space in render time.",
              "snippet": "modelToWorldVisualWorld ${2:modelPos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldWorld",
              "description": "Converts position from object model space to world space (usable by setPosWorld for example).",
              "snippet": "modelToWorldWorld ${2:modelPos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modParams",
              "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options are:\n\n\n\"name\"\nString\nname to be shown (Arma 3 instead of A3, etc.)\n\n\n\"picture\"\nString\npicture shown in Mod Launcher\n\n\n\"logo\"\nString\nlogo to be shown in Main Menu\n\n\n\"logoOver\"\nString\nlogo to be shown in Main Menu when mouse is over\n\n\n\"logoSmall\"\nString\nsmall version of logo, prepared for drawing small icons\n\n\n\"tooltip\"\nString\ntooltip to be shown on mouse over\n\n\n\"tooltipOwned\"\nString\ntooltip to be shown on mouse over the icon when DLC is owned by player\n\n\n\"action\"\nString\nurl to be triggered when mod button is clicked\n\n\n\"actionName\"\nString\nwhat to put on Action Button\n\n\n\"overview\"\nString\noverview text visible in expansion menu\n\n\n\"hidePicture\"\nBoolean\ndo not show mod picture icon in the main menu mod list\n\n\n\"hideName\"\nBoolean\ndo not show mod name in the main menu mod list\n\n\n\"defaultMod\"\nBoolean\ndefault mods cannot be moved or disabled by Mod Launcher\n\n\n\"serverOnly\"\nBoolean\nmod doesn't have to be installed on client in order to play on server with this mod running\n\n\n\"active\"\nBoolean\nactive mod (activated through command line or stored in profile by mod launcher)\n\n\u24d8Please note that \"active\" does not actually tell you if a mod is running / pretends to be running.",
              "snippet": "modParams ${1:[${2:modClass}, ${3:options}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moonIntensity",
              "description": "Returns the intensity of the moon's brightness in range 0...1.",
              "text": "moonIntensity"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moonPhase",
              "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.",
              "snippet": "moonPhase ${1:date}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/morale",
              "description": "Checks a current morale level of the unit (-1..+1).",
              "snippet": "morale ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/move",
              "description": "Let group move to given position. Active waypoints will be ignored when command is used.",
              "snippet": "move ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/move3DENCamera",
              "description": "Moves Eden Editor camera to given position, with or without offset.\nDefault camera offset: [0,-25,25]",
              "snippet": "move3DENCamera [${1:position},${2:useOffset}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInAny",
              "description": "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle. Seat assignment seems to use the following priority logic: \ndriver (moveInDriver) -> commander turret (moveInCommander) -> gunner turret (moveInGunner) -> remaining turrets (moveInTurret) -> cargo (moveInCargo).\nNOTE: This command will move player into the locked vehicle or seat just as well.",
              "snippet": "moveInAny ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCargo",
              "description": "Move soldier into vehicle cargo position (Immediate, no animation).",
              "snippet": "moveInCargo ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCargo",
              "description": "Move soldier into vehicle cargo position (Immediate, no animation).",
              "snippet": "moveInCargo [${2:vehicle}, ${3:CargoIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCommander",
              "description": "Move soldier into vehicle commander position (Immediate, no animation).",
              "snippet": "moveInCommander ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInDriver",
              "description": "Moves soldier into vehicle driver position (immediate, no animation).\n\u26a0The unit must be local to the PC executing command, the vehicle could be local or remote.",
              "snippet": "moveInDriver ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInGunner",
              "description": "Move soldier into vehicle gunner position (Immediate, no animation).",
              "snippet": "moveInGunner ${2:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInTurret",
              "description": "Moves the soldier into the vehicle's turret. (Immediately, without animation). turret path is an array of positions inside a turret, or positions inside a turret of a turret.\n\n[0] means first turret.\n[0,0] means first turret of first turret.\n[0,1] means second turret of first turret.\n[1] means second turret.\n[1,0] means first turret of the second turret.\n[2,0] means first turret of third turret.\nAnd so on ...",
              "snippet": "moveInTurret ${2:[${3:vehicle}, ${4:turretPath}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveObjectToEnd",
              "description": "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects). \n\u24d8Some Old Editor Command",
              "snippet": "moveObjectToEnd ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveOut",
              "description": "Moves the soldier out of the vehicle.\n\nNotes:\nWorks for both AI and player entities\nAI unit gets back in - unless is under player command or combined with other sqf commands (orderGetIn false, allowGetIn false or leaveVehicle)\nRespects the vehicle's lock state (same as action \"Eject\") - unlike doGetOut, commandGetOut. It will work for player entities regardless though\nStill executes when the vehicle is moving/flying (same as action \"Eject\") - unlike doGetOut, commandGetOut\nWithout vehicle's position's get out animation - unlike action eject, doGetOut, commandGetOut\nImmediately - unlike action eject, doGetOut, commandGetOut\nWorks also on dead units (same as action \"Eject\" (but one after another)) - unlike doGetOut, commandGetOut\nDoes not work for UAV crew\nDoes not work for remoteControl'ed units\nWorks on unconscious (same as action \"Eject\" (but one after another)) - unlike doGetOut, commandGetOut (unless AI under player command)",
              "snippet": "moveOut ${1:soldier}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = target ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTarget",
              "description": "Change information about a target. Not yet implemented.",
              "snippet": "moveTarget ${2:[${3:position}, ${4:typeAccuracy}, ${5:posAccuracy}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTime",
              "description": "Returns the current time of the most important RTM animation currently being played on the soldier.",
              "snippet": "moveTime ${1:soldier}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTo",
              "description": "Low level command to person to move to given position.",
              "snippet": "moveTo ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveToCompleted",
              "description": "Check if latest low level moveTo command is finished.",
              "snippet": "moveToCompleted ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveToFailed",
              "description": "Check if latest low level moveTo command failed.",
              "snippet": "moveToFailed ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/musicVolume",
              "description": "Returns the current music volume (set by fadeMusic)",
              "text": "musicVolume"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/name",
              "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.\nWhen argument is Location, the location's name is returned. To return the textual value of a location use text command instead.\nsetName can be used on a person to set name. However in multiplayer name always returns profileName.",
              "snippet": "name ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/name",
              "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.\nWhen argument is Location, the location's name is returned. To return the textual value of a location use text command instead.\nsetName can be used on a person to set name. However in multiplayer name always returns profileName.",
              "snippet": "name ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/namedProperties",
              "description": "Returns a list of named properties on Geometry LOD.",
              "text": "namedProperties"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nameSound",
              "description": "Returns the nameSound of a person.",
              "snippet": "nameSound ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearEntities",
              "description": "Finds entities inside a sphere with the given radius. If the alternative syntax is used, only entities of given types or subtypes are listed. Entities returned are not sorted by distance. This command doesn't return dead entities or entities inside vehicles. If you need to return those, use entities command.\n\n\u24d8This command is much  faster than nearestObjects for on-foot soldier and vehicle detection.",
              "snippet": "nearEntities ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearEntities",
              "description": "Finds entities inside a sphere with the given radius. If the alternative syntax is used, only entities of given types or subtypes are listed. Entities returned are not sorted by distance. This command doesn't return dead entities or entities inside vehicles. If you need to return those, use entities command.\n\n\u24d8This command is much  faster than nearestObjects for on-foot soldier and vehicle detection.",
              "snippet": "nearEntities ${2:[${3:type}, ${4:radius}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestBuilding",
              "description": "Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.",
              "snippet": "nearestBuilding ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Location) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocation",
              "description": "Return the closest location of specified class to a given position.Checked range is unlimited (i.e. covers the whole map).",
              "snippet": "nearestLocation ${1:[${2:position}, ${3:locationClass}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocations",
              "description": "Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.\n\u24d8Although locations can be placed in 3D with setPosition, nearestLocations search result is sorted in 2D.",
              "snippet": "nearestLocations [${1:position}, [locationType1, locationType2, ...], ${3:radius}, ${4:sortPosition}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Location) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocationWithDubbing",
              "description": "Find the nearest location having a non-empty speech.\nNo locations are dubbed in Arma 3.",
              "snippet": "nearestLocationWithDubbing ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "description": "Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\n\n\u24d8\nin OFP, only objects of the exact provided class are found.\nif an object ID is used (Alternative Syntax 3, see Example 2) the search range is unlimited",
              "snippet": "nearestObject ${1:[${2:position}, ${3:type}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "description": "Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\n\n\u24d8\nin OFP, only objects of the exact provided class are found.\nif an object ID is used (Alternative Syntax 3, see Example 2) the search range is unlimited",
              "snippet": "nearestObject ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "description": "Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\n\n\u24d8\nin OFP, only objects of the exact provided class are found.\nif an object ID is used (Alternative Syntax 3, see Example 2) the search range is unlimited",
              "snippet": "nearestObject ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "description": "Returns the nearest object of given type (or inherited classes) to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\n\n\u24d8\nin OFP, only objects of the exact provided class are found.\nif an object ID is used (Alternative Syntax 3, see Example 2) the search range is unlimited",
              "snippet": "nearestObject ${2:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObjects",
              "description": "Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. Alternatively, you can use nearObjects command, which doesn't sort results.\n\nA list of ClassName types (e.g Tank) can be found in CfgVehicles.\n\n\u26a0This command matches objects using isKindOf comparison instead of direct class name == comparison. As a result, if a class type is a parent, the search will return all objects that inherit from the parent as well as parent itself. This command also only finds objects that are entities. If you are looking for non-entity objects, see nearObjects, nearestObject.",
              "snippet": "nearestObjects ${1:[${2:position}, ${3:types}, ${4:radius}, 2Dmode]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestTerrainObjects",
              "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). \nIn contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.\nPossible type names:\"TREE\", \"SMALL TREE\", \"BUSH\", \"BUILDING\", \"HOUSE\", \"FOREST BORDER\", \"FOREST TRIANGLE\", \"FOREST SQUARE\", \"CHURCH\", \"CHAPEL\", \"CROSS\", \"BUNKER\", \"FORTRESS\", \"FOUNTAIN\", \"VIEW-TOWER\", \"LIGHTHOUSE\", \"QUAY\", \"FUELSTATION\", \"HOSPITAL\", \"FENCE\", \"WALL\", \"HIDE\", \"BUSSTOP\", \"ROAD\", \"FOREST\", \"TRANSMITTER\", \"STACK\", \"RUIN\", \"TOURISM\", \"WATERTOWER\", \"TRACK\", \"MAIN ROAD\", \"ROCK\", \"ROCKS\", \"POWER LINES\", \"RAILWAY\", \"POWERSOLAR\", \"POWERWAVE\", \"POWERWIND\", \"SHIPWRECK\", \"TRAIL\"\n\nSince Arma 3 v1.61.136035 it is possible to switch the sorting algorithm off by providing optional param, which significantly increases the performance of this command, especially if the search is performed with large radius.\n\nSince Arma 3 v1.65.138818 it is possible to switch search and sorting mode between 2D and 3D.\n\nSince Arma 3 v1.99.146404 this command also returns missing roads: \"ROAD\", \"MAIN ROAD\", \"TRACK\", \"TRAIL\" \n\n\nTerrain object counts\n\n\n\u24d8Types which are missing are not present in the given world. Virtual Reality has no terrain objects. Last updated 1.99\nStratis\n\n\nBUSH: 47974\nCHAPEL: 2\nCROSS: 1\nFENCE: 1728\nFUELSTATION: 3\nHIDE: 70975\nHOUSE: 684\nLIGHTHOUSE: 3\nROAD: 143\nROCK: 820\nSHIPWRECK: 11\nTRACK: 2063\nTRANSMITTER: 11\nTREE: 40110\nWALL: 1355\nWATERTOWER: 1\n\nAltis\n\n\nBUSH: 747193\nCHAPEL: 165\nCHURCH: 54\nCROSS: 48\nFENCE: 47940\nFUELSTATION: 32\nHIDE: 655958\nHOSPITAL: 1\nHOUSE: 17472\nLIGHTHOUSE: 7\nMAIN ROAD: 2061\nPOWER LINES: 2224\nPOWERSOLAR: 10\nPOWERWAVE: 51\nPOWERWIND: 128\nROAD: 4849\nROCK: 5483\nRUIN: 3\nSHIPWRECK: 43\nTOURISM: 1\nTRACK: 26823\nTRANSMITTER: 23\nTREE: 263630\nWALL: 38943\nWATERTOWER: 10\n\nMalden 2035\n\n\nBUSH: 288461\nBUSSTOP: 45\nCHAPEL: 14\nCHURCH: 14\nCROSS: 16\nFENCE: 11189\nFUELSTATION: 24\nHIDE: 192553\nHOUSE: 4062\nLIGHTHOUSE: 15\nMAIN ROAD: 1050\nPOWER LINES: 3427\nPOWERSOLAR: 1\nROAD: 1442\nROCK: 3513\nSHIPWRECK: 23\nTRACK: 3489\nTRANSMITTER: 7\nTREE: 101960\nWALL: 14189\nWATERTOWER: 63\n\nTanoa\n\n\nBUSH: 754347\nCHURCH: 21\nFENCE: 2912\nFUELSTATION: 85\nHIDE: 356904\nHOUSE: 13389\nMAIN ROAD: 2921\nPOWER LINES: 3985\nPOWERSOLAR: 2\nPOWERWIND: 19\nRAILWAY: 2138\nROAD: 1485\nROCK: 8909\nSHIPWRECK: 58\nTOURISM: 35\nTRACK: 9419\nTRAIL: 6936\nTRANSMITTER: 16\nTREE: 506993\nWALL: 20526\nWATERTOWER: 73\n\nLivonia\n\n\nBUILDING: 1262\nBUNKER: 40\nBUSH: 473543\nBUSSTOP: 73\nCHAPEL: 8\nCHURCH: 17\nFENCE: 48426\nFOUNTAIN: 36\nFUELSTATION: 7\nHIDE: 474123\nHOUSE: 6762\nMAIN ROAD: 2118\nPOWER LINES: 2671\nPOWERSOLAR: 2\nPOWERWIND: 1\nRAILWAY: 843\nROAD: 5378\nROCK: 744\nSHIPWRECK: 4\nSTACK: 11\nTRACK: 12834\nTRANSMITTER: 15\nTREE: 1881630\nVIEW-TOWER: 239\nWALL: 4418\nWATERTOWER: 7\n\nWeferlingen\n\n\nBUILDING: 5072\nBUSH: 731315\nBUSSTOP: 106\nCHAPEL: 13\nCHURCH: 21\nFENCE: 83908\nFUELSTATION: 9\nHIDE: 231818\nHOUSE: 4562\nMAIN ROAD: 1535\nPOWER LINES: 1958\nRAILWAY: 2324\nROAD: 8740\nSTACK: 18\nTRACK: 24372\nTRANSMITTER: 1\nTREE: 829449\nVIEW-TOWER: 34\n\nWeferlingen (Winter)\n\n\nBUILDING: 5072\nBUSH: 519827\nBUSSTOP: 106\nCHAPEL: 13\nCHURCH: 21\nFENCE: 83908\nFUELSTATION: 9\nHIDE: 229792\nHOUSE: 4562\nMAIN ROAD: 1535\nPOWER LINES: 1958\nRAILWAY: 2324\nROAD: 8740\nSTACK: 18\nTRACK: 24372\nTRANSMITTER: 1\nTREE: 829449\nVIEW-TOWER: 34\n\n[] spawn\n{\n  private _types = [\"TREE\", \"SMALL TREE\", \"BUSH\", \"BUILDING\", \"HOUSE\", \"FOREST BORDER\", \"FOREST TRIANGLE\", \"FOREST SQUARE\", \"CHURCH\", \"CHAPEL\",\n  \"CROSS\", \"BUNKER\", \"FORTRESS\", \"FOUNTAIN\", \"VIEW-TOWER\", \"LIGHTHOUSE\", \"QUAY\", \"FUELSTATION\", \"HOSPITAL\", \"FENCE\", \"WALL\", \"HIDE\", \"BUSSTOP\",\n  \"ROAD\", \"FOREST\", \"TRANSMITTER\", \"STACK\", \"RUIN\", \"TOURISM\", \"WATERTOWER\", \"TRACK\", \"MAIN ROAD\", \"ROCK\", \"ROCKS\", \"POWER LINES\", \"RAILWAY\",\n  \"POWERSOLAR\", \"POWERWAVE\", \"POWERWIND\", \"SHIPWRECK\", \"TRAIL\"];\n\n  _types sort true;\n\n  private _counts = [];\n  private _countTypes = count _types;\n\n  [\"R3vo_GetNearestTerrainObjects\",\"\"] call BIS_fnc_startLoadingScreen;\n\n  {\n    private _terrainObjects = nearestTerrainObjects\n    [\n      [worldSize / 2, worldSize / 2],\n      [_x],\n      worldSize,\n      false\n    ];\n\n    if (count _terrainObjects > 0) then\n    {\n      _counts pushBack [_x,count _terrainObjects];\n    };\n    ((_forEachIndex + 1) / _countTypes) call BIS_fnc_progressLoadingScreen;\n  } forEach _types;\n\n\n  \"R3vo_GetNearestTerrainObjects\" call BIS_fnc_endLoadingScreen;\n\n  private _export = \"<big>[[\" + getText (configFile >> \"CfgWorlds\" >> worldName >> \"description\") + \"]]</big>\" + endl + '<div style=\"columns: 5\">';\n\n  {\n    _export = _export + endl + \"* \" + (_x # 0) + \": \" + (str (_x # 1));\n  } forEach _counts;\n\n  _export = _export + endl + \"</div>\";\n\n  copyToClipboard _export;\n};\n\n\n<!--\nTransclusion expansion time report (%,ms,calls,template)\n100.00%   40.920      1 -total\n100.00%   40.920      1 Template:Informative\n\n94.71%   38.754      1 Template:Messagebox\n89.25%   36.522      2 Template:Trim\n85.53%   34.999      1 Template:GVI\n53.39%   21.848      5 Template:Name\n31.47%   12.878      2 Template:GVI/intro\n22.71%    9.293      2 Template:GVI/branch\n10.82%    4.426      3 Template:GVI/version\n\n-->",
              "snippet": "nearestTerrainObjects [${1:position}, ${2:types}, ${3:radius}, ${4:sort}, ${5:2Dmode}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjects",
              "description": "Find objects (Units, Vehicles, Dead, Map Objects) in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.",
              "snippet": "nearObjects ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjects",
              "description": "Find objects (Units, Vehicles, Dead, Map Objects) in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.",
              "snippet": "nearObjects ${2:[${3:typeName}, ${4:radius}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = position ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjectsReady",
              "description": "Check whether all data are loaded to nearObjects will return in reasonable time.",
              "snippet": "nearObjectsReady ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = pos ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearRoads",
              "description": "Find the road segments within the circle of given radius.",
              "snippet": "nearRoads ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = origin ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearSupplies",
              "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.",
              "snippet": "nearSupplies ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position, Side, Object) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearTargets",
              "description": "Returns a list of targets within the defined range. \"Targets\" are not restricted to enemy units.",
              "snippet": "nearTargets ${${5:2}:range}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/needReload",
              "description": "Return how much vehicle wants to reload its weapons.",
              "snippet": "needReload ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/netId",
              "description": "Unique ID of object or group.  As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar",
              "snippet": "netId ${1:var}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/netObjNull",
              "description": "A non-existing network object. \u24d8NetObject data type was never implemented in Arma 3 - this command always returns false.",
              "text": "netObjNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/newOverlay",
              "description": "Creates the new overlay dialog for the specified type of overlay. \n\u24d8Some Old Editor Command",
              "snippet": "newOverlay ${2:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nextMenuItemIndex",
              "description": "Returns the next available menu item index.\n\u24d8Some Old Editor Command",
              "snippet": "nextMenuItemIndex ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nextWeatherChange",
              "description": "Return the remaining time (in seconds) over which the current weather change will occur.\n\nWhen a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes).",
              "text": "nextWeatherChange"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nil",
              "description": "Nil value. This value can be used to undefine existing variables.",
              "text": "nil"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nMenuItems",
              "description": "Returns the total number of user-added menu items belonging to the given menu.\n\u24d8Some Old Editor Command",
              "snippet": "nMenuItems ${2:menuName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nMenuItems",
              "description": "Returns the total number of user-added menu items belonging to the given menu.\n\u24d8Some Old Editor Command",
              "snippet": "nMenuItems ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/not",
              "description": "not a is exactly the same as !a",
              "snippet": "not ${1:a}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/numberOfEnginesRTD",
              "description": "Returns the number of engines a helicopter has. For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "numberOfEnginesRTD ${1:helicopterRTD}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/numberToDate",
              "description": "Convert float number to a date.",
              "snippet": "numberToDate ${1:[year,time]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/object",
              "description": "Return Object with given id. Object ID's can be checked in mission editor.\n\nThis command is not in Arma 3. Use nearestObject command family instead.",
              "snippet": "object ${1:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectCurators",
              "description": "Returns array with all curators which can edit given object.",
              "snippet": "objectCurators ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectFromNetId",
              "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.",
              "snippet": "objectFromNetId ${1:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectParent",
              "description": "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.\nAnother good use of objectParent is when a static weapon is known and one needs to check if it is assembled or not. objectParent _staticWeapon will return objNull if weapon is unpacked, or backpack object if packed.\n\n\n\u24d8When used on a soldier, if the soldier is in a vehicle, this command will return soldier's vehicle. Apart from being faster than vehicle command, it is also more reliable, as when used on dead crew inside a vehicle, it returns the vehicle object, where as vehicle command may surprisingly return unit object instead. For example, to delete a unit which is in a vehicle, execute:\nobjectParent _unit deleteVehicleCrew _unit;",
              "snippet": "objectParent ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objNull",
              "description": "A non-existent Object. To compare non-existent objects use isNull or isEqualTo:\nobjNull == objNull; // false\nisNull objNull; // true\nobjNull isEqualTo objNull; // true",
              "text": "objNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectivenumber ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objStatus",
              "description": "Sets the status of an objective that was defined in briefing.html.\n\nStatus may be one of:\n\"ACTIVE\"\n\"FAILED\"\n\"DONE\"\n\"HIDDEN\"\n\nTo refer to an objective that is named \"OBJ_1\", for example, use only the index number in this command (i.e. \"1\" objStatus \"HIDDEN\").",
              "snippet": "objStatus ${2:status}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingGear",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Gear tab is selected in the briefing.",
              "snippet": "onBriefingGear ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingGroup",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing.",
              "snippet": "onBriefingGroup ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingNotes",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing.",
              "snippet": "onBriefingNotes ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingPlan",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing.",
              "snippet": "onBriefingPlan ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingTeamSwitch",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing.",
              "snippet": "onBriefingTeamSwitch ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onCommandModeChanged",
              "description": "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command. Groups hc mode must contain at least one group for this command to work (see High Command). Attached code receives _isHighCommand boolean. \n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: CommandModeChanged",
              "snippet": "onCommandModeChanged ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onDoubleClick",
              "description": "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state\n\u24d8Some Old Editor Command",
              "snippet": "onDoubleClick ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onEachFrame",
              "description": "Runs given statement every frame.\nIn order to keep compatibility between official and community content:\nSince Arma 3 v1.57 a stackable version of this EH is available: EachFrame Mission Event Handler\nBefore that, the scripted version of the event handler should be used instead (using BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler).",
              "snippet": "onEachFrame ${1:statement}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconClick",
              "description": "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike onGroupIconOverEnter and onGroupIconOverLeave, has one more param which returns 1 if RMB was pressed, 0 otherwise. \n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconClick",
              "snippet": "onGroupIconClick ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconOverEnter",
              "description": "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon. \n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverEnter",
              "snippet": "onGroupIconOverEnter ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconOverLeave",
              "description": "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once. \n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverLeave",
              "snippet": "onGroupIconOverLeave ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onHCGroupSelectionChanged",
              "description": "Defines an action performed when high command group selection has been changed.\n\nCommand receives 2 variables:\n_group: Group - last selected/deselected group\n_isSelected: Boolean - new selection state of the specific group\n\nThe code is executed on every hc group selection change until it is\nremoved via onHCGroupSelectionChanged \"\"; or onHCGroupSelectionChanged {};\nor replaced by onHCGroupSelectionChanged \"SomeOtherCommand(s)\"; or onHCGroupSelectionChanged {SomeOtherCommand(s)};\n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: HCGroupSelectionChanged",
              "snippet": "onHCGroupSelectionChanged ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onMapSingleClick",
              "description": "Define action performed when user clicks in map by executing command string. The code is executed on every click, until the command is \nremoved via onMapSingleClick \"\", or\nreplaced by onMapSingleClick \"SomeOtherCommand(s)\"\n\nthe string receives 5 (localised in scope) variables:\n_this: Anything - Params passed to onMapSingleClick\n_pos: Array - Clicked position\n_units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)\n_shift: Boolean - Whether <Shift> was pressed when clicking on the map\n_alt: Boolean - Whether <Alt> was pressed when clicking on the map\n\nIn Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\n\nSince Arma 3 v1.57 a stackable MissionEventHandler is available and should be used instead: MapSingleClick.\nBefore that, the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead in order to keep compatibility between official and community content.",
              "snippet": "onMapSingleClick ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "params ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onMapSingleClick",
              "description": "Define action performed when user clicks in map by executing command string. The code is executed on every click, until the command is \nremoved via onMapSingleClick \"\", or\nreplaced by onMapSingleClick \"SomeOtherCommand(s)\"\n\nthe string receives 5 (localised in scope) variables:\n_this: Anything - Params passed to onMapSingleClick\n_pos: Array - Clicked position\n_units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)\n_shift: Boolean - Whether <Shift> was pressed when clicking on the map\n_alt: Boolean - Whether <Alt> was pressed when clicking on the map\n\nIn Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\n\nSince Arma 3 v1.57 a stackable MissionEventHandler is available and should be used instead: MapSingleClick.\nBefore that, the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead in order to keep compatibility between official and community content.",
              "snippet": "onMapSingleClick ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPlayerConnected",
              "description": "This command will execute attached code whenever a player is connected to a MP session. The code will receive a number of special variables:\n_id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n_uid: String - is getPlayerUID of the joining player. In Arma 3 it is also the same as Steam ID.\n_name: String - is profileName of the joining player.\n_jip: (since Arma 3 v1.49) Boolean - is a flag that indicates whether or not the player joined after the mission has started (Joined In Progress). true when the player is JIP, otherwise false.\n_owner: (since Arma 3 v1.49) Number - is owner id of the joining player. Can be used for kick or ban purposes or just for publicVariableClient.\n_idstr: (since Arma 3 v1.95) String - same as _id but in string format, so could be exactly compared to  user marker ids.\nSince Arma 3 v1.57 a stackable MissionEventHandler is available and should be used: PlayerConnected.\nBefore that, the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead in order to keep compatibility between official and community content.",
              "snippet": "onPlayerConnected ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPlayerDisconnected",
              "description": "This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:\n\n_id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n_uid: String - is getPlayerUID of the leaving player. In Arma 3 it is also the same as Steam ID.\n_name: String - is profileName of the leaving player.\n_jip: (since Arma 3 v1.49) Boolean - is a flag that indicated whether or not the player joined after the mission has started (Joined In Progress). true - if the player was JIP, otherwise false.\n_owner: (since Arma 3 v1.49) Number - is owner id of the leaving player. Can be used for kick or ban purposes or just for publicVariableClient.\n_idstr: (since Arma 3 v1.95) String - same as _id but in string format, so could be exactly compared to  user marker ids.\n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: PlayerDisconnected\nIn order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "snippet": "onPlayerDisconnected ${1:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPreloadFinished",
              "description": "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.\n\u26a0This event handler also fires on client after user closes the main map.\n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: PreloadFinished\nIn order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "snippet": "onPreloadFinished ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPreloadStarted",
              "description": "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.\n\u26a0This event handler also fires on client after user closes the main map.\n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: PreloadStarted\nIn order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "snippet": "onPreloadStarted ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onShowNewObject",
              "description": "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position, \n\u24d8Some Old Editor Command",
              "snippet": "onShowNewObject ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onTeamSwitch",
              "description": "Defines an action performed when the team switch is finished.\nCommandset receives the following special variables: _from object previous unit, _to object current unit.\nConsecutive use of onTeamSwitch command will overwrite previously set commandset. \n\u24d8Since Arma 3 v1.57 a stackable version of this EH is available: TeamSwitch\n\n\n\u24d8When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it (with\u00a0onTeamSwitch { _from enableAI \"TeamSwitch\" };) so that the unit continues with waypoints.",
              "snippet": "onTeamSwitch ${1:commandset}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openCuratorInterface",
              "description": "Force opens curator interface.",
              "text": "openCuratorInterface"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openDLCPage",
              "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)",
              "snippet": "openDLCPage ${1:dlcID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openDSInterface",
              "description": "Opens MP interface. \n\nThis command is not present in Arma 3.",
              "text": "openDSInterface"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openMap",
              "description": "Opens or closes in-game map.\n\u26a0If forced param is set to true, when map is opened it cannot be closed manually and the user can get stuck requiring the game restart. Make sure you provide scripted mechanics to resolve this, should you need to force the map.",
              "snippet": "openMap ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openMap",
              "description": "Opens or closes in-game map.\n\u26a0If forced param is set to true, when map is opened it cannot be closed manually and the user can get stuck requiring the game restart. Make sure you provide scripted mechanics to resolve this, should you need to force the map.",
              "snippet": "openMap [${1:show}, ${2:forced}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openSteamApp",
              "description": "Opens a Steam application, returns false if it wasn't possible to run the application.",
              "snippet": "openSteamApp ${1:appID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openYoutubeVideo",
              "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.",
              "snippet": "openYoutubeVideo ${1:youTubeUrl}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/opfor",
              "description": "Pre-defined variable for the opfor side.\n Alias for east.",
              "text": "opfor"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/or",
              "description": "Returns true if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\n\u24d8Identical to a || b.",
              "snippet": "or ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = a ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/or",
              "description": "Returns true if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\n\u24d8Identical to a || b.",
              "snippet": "or ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitArray ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/orderGetIn",
              "description": "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.\n\nNotes:\nThe command has no affect on AI lead by a player Group Leader (GL)\nA vehicle needs be assigned via addVehicle or assignAsXXX or moveInXXX first for the command to have any effect. orderGetIn true makes the AI to board the vehicle. Or the AI GL orders them due to other means (ie getIn, guard waypoints).\nHowever one can initially set orderGetIn false, add one or more vehicles and only once/when the AI is to enter, you set orderGetIn true  for AI to start moving to the vehicle(s) or getting in the vehicle(s).\norderGetIn false makes AI also leave a vehicle when inside already. However it does not affect assignedVehicleRole nor assignedVehicle. Only leaveVehicle will remove both\norderGetIn false even makes AI eject while the vehicle positions are locked ((lockDriver, lockTurret, lockCargo - however orderGetIn true will not override the position lock to make them enter\nAI units on the way to enter the vehicle won't stop on the way if orderGetIn false set but continue to the vehicle and just stop short without entering - allowGetIn false instead will make the AI stop instantly (same as unassignVehicle when combined with orderGetIn false)\nOne can combine orderGetIn false and allowGetIn false to manage when exactly AI is to enter vehicles\norderGetIn is persistent/a general group behavior setting - don't forget previous changes with future vehicle use!\nIf you want to make a vehicle no longer used by a group, you need to remove the vehicle from the group's vehicle pool via leaveVehicle.",
              "snippet": "orderGetIn ${2:order}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/overcast",
              "description": "Return the current overcast level. Zero is clear skies, one is maximum cloud cover.",
              "text": "overcast"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/overcastForecast",
              "description": "Return the overcast forecast.",
              "text": "overcastForecast"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/owner",
              "description": "On server machine, returns the  machine network ID of the client to which the object is local. Otherwise returns 0. For use on clients clientOwner command is available. To find out the owner of a Group, use groupOwner.",
              "snippet": "owner ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/param",
              "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param.  When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "snippet": "param ${1:[${2:index}, ${3:defaultValue}, ${4:expectedDataTypes}, ${5:expectedArrayCount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = argument ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/param",
              "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param.  When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "snippet": "param ${2:[${3:index}, ${4:defaultValue}, ${5:expectedDataTypes}, ${6:expectedArrayCount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/params",
              "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.\n\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.\n\n\u26a0All variables names must start with underscore and be enclosed in quotes: params [\"_myVar1\", \"_myVar2\"];\n\u24d8It is a good practice to make your local variables private (through private or params) in order to avoid overwriting a local variable of the same name.",
              "snippet": "params ${1:[element1, element2,...${2:elementN}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = argument ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/params",
              "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.\n\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.\n\n\u26a0All variables names must start with underscore and be enclosed in quotes: params [\"_myVar1\", \"_myVar2\"];\n\u24d8It is a good practice to make your local variables private (through private or params) in order to avoid overwriting a local variable of the same name.",
              "snippet": "params ${2:[element1, element2,...${3:elementN}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseNumber",
              "description": "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.",
              "snippet": "parseNumber ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseNumber",
              "description": "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.",
              "snippet": "parseNumber ${1:boolean}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseSimpleArray",
              "description": "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For example: [1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly. This command is almost 4x faster than similar uncached call compile method. And because call compile is not required, it is also more secure and primarily intended for use with callExtension to parse the String output into Array. Since Arma 3 v.1.95.145925 the command will tolerate extra spaces and supports single quotes. The only recognised keywords (case insensitive) are:\ntrue - translates into true\nfalse - translates into false\nnil - translates into nil\nnull - translates into nil\n<null> - translates into nil\nany - translates into nil",
              "snippet": "parseSimpleArray ${1:stringArray}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseText",
              "description": "Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from Stringtable.xml.\nA detailed explanation of all formatting possibilities can be found at Structured Text.",
              "snippet": "parseText ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parsingNamespace",
              "description": "Returns the global namespace attached to config parser.",
              "text": "parsingNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/particlesQuality",
              "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high",
              "text": "particlesQuality"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/periscopeElevation",
              "description": "Returns current periscope elevation value, see also elevatePeriscope.",
              "snippet": "periscopeElevation ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pi",
              "description": "pi (180 degrees converted to Radians).",
              "text": "pi"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pickWeaponPool",
              "description": "Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission).",
              "snippet": "pickWeaponPool ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pitch",
              "description": "Returns the pitch of a persons voice.",
              "snippet": "pitch ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGrid",
              "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.",
              "text": "pixelGrid"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGridBase",
              "description": "Returns grid size based on screen resolution.",
              "text": "pixelGridBase"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGridNoUIScale",
              "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids \n\nAs mentioned in the name of this command, the user interface scale is ignored.",
              "text": "pixelGridNoUIScale"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelH",
              "description": "Returns the height of one pixel for current resolution.",
              "text": "pixelH"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelW",
              "description": "Returns width of one pixel for current resolution.",
              "text": "pixelW"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playableSlotsNumber",
              "description": "Returns the number of available slots in mission per side (both empty and taken). In singleplayer mission, it returns number of playable units per side.",
              "snippet": "playableSlotsNumber ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playableUnits",
              "description": "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east/opfor, west/blufor, resistance/independent and civilian only. Does not contain units of sideLogic.\n\u24d8This command returns an empty array in Singleplayer; use switchableUnits instead.\n\u26a0This command does not include dead players awaiting for respawn.",
              "text": "playableUnits"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playAction",
              "description": "When used on a person, a smooth transition to the given action will be initiated.\n\nFor Arma 3 actions see: playAction/actions.",
              "snippet": "playAction ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playActionNow",
              "description": "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.\n\nFor Arma 3 actions see: playAction/actions.",
              "snippet": "playActionNow ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/player",
              "description": "A person object controlled by user. In Intros and Outros this isn't set by default and must be assigned.\nIn MP player is different on each computer and on dedicated server it is objNull by default (however this doesn't mean there couldn't be one). When user is joining dedicated server mission, at the moment of onPlayerConnected the player object is remote to the joining client, as the player unit is created on the server, but once control of the unit is passed to the user moments later, the player objects becomes local to the client and stays local.\n\nSee Multiplayer Scripting's player topic for additional helpful information.",
              "text": "player"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playerRespawnTime",
              "description": "Return the player's remaining time before respawn, or -1 if it is not available (such as when the player is alive).",
              "text": "playerRespawnTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playerSide",
              "description": "Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player).\n\u24d8playerSide will not change automatically if player joins a group on different side. However, selectPlayer command can and does change playerSide - see Example 3 for information.",
              "text": "playerSide"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playersNumber",
              "description": "Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but didn't start the mission are counted as well. If disabledAI = 0; in description.ext or Enable AI option is checked in 3DEN, AI bots will be treated as valid players and will be counted too. Multiplayer only, in singleplayer always returns 0.",
              "snippet": "playersNumber ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playGesture",
              "description": "When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional",
              "snippet": "playGesture ${2:moveName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMission",
              "description": "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.",
              "snippet": "playMission [${1:campaign}, ${2:mission}, skipBriefing]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMove",
              "description": "When used on a person, smooth transition to given move will be done.\nThe difference between playMove and playMoveNow is that playMove adds another move to the move queue, while playMoveNow replaces the whole move queue with new move (see Example 2).\n\u24d8see Category:Moves for respective games animations.",
              "snippet": "playMove ${2:moveName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMoveNow",
              "description": "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. \nThe difference between playMove and playMoveNow is that playMove adds another move to the move queue, while playMoveNow replaces the whole move queue with new move (see Example 2).\n\u24d8see Category:Moves for respective games animations.",
              "snippet": "playMoveNow ${2:moveName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMusic",
              "description": "Plays music defined in Description.ext's CfgMusic or config.cpp.\nArma 3 CfgMusic\nArma 2: Music\nArma: cfgMusic\n\n\u24d8To stop the music, use playMusic \"\".\nSee Arma 3 CfgMusic for possible vanilla values. Since Arma 3 v1.67 one can use the Jukebox Utility to preview in-game music.",
              "snippet": "playMusic ${1:musicName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMusic",
              "description": "Plays music defined in Description.ext's CfgMusic or config.cpp.\nArma 3 CfgMusic\nArma 2: Music\nArma: cfgMusic\n\n\u24d8To stop the music, use playMusic \"\".\nSee Arma 3 CfgMusic for possible vanilla values. Since Arma 3 v1.67 one can use the Jukebox Utility to preview in-game music.",
              "snippet": "playMusic [${1:musicName}, ${2:start}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playScriptedMission",
              "description": "Load the given world, launch an empty mission and execute the given, expression. Config (optional) can reference to the config entry, replacing description.ext for this mission.",
              "snippet": "playScriptedMission ${1:[${2:world},${3:expression},${4:config},${5:ignoreChildWindow}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound",
              "description": "Plays a sound from CfgSounds. Sound can be defined in missionConfigFile, configFile or campaignConfigFile.",
              "snippet": "playSound ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound",
              "description": "Plays a sound from CfgSounds. Sound can be defined in missionConfigFile, configFile or campaignConfigFile.",
              "snippet": "playSound [${2:soundName}, ${3:isSpeech}, offset]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound3D",
              "description": "Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.\n\u26a0Since A3 v1.91.145537 the maximum volume allowed is 5. Exceeding this will result in sound not being played when executed remotely.",
              "snippet": "playSound3D [${1:filename}, ${2:soundSource}, ${3:isInside}, ${4:soundPosition}, ${5:volume}, ${6:soundPitch}, ${7:distance}, offset]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/position",
              "description": "Returns position of an object (alias of getPos) or location (alias of locationPosition).",
              "snippet": "position ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/position",
              "description": "Returns position of an object (alias of getPos) or location (alias of locationPosition).",
              "snippet": "position ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/posScreenToWorld",
              "description": "Converts map screen coordinates into world coordinates. Unlike ctrlMapScreenToWorld, this command returns world position is format [x, y, 0], otherwise it is identical to ctrlMapScreenToWorld.",
              "snippet": "posScreenToWorld ${2:[${3:x}, ${4:y}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/positionCameraToWorld",
              "description": "Transforms position from camera coordinate space to world coordinate space. \nCamera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking.",
              "snippet": "positionCameraToWorld ${1:cameraPos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/posWorldToScreen",
              "description": "Converts world coordinates into map screen coordinates. This command is identical to ctrlMapWorldToScreen.",
              "snippet": "posWorldToScreen ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "effect ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectAdjust",
              "description": "Set post process effect parameters.\n\n\u24d8The two syntaxes differ in what format of the params they accept. The syntax with PP name expects colors to be packed into arrays within main array, while the syntax with PP handle can handle both flat and packed array. Therefore it is recommended to use the universal packed format, such as shown in the examples.",
              "snippet": "ppEffectAdjust ${2:settings}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "handle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectAdjust",
              "description": "Set post process effect parameters.\n\n\u24d8The two syntaxes differ in what format of the params they accept. The syntax with PP name expects colors to be packed into arrays within main array, while the syntax with PP handle can handle both flat and packed array. Therefore it is recommended to use the universal packed format, such as shown in the examples.",
              "snippet": "ppEffectAdjust ${2:settings}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "effect ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "description": "Commit post process effect in given time.",
              "snippet": "ppEffectCommit ${2:commit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "handle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "description": "Commit post process effect in given time.",
              "snippet": "ppEffectCommit ${2:commit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "description": "Commit post process effect in given time.",
              "text": "handles"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommitted",
              "description": "Check whether given post process effect is committed",
              "snippet": "ppEffectCommitted ${1:effect}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommitted",
              "description": "Check whether given post process effect is committed",
              "snippet": "ppEffectCommitted ${1:handle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCreate",
              "description": "Creates Post process effects specified by effect name and priority. Supported effects are:\n\n\"RadialBlur\"\n\"ChromAberration\"\n\"WetDistortion\"\n\"ColorCorrections\"\n\"DynamicBlur\"\n\"FilmGrain\"\n\"ColorInversion\"",
              "snippet": "ppEffectCreate ${1:[${2:name}, ${3:priority}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Number, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCreate",
              "description": "Creates Post process effects specified by effect name and priority. Supported effects are:\n\n\"RadialBlur\"\n\"ChromAberration\"\n\"WetDistortion\"\n\"ColorCorrections\"\n\"DynamicBlur\"\n\"FilmGrain\"\n\"ColorInversion\"",
              "snippet": "ppEffectCreate [${1:[name1, priority1]},...]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectDestroy",
              "description": "Destroy Post process effects given by handle or array of handles.",
              "snippet": "ppEffectDestroy ${1:effect}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectDestroy",
              "description": "Destroy Post process effects given by handle or array of handles.",
              "snippet": "ppEffectDestroy ${1:[${2:effect1},...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "effect ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "description": "Enable / disable Post process effects",
              "snippet": "ppEffectEnable ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "effect ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "description": "Enable / disable Post process effects",
              "snippet": "ppEffectEnable ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "effectArray ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "description": "Enable / disable Post process effects",
              "snippet": "ppEffectEnable ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnabled",
              "description": "Checks whether given post process effect is enabled",
              "snippet": "ppEffectEnabled ${1:effect}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "number ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectForceInNVG",
              "description": "Forces use of Post process effects in NVG.",
              "snippet": "ppEffectForceInNVG ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/precision",
              "description": "Return the precision of the given entity, how is the entity able to be precise when moving to given target.",
              "snippet": "precision ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadCamera",
              "description": "Preload all textures and models around given Position to avoid visual artifacts after camera is moved.\n\nShould be used before any abrupt camera change/cut.\n\nReturns true once all data is ready. See camPreload for alternative, more flexible camera preloading.",
              "snippet": "preloadCamera ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = distance ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadObject",
              "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.\n\u26a0At least one object of the given classname has to be present in the current mission in order for alternative syntax version of the command to have any effect",
              "snippet": "preloadObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = distance ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadObject",
              "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.\n\u26a0At least one object of the given classname has to be present in the current mission in order for alternative syntax version of the command to have any effect",
              "snippet": "preloadObject ${2:classname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadSound",
              "description": "Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.",
              "snippet": "preloadSound ${1:soundName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleObj",
              "description": "Preloads data for the given resource object.",
              "snippet": "preloadTitleObj ${1:[${2:name}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleRsc",
              "description": "Resource title - Preload data.\n\nThe resource can be defined in the Description.ext file.",
              "snippet": "preloadTitleRsc ${1:[${2:name}, ${3:type}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleRsc",
              "description": "Resource title - Preload data.\n\nThe resource can be defined in the Description.ext file.",
              "snippet": "preloadTitleRsc ${1:[${2:name}, ${3:type}, speed, ${5:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preprocessFile",
              "description": "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and PreProcessor Commands.Due to the hard-drive access this command executes (and the lack of caching) this command should not be used in time-critical script loops. \n\u26a0If the file you are loading is not prepared using UTF-8 encoding and contains some characters  with codes > 127, they might convert incorrectly",
              "snippet": "preprocessFile ${1:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preprocessFileLineNumbers",
              "description": "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using /* */ and PreProcessor_Commands. The preprocessor also adds a default debug entrypoint for compiler at the begining of script: #line 1 \"aFilename\"\n\nThe #line keyword can be used in any script that are not preprocess, or with preprocess script with extra macro to protect reserverd sharp character. The format is:\n#line <number> \"<name>\"\nfollowed by new line. <number> could be only positive integer and <name> could be any name. This will be used only if an error occurs in the script. The error will contain the line:\nFile <filename>, line <linenumber>\nwhere <filename> will be the <name> you set and <linenumber> will be <number> + how many lines it is from the #line line. If the error happened on the line right under #line it will add 0 to <number>, if on second line, it will add 1 etc.\nIt is possible to use more than one #line keywords, but it seems having just one at the top for little script is enough to pinpoint position of the error easily. \n\n\u26a0If the file you are loading is not prepared using UTF-8 encoding and contains some characters  with codes > 127, they might convert incorrectly",
              "snippet": "preprocessFileLineNumbers ${1:fileName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeapon",
              "description": "Returns name of unit's primary weapon (empty string if none).",
              "snippet": "primaryWeapon ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeaponItems",
              "description": "Returns array with all items assigned to the primaryWeapon except magazines. Use primaryWeaponMagazine command for the latter. This command is used for infantry weapons only.",
              "snippet": "primaryWeaponItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeaponMagazine",
              "description": "Collects all loaded magazines from all primaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
              "snippet": "primaryWeaponMagazine ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/priority",
              "description": "Return the priority of the task.",
              "snippet": "priority ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. See also param and params.\n\u24d8private variables must start with an underscore: private _myVar1 = \"myVar\"; - see Identifier.\n\u26a0Always make your local variables private (through private or params) in order to avoid overwriting a local variable of the same name.",
              "snippet": "private ${1:variableName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. See also param and params.\n\u24d8private variables must start with an underscore: private _myVar1 = \"myVar\"; - see Identifier.\n\u26a0Always make your local variables private (through private or params) in order to avoid overwriting a local variable of the same name.",
              "snippet": "private ${1:variableNameList}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. See also param and params.\n\u24d8private variables must start with an underscore: private _myVar1 = \"myVar\"; - see Identifier.\n\u26a0Always make your local variables private (through private or params) in order to avoid overwriting a local variable of the same name.",
              "text": "private"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/processDiaryLink",
              "description": "Open the diary screen on the record specified by link.",
              "snippet": "processDiaryLink ${1:link}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/processInitCommands",
              "description": "Process statements stored using setVehicleInit. The statements will only be executed once even if processInitCommands is called multiple times.\n\nFor security reasons, the command was disabled in Arma 3.\nFor remote execution, see Arma 3 Remote Execution, remoteExec and remoteExecCall.",
              "text": "processInitCommands"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Number, Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/productVersion",
              "description": "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.",
              "text": "productVersion"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileName",
              "description": "Returns currently chosen user profile name. For Steam profile name see profileNameSteam.",
              "text": "profileName"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileNamespace",
              "description": "Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace. A variable can be deleted by setting its value to nil. By default the variables set in this namespace will exist while the game is running. In order to make variables save permanently, use saveProfileNamespace before the game is over.\nThe variables are stored next to the user profile in a file named myUsername.vars.GAMENAME (e.g. in the My Documents\\Take On Helicopters folder).",
              "text": "profileNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileNameSteam",
              "description": "Returns name of the current Steam profile. For currently chosen user profile name see profileName",
              "text": "profileNameSteam"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressLoadingScreen",
              "description": "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])",
              "snippet": "progressLoadingScreen ${1:progress}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressPosition",
              "description": "Returns the current position in the progress bar.",
              "snippet": "progressPosition ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressSetPosition",
              "description": "Sets progress position of the progress bar (DialogControls-ProgressBar)",
              "snippet": "progressSetPosition ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariable",
              "description": "Reliably broadcasts missionNamespace variable and its current value to all computers (server/client).\nVariables broadcast with publicVariable during a mission will be available to JIP clients with the value they held at the time.\nSuch variables are persistent and sent to the JIP client before the first batch of client-side Event Scripts (such as init.sqf) is run.\n\u26a0Using publicVariable too frequently and/or with a lot of data can cause other aspects of the game to experience bandwidth problems.\n\nThe following Data Types are supported:\n\n\n\nType\n\nNumber\n\nBoolean\n\nObject\n\nGroup\n\nString\n\nText\n\nArray\n\nCode\n\nNothing (nil)\n\n\nSince\n\n\n\n1.34\n\n1.34\n\n1.34\n\n1.00\n\n1.00\n\n1.09\n\n1.09\n\n1.26\n\n\u26a0It is not possible (and illogical) to transfer a local entity reference, such as scripts, displays or local objects.\nAlso, note that Team Member is not supported.",
              "snippet": "publicVariable ${1:varName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "clientID ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariableClient",
              "description": "Send the variable value to the client computer - same limitations regarding variable type as publicVariable.\n\nThe Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).\n\nIn Arma 3 it is possible to broadcast nil value",
              "snippet": "publicVariableClient ${2:varName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariableServer",
              "description": "Send the variable value to the server - same limitations regarding variable type as publicVariable. \nIn Arma 3 it is possible to broadcast nil value",
              "snippet": "publicVariableServer ${1:varName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pushBack",
              "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)",
              "snippet": "pushBack ${2:element}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pushBackUnique",
              "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.\n\u24d8Adding string elements is case sensitive.",
              "snippet": "pushBackUnique ${2:element}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/putWeaponPool",
              "description": "Transfer weapons and magazines from weapon pool into cargo of given object. Used in campaign to transfer weapons into next mission.",
              "snippet": "putWeaponPool ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryItemsPool",
              "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).",
              "snippet": "queryItemsPool ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryMagazinePool",
              "description": "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).",
              "snippet": "queryMagazinePool ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryWeaponPool",
              "description": "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).",
              "snippet": "queryWeaponPool ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rad",
              "description": "Converts given value in degrees to radians. 1 radian equals 180 degrees divided by pi.",
              "snippet": "rad ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "index ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelAdd",
              "description": "Add the units to the custom radio channel.",
              "snippet": "radioChannelAdd ${2:units}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelCreate",
              "description": "Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see getPlayerChannel). The command will find an unused index in this range and create it when found.",
              "snippet": "radioChannelCreate [${1:color}, ${2:label}, ${3:callSign}, ${4:units}, ${5:sentenceType}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelInfo",
              "description": "Obtains custom radio channel's details, set by radioChannelCreate.",
              "snippet": "radioChannelInfo ${1:channelId}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "index ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelRemove",
              "description": "Remove the units from the custom radio channel.",
              "snippet": "radioChannelRemove ${2:units}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "index ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelSetCallSign",
              "description": "Set the custom radio channel's call sign. \n\nAvailable special parameters:\n$KEY (reference to a localized text)\n%CHANNEL_LABEL\n%UNIT_SIDE\n%UNIT_NAME\n%UNIT_RANK\n%UNIT_ID\n%UNIT_REF\n%UNIT_GRP_NAME\n%UNIT_GRP_LEADER\n%UNIT_VEH_NAME\n%UNIT_VEH_POSITION",
              "snippet": "radioChannelSetCallSign ${2:callSign}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "index ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelSetLabel",
              "description": "Set the custom radio channel's label.",
              "snippet": "radioChannelSetLabel ${2:label}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioVolume",
              "description": "Returns the current radio volume (set by fadeRadio).",
              "text": "radioVolume"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rain",
              "description": "Returns the current value of rain density in range 0..1",
              "text": "rain"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rainbow",
              "description": "Returns the current rainbow intensity.",
              "text": "rainbow"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\n\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing the definition of Gaussian Distribution[1] params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare (Alternative Syntax 1)\nSince Arma 3 v1.67.139663 two alternative syntaxes are available:\n\nallowing to generate semi-random number based on provided seed (Alternative Syntax 2)\ngenerating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates (Alternative Syntax 3)",
              "snippet": "random ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\n\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing the definition of Gaussian Distribution[1] params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare (Alternative Syntax 1)\nSince Arma 3 v1.67.139663 two alternative syntaxes are available:\n\nallowing to generate semi-random number based on provided seed (Alternative Syntax 2)\ngenerating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates (Alternative Syntax 3)",
              "snippet": "random ${1:[${2:min}, ${3:mid}, ${4:max}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = seed ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\n\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing the definition of Gaussian Distribution[1] params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare (Alternative Syntax 1)\nSince Arma 3 v1.67.139663 two alternative syntaxes are available:\n\nallowing to generate semi-random number based on provided seed (Alternative Syntax 2)\ngenerating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates (Alternative Syntax 3)",
              "snippet": "random ${2:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = seed ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\n\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing the definition of Gaussian Distribution[1] params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare (Alternative Syntax 1)\nSince Arma 3 v1.67.139663 two alternative syntaxes are available:\n\nallowing to generate semi-random number based on provided seed (Alternative Syntax 2)\ngenerating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates (Alternative Syntax 3)",
              "snippet": "random ${2:[${3:x}, ${4:y}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rank",
              "description": "Returns the rank of the given unit. Rank can be one of the following:\n\"PRIVATE\"\n\"CORPORAL\"\n\"SERGEANT\"\n\"LIEUTENANT\"\n\"CAPTAIN\"\n\"MAJOR\"\n\"COLONEL\"",
              "snippet": "rank ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rankId",
              "description": "Return the rank of the given unit for comparison.\n\nValue may be\u00a0:\n0 - Private\n1 - Corporal\n2 - Sergeant\n3 - Lieutenant\n4 - Captain\n5 - Major\n6 - Colonel",
              "snippet": "rankId ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rating",
              "description": "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer. \n\nThe rating of the player is displayed as the \"score\" at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.",
              "snippet": "rating ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rectangular",
              "description": "Checks if a location is rectangular (returns true) or elliptical (returns false).",
              "snippet": "rectangular ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/registeredTasks",
              "description": "Returns array with all registered task types for the given agent. The values are the names set in CfgTasks classes name property. The same names are used for unregisterTask",
              "snippet": "registeredTasks ${1:teamMember}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/registerTask",
              "description": "Registers a new task type. Parameters are defined in the given config class (subclass of CfgTasks)",
              "snippet": "registerTask ${2:entryName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reload",
              "description": "Reload all weapons",
              "snippet": "reload ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reloadEnabled",
              "description": "Check whether magazine is reloaded whenever emptied.",
              "snippet": "reloadEnabled ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "who ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteControl",
              "description": "Switches on remote control of the unit. Command needs to be executed locally to the player.\nIf driver is remote it will get transferred to players PC.\nThere is currently no getter command for remote control, but it is possible to use a trick described in Example 3.",
              "snippet": "remoteControl ${1:who}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, String) = params ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExec",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\nScripted function - scheduled environment (suspension is allowed, i.e. spawn, execVM).\nScript command - unscheduled environment (suspension is NOT allowed).\nremoteExec can also be used in SP (the same restrictions apply both to SP and MP).\nFor more information about the usage, security features and advanced JIP techniques check the Arma 3 Remote Execution dedicated section.\n\n\u24d8Direct execution of call or spawn via remoteExec or remoteExecCall should be avoided to prevent issues in cases where remote execution of call and spawn is blocked in CfgRemoteExec. Instead create a function which is then excecuted by remoteExec or remoteExecCall.",
              "snippet": "remoteExec ${2:[${3:functionName}, targets, JIP]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExec",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\nScripted function - scheduled environment (suspension is allowed, i.e. spawn, execVM).\nScript command - unscheduled environment (suspension is NOT allowed).\nremoteExec can also be used in SP (the same restrictions apply both to SP and MP).\nFor more information about the usage, security features and advanced JIP techniques check the Arma 3 Remote Execution dedicated section.\n\n\u24d8Direct execution of call or spawn via remoteExec or remoteExecCall should be avoided to prevent issues in cases where remote execution of call and spawn is blocked in CfgRemoteExec. Instead create a function which is then excecuted by remoteExec or remoteExecCall.",
              "snippet": "remoteExec ${1:[${2:functionName}, targets, JIP]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, String) = params ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExecCall",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\nScripted function - unscheduled environment (suspension is NOT allowed).\nScript command - unscheduled environment (suspension is NOT allowed).  \nremoteExecCall can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.\n\n\u26a0The Call part in remoteExecCall is a little confusing and doesn't mean that the execution of the remote executed function/command will happen right away, for example:\nremoteExecCall [\"func1\"]; call func2; // func2 can be executed sooner than func1\ncall func1; call func2; // func2 will always execute after func1\n\nIt just means that the execution of the function will be carried on in  unscheduled environment.\n\n\n\u24d8Direct execution of call or spawn via remoteExec or remoteExecCall should be avoided to prevent issues in cases where remote execution of call and spawn is blocked in CfgRemoteExec. Instead create a function which is then excecuted by remoteExec or remoteExecCall.",
              "snippet": "remoteExecCall ${2:[${3:functionName}, targets, JIP]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExecCall",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\nScripted function - unscheduled environment (suspension is NOT allowed).\nScript command - unscheduled environment (suspension is NOT allowed).  \nremoteExecCall can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.\n\n\u26a0The Call part in remoteExecCall is a little confusing and doesn't mean that the execution of the remote executed function/command will happen right away, for example:\nremoteExecCall [\"func1\"]; call func2; // func2 can be executed sooner than func1\ncall func1; call func2; // func2 will always execute after func1\n\nIt just means that the execution of the function will be carried on in  unscheduled environment.\n\n\n\u24d8Direct execution of call or spawn via remoteExec or remoteExecCall should be avoided to prevent issues in cases where remote execution of call and spawn is blocked in CfgRemoteExec. Instead create a function which is then excecuted by remoteExec or remoteExecCall.",
              "snippet": "remoteExecCall ${1:[${2:functionName}, targets, JIP]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExecutedOwner",
              "description": "Returns the  machine network ID of the client that initiated Remote Execution. If used in SP or outside of remote executed context, the command returns 0.\n\u24d8To check if the context is remote executed, use isRemoteExecuted or isRemoteExecutedJIP.",
              "text": "remoteExecutedOwner"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENConnection",
              "description": "Remove connection between entities.",
              "snippet": "remove3DENConnection [${1:type}, ${2:from}, ${3:to}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENEventHandler",
              "description": "Removes Eden Editor event handler of given type and ID.\n\nSee the list of all Eden Editor Event Handlers.",
              "snippet": "remove3DENEventHandler [${1:type},${2:id}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENLayer",
              "description": "Remove Eden Editor editing layer.",
              "snippet": "remove3DENLayer ${1:layerID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAction",
              "description": "Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload.\n\nThis command has local effect. The action will only be removed on the computer that executes the command.",
              "snippet": "removeAction ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAll3DENEventHandlers",
              "description": "Removes all Eden Editor event handlers of given type. \n\nSee the list of all Eden Editor Event Handlers.",
              "snippet": "removeAll3DENEventHandlers ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllActions",
              "description": "Removes all unit's user added actions.",
              "snippet": "removeAllActions ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllAssignedItems",
              "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear. Use removeGoggles and removeHeadgear for those.",
              "snippet": "removeAllAssignedItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllBinocularItems",
              "description": "Removes all items from binocular weapon, except magazine.",
              "snippet": "removeAllBinocularItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllContainers",
              "description": "Removes all containers from the unit.",
              "snippet": "removeAllContainers ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorAddons",
              "description": "Restrict access to all addons for given curator.",
              "snippet": "removeAllCuratorAddons ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorCameraAreas",
              "description": "Delete all curator camera areas.",
              "snippet": "removeAllCuratorCameraAreas ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorEditingAreas",
              "description": "Delete all curator edit areas.",
              "snippet": "removeAllCuratorEditingAreas ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllEventHandlers",
              "description": "Removes all event handlers of given type that were added by addEventHandler and resets event handler's creation index to 0.",
              "snippet": "removeAllEventHandlers ${2:handlerType}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllHandgunItems",
              "description": "Removes all items from handgunWeapon, except magazine.",
              "snippet": "removeAllHandgunItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllItems",
              "description": "Removes all special items from the unit.",
              "snippet": "removeAllItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllItemsWithMagazines",
              "description": "Removes all itemsWithMagazines from the uniform, vest and backpack. Command essentially clears all unit's containers.",
              "snippet": "removeAllItemsWithMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMissionEventHandlers",
              "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler.\n\n\u26a0This command also resets the Event Handler creation index to 0.",
              "snippet": "removeAllMissionEventHandlers ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMPEventHandlers",
              "description": "Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally.",
              "snippet": "removeAllMPEventHandlers ${2:event}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMusicEventHandlers",
              "description": "Removes all music track event handlers of given type.",
              "snippet": "removeAllMusicEventHandlers ${1:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllOwnedMines",
              "description": "Removes ownership of all owned mines/explosive devices of the given unit",
              "snippet": "removeAllOwnedMines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllPrimaryWeaponItems",
              "description": "Removes all items from primaryWeapon, except magazine.",
              "snippet": "removeAllPrimaryWeaponItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllSecondaryWeaponItems",
              "description": "Removes all items from secondaryWeapon, except magazine.",
              "snippet": "removeAllSecondaryWeaponItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllWeapons",
              "description": "Removes all weapons and magazines from the given unit. Does not remove map, compass, radio. You can use unitname removeWeapon \"itemMap\";\nfor example. Doesn't quite work with vehicles. If you need to remove all weapons from a vehicle, remove each weapon individually:\n{tank removeWeapon _x} forEach weapons tank;",
              "snippet": "removeAllWeapons ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeBackpack",
              "description": "Removes unit's backpack",
              "snippet": "removeBackpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeBackpackGlobal",
              "description": "Removes backpack from a unit. (even non-local)",
              "snippet": "removeBackpackGlobal ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeBinocularItem",
              "description": "Removes given weapon item, including magazine, from the binocular weapon.",
              "snippet": "removeBinocularItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeClothing",
              "description": "Removes specified named clothes selections from unit.",
              "snippet": "removeClothing ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorAddons",
              "description": "Restrict curator use of given addons.",
              "snippet": "removeCuratorAddons ${2:addons}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorCameraArea",
              "description": "Removes curator camera area.",
              "snippet": "removeCuratorCameraArea ${2:cameraAreaID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorEditableObjects",
              "description": "Unregister objects which can be edited by a curator.",
              "snippet": "removeCuratorEditableObjects ${2:[[${3:objects}],${4:removeCrew}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorEditingArea",
              "description": "Removes editing area for given curator.",
              "snippet": "removeCuratorEditingArea ${2:editAreaID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDiaryRecord",
              "description": "Remove a log record.",
              "snippet": "removeDiaryRecord [${2:subject}, diaryRecord]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDiarySubject",
              "description": "Remove a subject from a log.",
              "snippet": "removeDiarySubject ${2:diaryPage}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDrawIcon",
              "description": "Removes an icon for an editor object. \n\u24d8Some Old Editor Command",
              "snippet": "removeDrawIcon ${2:[object,string identifier]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDrawLinks",
              "description": "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.  \n\u24d8Some Old Editor Command",
              "snippet": "removeDrawLinks ${2:[from,param type]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objectName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeEventHandler",
              "description": "Removes an event handler added by addEventHandler by its index.",
              "snippet": "removeEventHandler ${2:[${3:type}, ${4:index}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeFromRemainsCollector",
              "description": "Removes vehicles/units from the garbage collector, so they do not get deleted automatically; added earlier with addToRemainsCollector",
              "snippet": "removeFromRemainsCollector ${1:remains}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeGoggles",
              "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.",
              "snippet": "removeGoggles ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeGroupIcon",
              "description": "Remove icon with given ID from group.",
              "snippet": "removeGroupIcon ${2:iconID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeHandgunItem",
              "description": "Removes given weapon item, including magazine, from the handgunWeapon",
              "snippet": "removeHandgunItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeHeadgear",
              "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.",
              "snippet": "removeHeadgear ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItem",
              "description": "Removes item from the inventory.",
              "snippet": "removeItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromBackpack",
              "description": "Removes item from soldier's backpack.",
              "snippet": "removeItemFromBackpack ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromUniform",
              "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.",
              "snippet": "removeItemFromUniform ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromVest",
              "description": "Removes item from soldier's vest.",
              "snippet": "removeItemFromVest ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItems",
              "description": "Removes all items with given template from the inventory.",
              "snippet": "removeItems ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazine",
              "description": "Remove magazine from the unit. \nNote: You may create invalid combinations with this function. When doing so, application behaviour is undefined.",
              "snippet": "removeMagazine ${2:magazineName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazineGlobal",
              "description": "Removes the magazine from the unit.",
              "snippet": "removeMagazineGlobal ${2:magazineName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazines",
              "description": "Removes all magazines of given type from the unit. If magazine class does not exist, nothing happens, not even .rpt message, unlike with addMagazine command.",
              "snippet": "removeMagazines ${2:magazineName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazinesTurret",
              "description": "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.",
              "snippet": "removeMagazinesTurret ${2:[${3:magazineName}, ${4:turretPath}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazineTurret",
              "description": "Removes the magazine from the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
              "snippet": "removeMagazineTurret [${3:magazineName}, ${4:turretPath}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMenuItem",
              "description": "Removes a previously added menu item. \n\u24d8Some Old Editor Command",
              "snippet": "removeMenuItem ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMissionEventHandler",
              "description": "Removes mission event handler added by addMissionEventHandler.",
              "snippet": "removeMissionEventHandler [${1:type}, ${2:index}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMPEventHandler",
              "description": "Removes MP event handler added by addMPEventHandler.",
              "snippet": "removeMPEventHandler [${2:event}, ${3:index}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMusicEventHandler",
              "description": "Removes specified music track event handler.",
              "snippet": "removeMusicEventHandler ${1:[${2:type}, ${3:id}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeOwnedMine",
              "description": "Removes ownership over a remotely detonatable mine from the unit.",
              "snippet": "removeOwnedMine ${2:mine}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removePrimaryWeaponItem",
              "description": "Removes given weapon item, including magazine, from the primaryWeapon.",
              "snippet": "removePrimaryWeaponItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSecondaryWeaponItem",
              "description": "Removes given weapon item, including magazine, from the secondaryWeapon.",
              "snippet": "removeSecondaryWeaponItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSimpleTask",
              "description": "Remove a simple task from the list of simple tasks.",
              "snippet": "removeSimpleTask ${2:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSwitchableUnit",
              "description": "Remove a unit from the list of units available for Team Switch.",
              "snippet": "removeSwitchableUnit ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "team ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeTeamMember",
              "description": "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.",
              "snippet": "removeTeamMember ${2:member}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeUniform",
              "description": "Removes uniform from unit.",
              "snippet": "removeUniform ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeVest",
              "description": "Removes vest from unit.",
              "snippet": "removeVest ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeapon",
              "description": "Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal.\n\nNote: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.",
              "snippet": "removeWeapon ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponAttachmentCargo",
              "description": "Remove attachment linked to a weapon from the vehicle cargo space. \n\u26a0This is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
              "snippet": "removeWeaponAttachmentCargo ${2:[weaponID,creatorID,\"attachment\"]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponCargo",
              "description": "Remove weapon from the vehicle cargo space.\n\u26a0This is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
              "snippet": "removeWeaponCargo ${2:[weaponID,creatorID]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponGlobal",
              "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.",
              "snippet": "removeWeaponGlobal ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponTurret",
              "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.",
              "snippet": "removeWeaponTurret ${2:[${3:weaponName}, ${4:turretPath}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "side ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reportRemoteTarget",
              "description": "Shares the target vehicle via datalink to the Side center for a given time.",
              "snippet": "reportRemoteTarget [${2:target}, ${3:time}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/requiredVersion",
              "description": "Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned. \n\nVersion of format Major.Minor, e.g. 1.30",
              "snippet": "requiredVersion ${1:version}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resetCamShake",
              "description": "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used.",
              "text": "resetCamShake"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resetSubgroupDirection",
              "description": "Sets  formation direction of a group relative to current direction of the group leader. The group units will change their positions to form new formation if new formation direction is different (approx +/- 15 degrees). Does the same as:\n_grp setFormDir getDir leader _grp;",
              "snippet": "resetSubgroupDirection ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resistance",
              "description": "Resistance side. \nWhen used in a format statement (hint format[\"%1\",resistance]), the string returned is \"GUER\".",
              "text": "resistance"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resize",
              "description": "Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements. If the new size is bigger than the current size, the new places are filled with nils.",
              "snippet": "resize ${2:count}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resources",
              "description": "Returns the resources of a team member. Results are local to the PC on which command was executed.",
              "snippet": "resources ${1:member}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/respawnVehicle",
              "description": "Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction. If respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker. \n\n\u24d8Command has to be executed where vehicle is local",
              "snippet": "respawnVehicle ${2:[${3:delay}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/restartEditorCamera",
              "description": "Restarts the mission editor camera (if it was deleted by a script,for example).\n\u24d8Some Old Editor Command",
              "snippet": "restartEditorCamera ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "toWhom ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reveal",
              "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.  The knowledge value will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has no knowledge about the revealed target, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too. The knowledge level can only be increased, not decreased by this command. Use forgetTarget first if you need to decrease value.\n\n\u24d8In multiplayer, targetKnowledge and knowsAbout infos get updated only on the PC where command was executed.",
              "snippet": "reveal ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "toWhom ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reveal",
              "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.  The knowledge value will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has no knowledge about the revealed target, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too. The knowledge level can only be increased, not decreased by this command. Use forgetTarget first if you need to decrease value.\n\n\u24d8In multiplayer, targetKnowledge and knowsAbout infos get updated only on the PC where command was executed.",
              "snippet": "reveal [${2:target}, ${3:accuracy}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "side ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/revealMine",
              "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)",
              "snippet": "revealMine ${2:mine}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reverse",
              "description": "Reverses given array by reference (modifies the original array, just like resize).",
              "snippet": "reverse ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reversedMouseY",
              "description": "Returns true if mouse vertical axe is inverted.",
              "text": "reversedMouseY"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roadAt",
              "description": "Returns a road segment containing given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.",
              "snippet": "roadAt ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roadsConnectedTo",
              "description": "Find the road segments connected to the given road segment.\n\u26a0Pedestrian roads such as \"TRAIL\"s are missing connection information by design, therefore basic command will return empty array for those. Use alternative syntax to return pedestrian roads (available since Arma 3 v1.99.146461)",
              "snippet": "roadsConnectedTo ${1:roadSegment}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roadsConnectedTo",
              "description": "Find the road segments connected to the given road segment.\n\u26a0Pedestrian roads such as \"TRAIL\"s are missing connection information by design, therefore basic command will return empty array for those. Use alternative syntax to return pedestrian roads (available since Arma 3 v1.99.146461)",
              "snippet": "roadsConnectedTo [${1:roadSegment}, ${2:extended}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roleDescription",
              "description": "Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP.",
              "snippet": "roleDescription ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachedObjects",
              "description": "Returns an array of all entities that are attached to the transport with ropes. This command is the opposite of ropeAttachedTo.",
              "snippet": "ropeAttachedObjects ${1:ropesOwner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachedTo",
              "description": "Returns the ropes owner, the transport to which other entities are attached with ropes. This command is the opposite of ropeAttachedObjects.",
              "snippet": "ropeAttachedTo ${1:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachEnabled",
              "description": "Returns true if entity can be attached to a rope end.",
              "snippet": "ropeAttachEnabled ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[entity, toPoint, ropeEndDownVector] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachTo",
              "description": "Attaches entity to the rope end with optional offset. For detach operation use ropeDetach.",
              "snippet": "ropeAttachTo ${5:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate",
              "description": "Creates a PhysX rope with given params. For Take on Helicopters syntax see ropeCreate_TKOH.\n\u24d8FROM object has to be  transport vehicle, alive with  rope attachment enabled, TO object has to be an entity, alive with  rope attachment enabled.\nropeEndType is defined in config under \"CfgNonAIVehicles\" >> \"RopeEnd\". Currently this is a hook that will be created on the end of the rope, and ropeEndDownVector is its orientation, [0,0,-1] for example. The \"RopeEnd\" is only shown when the rope is created object to object, it doesn't show on the open ended rope for some reason. There is currently no \"RopeStart\"",
              "snippet": "ropeCreate ${1:[${2:fromObject}, ${3:fromPoint}, ${4:toObject}, ${5:toPoint}, ${6:length}, ${7:ropeStart}, ${10:ropeEnd}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate",
              "description": "Creates a PhysX rope with given params. For Take on Helicopters syntax see ropeCreate_TKOH.\n\u24d8FROM object has to be  transport vehicle, alive with  rope attachment enabled, TO object has to be an entity, alive with  rope attachment enabled.\nropeEndType is defined in config under \"CfgNonAIVehicles\" >> \"RopeEnd\". Currently this is a hook that will be created on the end of the rope, and ropeEndDownVector is its orientation, [0,0,-1] for example. The \"RopeEnd\" is only shown when the rope is created object to object, it doesn't show on the open ended rope for some reason. There is currently no \"RopeStart\"",
              "snippet": "ropeCreate ${1:[${2:fromObject}, ${3:fromPoint}, ${4:length}, ${5:ropeStart}, ${8:ropeEnd}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate%20TKOH",
              "description": "Creates a rope. For Arma 3 syntax see ropeCreate.",
              "snippet": "ropeCreate ${1:[${2:fromObject}, ${3:fromPoint}, ${4:toObject}, ${5:toPoint}, ${6:segments}, ${7:length}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate%20TKOH",
              "description": "Creates a rope. For Arma 3 syntax see ropeCreate.",
              "snippet": "ropeCreate [${2:fromObject}, ${3:fromPoint}, ${4:length}, ${5:segments}, ${6:unroll}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCut",
              "description": "Cuts the given rope to the specified length. If some entity was attached to the end of the rope, it will be detached. The rope remains attached to its parent transport and if the length is set to 0 or even negative does not get destroyed. Use ropeDestroy to remove it completely.\n\u24d8The rope could only be shortened. If the cut length is greater than current rope length, nothing happens",
              "snippet": "ropeCut [${1:rope}, ${2:length}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeDestroy",
              "description": "Destroys the given rope. If the rope is attached to a vehicle, it will be detached and then destroyed.",
              "snippet": "ropeDestroy ${1:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "attachedObject ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeDetach",
              "description": "Detaches attached object from rope (i.e. detaches rope end from attached to it entity). See ropeAttachTo for attach operation.",
              "snippet": "ropeDetach ${2:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeEndPosition",
              "description": "Returns start and end positions for the given  rope. If command fails, empty array [] is returned.",
              "snippet": "ropeEndPosition ${1:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeLength",
              "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind).\n\u24d8Returned rope length will remain the same, even if the rope is stretched.",
              "snippet": "ropeLength ${1:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropes",
              "description": "Returns all ropes attached to a ropes owner transport in an Array, otherwise an empty array [] is returned.",
              "snippet": "ropes ${1:ropesOwner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeSetCargoMass",
              "description": "Set the simulated mass of an object attached to a rope.\nThis command does not apply to Arma 3. Use setMass instead.",
              "snippet": "ropeSetCargoMass [${1:rope}, ${2:cargo}, ${3:mass}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeUnwind",
              "description": "Increases or decreases the rope length by the given amount. Use relative parameter for changing rope length +/- from current length.",
              "snippet": "ropeUnwind [${1:rope}, ${2:speed}, ${3:length}, ${4:relative}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeUnwound",
              "description": "Returns false if rope length changing animation is in progress. Returns true if animation is done.",
              "snippet": "ropeUnwound ${1:rope}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rotorsForcesRTD",
              "description": "Returns force produced by rotors.For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "rotorsForcesRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rotorsRpmRTD",
              "description": "Returns rotors RPM. For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "rotorsRpmRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/round",
              "description": "Rounds up or down to the closest integer.",
              "snippet": "round ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/runInitScript",
              "description": "Fades in mission screen and re-executes init.sqf and init.sqs scripts. In Eden Editor the code inside the \"Init\" mission attribute is executed.",
              "text": "runInitScript"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneH",
              "description": "Returns the height of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the Y axis, the value will be positive but resulting Y will end up beyond the bottom border. Therefore in order to calculate Y of the bottom screen border, the length of safeZoneY must be subtracted from safeZoneH, but because it is negative, it must be added instead. _screenBottomBorderY = safeZoneH + safeZoneY. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "text": "SafeZoneH"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneW",
              "description": "Returns the width of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the X axis, the value will be positive but resulting X will end up beyond the right border. Therefore in order to calculate X of the right screen border, the length of safeZoneX must be subtracted from safeZoneW, but because it is negative, it must be added instead. _screenRightBorderX = safeZoneW + safeZoneX. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "text": "safeZoneW"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneWAbs",
              "description": "Returns SafeZone width (of all monitors, in case there's more than one)",
              "text": "safeZoneWAbs"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneX",
              "description": "Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the left border of the screen. Since it is going in opposite way of the X axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "text": "SafeZoneX"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneXAbs",
              "description": "Returns SafeZone left border (of all monitors, in case there's more than one)",
              "text": "safeZoneXAbs"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneY",
              "description": "Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the top border of the screen. Since it is going in opposite way of the Y axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "text": "SafeZoneY"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/save3DENInventory",
              "description": "Saves the current state of entities' inventory to the current mission's Mission.sqm.",
              "snippet": "save3DENInventory ${1:entities}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveGame",
              "description": "Autosaves the game (used for Retry). The game can then be loaded from the last autosave with loadGame. Will not save if the player is  null or dead.\n\u24d8Since Arma 3 v1.87.145159 a  scripted event handler  \"OnSaveGame\" is available",
              "text": "saveGame"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveIdentity",
              "description": "Saves person's identity to Objects.sav file in campaign directory as entry name.",
              "snippet": "saveIdentity ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveJoysticks",
              "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.",
              "text": "saveJoysticks"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveOverlay",
              "description": "Save the current overlay.\n\u24d8Some Old Editor Command",
              "snippet": "saveOverlay ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveProfileNamespace",
              "description": "Saves the variables stored in profileNamespace to the persistent active user profile. \n\nWarning: this is a file operation, which makes it expensive! It is not recommended to do this at a high frequency in a loop for example. It is however also recommended not to change a large amount of variables and wait long before saving, because certain game crashes may cause a loss of data.\n\nWarning: saving a lot of data can quickly increase the size of the profile variables file, so keep an eye on this.\n\nWarning: TKOH's Heliport status (used in the Career mode for example) is stored in this file, so be mindful of working with this technology to avoid losing data and progress.",
              "text": "saveProfileNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveStatus",
              "description": "Saves object's properties to Objects.sav file in campaign directory as entry name.",
              "snippet": "saveStatus ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveVar",
              "description": "Save variable value into the campaign space. This variable is available to all following missions in the campaign.",
              "snippet": "saveVar ${1:varname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/savingEnabled",
              "description": "Check if saving the game is enabled.",
              "text": "savingEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "description": "Make unit say given sound. The sound is defined in CfgSounds. If the unit is a person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA dead or non-existent unit obviously cannot say anything.\nIf the camera is not within given range, title is not shown and the sound will not be heard.\nSee also playSound in order to play a sound wherever the camera/player is.\n\n\u24d8say will mimic either say2D or say3D depending on whether it is there executed in a cutscene or in a game scene.",
              "snippet": "say ${2:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "description": "Make unit say given sound. The sound is defined in CfgSounds. If the unit is a person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA dead or non-existent unit obviously cannot say anything.\nIf the camera is not within given range, title is not shown and the sound will not be heard.\nSee also playSound in order to play a sound wherever the camera/player is.\n\n\u24d8say will mimic either say2D or say3D depending on whether it is there executed in a cutscene or in a game scene.",
              "snippet": "say [${2:sound}, ${3:maxTitlesDistance}, ${4:speed}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "description": "Make unit say given sound. The sound is defined in CfgSounds. If the unit is a person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA dead or non-existent unit obviously cannot say anything.\nIf the camera is not within given range, title is not shown and the sound will not be heard.\nSee also playSound in order to play a sound wherever the camera/player is.\n\n\u24d8say will mimic either say2D or say3D depending on whether it is there executed in a cutscene or in a game scene.",
              "snippet": "say ${3:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "description": "Make unit say given sound. The sound is defined in CfgSounds. If the unit is a person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA dead or non-existent unit obviously cannot say anything.\nIf the camera is not within given range, title is not shown and the sound will not be heard.\nSee also playSound in order to play a sound wherever the camera/player is.\n\n\u24d8say will mimic either say2D or say3D depending on whether it is there executed in a cutscene or in a game scene.",
              "snippet": "say [${3:sound}, ${4:maxTitlesDistance}, ${5:speed}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "description": "Plays given sound in 2D",
              "snippet": "say2D ${2:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "description": "Plays given sound in 2D",
              "snippet": "say2D ${2:[${3:sound}, ${4:maxTitlesDistance}, ${5:speed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "description": "Plays given sound in 2D",
              "snippet": "say2D ${4:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "description": "Plays given sound in 2D",
              "snippet": "say2D ${4:[${5:sound}, ${6:maxTitlesDistance}, ${7:speed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "description": "Unit or object will say given sound in 3D Space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in \"CfgSounds\" of the Description.ext or main config.\n\n\u24d8You can stop say3D sound currently playing in 2 ways:\ndelete the source of the sound (from) with deleteVehicle, or\nkill the source with e.g setDamage.",
              "snippet": "say3D ${2:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = from ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "description": "Unit or object will say given sound in 3D Space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in \"CfgSounds\" of the Description.ext or main config.\n\n\u24d8You can stop say3D sound currently playing in 2 ways:\ndelete the source of the sound (from) with deleteVehicle, or\nkill the source with e.g setDamage.",
              "snippet": "say3D [${2:sound}, ${3:maxDistance}, ${4:pitch}, ${5:isSpeech}, offset]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = [from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "description": "Unit or object will say given sound in 3D Space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in \"CfgSounds\" of the Description.ext or main config.\n\n\u24d8You can stop say3D sound currently playing in 2 ways:\ndelete the source of the sound (from) with deleteVehicle, or\nkill the source with e.g setDamage.",
              "snippet": "say3D ${3:sound}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = [from, to] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "description": "Unit or object will say given sound in 3D Space.\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\nCompare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\nSound is defined in \"CfgSounds\" of the Description.ext or main config.\n\n\u24d8You can stop say3D sound currently playing in 2 ways:\ndelete the source of the sound (from) with deleteVehicle, or\nkill the source with e.g setDamage.",
              "snippet": "say3D [${3:sound}, ${4:maxDistance}, ${5:pitch}, ${6:isSpeech}, offset]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scopeName",
              "description": "Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like breakOut and breakTo. Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.",
              "snippet": "scopeName ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/score",
              "description": "Returns the person's score in MP.",
              "snippet": "score ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scoreSide",
              "description": "Returns score for the given side. MP Only.",
              "snippet": "scoreSide ${1:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/screenshot",
              "description": "Captures a screenshot and stores it to given filename. PNG is the only available format and the file must have .png extension. \n\nThe file is saved into Screenshots folder in the Profile directory. The folder is by default limited to 250 MB to prevent abuse.\n\nTo increase the limit, add the following line at the end of the profile file:\nmaxScreenShotFolderSizeMB = 2000;\n2000 can be replaced by any value in MB.",
              "snippet": "screenshot ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/screenToWorld",
              "description": "Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates).",
              "snippet": "screenToWorld ${1:screen}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptDone",
              "description": "Check if a script is finished running using the Script_(Handle) returned by execVM or spawn.",
              "snippet": "scriptDone ${1:handle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptName",
              "description": "Assign a user friendly name to the VM script this command is executed from.\n\nOnce name is assigned, it cannot be changed.",
              "snippet": "scriptName ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Script) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptNull",
              "description": "A non-existing Script or script that has finished (scriptDone). To compare non-existent scripts use isNull or isEqualTo:\nscriptNull == scriptNull; // ERROR! == cannot be used with script object\nisNull scriptNull; // true\nscriptNull isEqualTo scriptNull; // true",
              "text": "scriptNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scudState",
              "description": "Current state of given Scud launcher. Following states are recognized: \n\n0 - No activity\n1 - Launch preparation,\n2 - Launch prepared\n3 - Ignition\n4 - Launched.",
              "snippet": "scudState ${1:scudName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeapon",
              "description": "Returns name of a unit's secondary weapon (empty string if none).",
              "snippet": "secondaryWeapon ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeaponItems",
              "description": "Returns array with all items assigned to the secondaryWeapon except magazines. Use secondaryWeaponMagazine command for the latter. This command is used for infantry weapons only.",
              "snippet": "secondaryWeaponItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeaponMagazine",
              "description": "Collects all loaded magazines from all secondaryWeapon muzzles and returns them in Array, otherwise it returns []. This command is used for infantry weapons only.",
              "snippet": "secondaryWeaponMagazine ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:boolean}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Config) = config ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:index}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = string ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:[${3:start}, length]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:[${3:start}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "snippet": "select ${2:expression}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectBestPlaces",
              "description": "Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.",
              "snippet": "selectBestPlaces [${1:position}, ${2:radius}, ${3:expression}, ${4:precision}, ${5:sourcesCount}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectDiarySubject",
              "description": "Selects the subject page in a log.\nThis command seems to be broken in 1.82. Use BIS_fnc_selectDiarySubject instead.",
              "snippet": "selectDiarySubject ${2:subject}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectedEditorObjects",
              "description": "Returns a list of currently selected editor objects. \n\u24d8Some Old Editor Command",
              "snippet": "selectedEditorObjects ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectEditorObject",
              "description": "Select an editor object. Does not un-select previously selected objects. \n\u24d8Some Old Editor Command",
              "snippet": "selectEditorObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionNames",
              "description": "Returns the list of model selections",
              "snippet": "selectionNames ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionNames",
              "description": "Returns the list of model selections",
              "snippet": "selectionNames ${2:LOD}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionPosition",
              "description": "Search for selection in the object model (first in the memory level, then in geometry LODs).\nReturns position in model space. In ArmA it returns the initial position of the selection, in Arma 2/Arma 3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.",
              "snippet": "selectionPosition ${2:selectionName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionPosition",
              "description": "Search for selection in the object model (first in the memory level, then in geometry LODs).\nReturns position in model space. In ArmA it returns the initial position of the selection, in Arma 2/Arma 3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.",
              "snippet": "selectionPosition ${2:[${3:selectionName}, ${4:LODName}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectLeader",
              "description": "Select the group's leader. Group locality can be checked with local command and group ownership with groupOwner command.\n\n\u26a0An invalid combination can be provided to this command, e.g unitName not being part of group. In that case:\nunitName will be leader of group, but will not be able to command them\nif unitName is deleted or killed, leader of group will be objNull and will not automatically be reassigned.",
              "snippet": "selectLeader ${2:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectMax",
              "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0.  nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.",
              "snippet": "selectMax ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectMin",
              "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only.  Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.",
              "snippet": "selectMin ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectNoPlayer",
              "description": "Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP.",
              "text": "selectNoPlayer"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectPlayer",
              "description": "Move player into given unit. Some usage advices:\nTry avoiding selectPlayer on editor-placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour.\nIf you need to selectPlayer into another unit, consider creatingUnit dynamically.\n\u24d8Before Arma 3 it was possible to selectPlayer another player-controlled unit, leading to control issues.\n\u26a0Creating and immediately selecting player into newly created unit could cause all sort of problems due to possible delay in unit initialization. Give unit some time to propagate properly on network before selecting player into it.",
              "snippet": "selectPlayer ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandom",
              "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom",
              "snippet": "selectRandom ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandomWeighted",
              "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:\nNegative weights are not supported\nIf an item's weight is 0, the item is ignored\nThe weights don't have to total to 1\nIf numbers of items and weights do not match, the shortest array is used\nA single array Syntax is slightly faster then Alt Syntax",
              "snippet": "selectRandomWeighted ${1:valuesAndWeights}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything, Nothing) = values ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandomWeighted",
              "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:\nNegative weights are not supported\nIf an item's weight is 0, the item is ignored\nThe weights don't have to total to 1\nIf numbers of items and weights do not match, the shortest array is used\nA single array Syntax is slightly faster then Alt Syntax",
              "snippet": "selectRandomWeighted ${2:weights}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectWeapon",
              "description": "Selects the given weapon.\n\nNote: For weapons that have more than one muzzle, you have to input the muzzlename and not the weaponName.\n\nThe only weapons that have muzzleNames seem to be rifles with grenade launchers, handgrenades, smokeshells and satchels.\n\nIn all other cases the weaponName must be used.\nFortunately, in OFP, in most cases, both names are the same. But check.\n\nIn ArmA the weaponNames and muzzleNames are different.\n\nFor muzzle names see cfgWeapons. \n\nNOTE: The unit must be local to the PC on which command is executed.",
              "snippet": "selectWeapon ${2:muzzleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectWeaponTurret",
              "description": "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.",
              "snippet": "selectWeaponTurret ${2:[${3:weapon}, ${4:turretPath}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendAUMessage",
              "description": "Send the command to the list of clients.",
              "snippet": "sendAUMessage ${1:[${2:clientList}, ${3:command}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendSimpleCommand",
              "description": "Sends a simple command to the vehicle's driver / gunner (air vehicles ignore it). See also vehicleMoveInfo.\n\u26a0Doesn't seem to work if AI driver is alone, needs another unit in the vehicle (could be another AI or player) that is set as setEffectiveCommander. If driver is effectiveCommander it will refuse any drive commands.\nDue to some sort of a bug when vehicle is ordered turning (\"LEFT\" or \"RIGHT\"), it locks vehicle ability to respond to any other commands properly. Always use \"STOPTURNING\" to cancel turning before issuing other move commands \nGunner commands\n\n\"FIRE\"\n\"CEASE FIRE\"\n\"MANUAL FIRE\"\n\"CANCEL MANUAL FIRE\"\n\"KEY FIRE\"\nDriver move commands\n\n\"FORWARD\" - move forward\n\"FAST\" - move forward, fast\n\"SLOW\" - move forward, slow\n\"STOP\" - stop moving forward or backward\n\"BACK\" - move backward\n\"KEY UP\"\n\"KEY DOWN\"\n\"KEY FAST\"\n\"KEY SLOW\"\nDriver turn commands\n\n\"LEFT\" - turn left, while moving or not\n\"RIGHT\" - turn right, while moving or not\n\"STOPTURNING\" - cancel turning  (special case, normally would be called by the engine when LEFT or RIGHT turn key is released by the player) Since Arma 3 v1.77",
              "snippet": "sendSimpleCommand ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = sender ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendTask",
              "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
              "snippet": "sendTask ${2:[receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendTaskResult",
              "description": "Send a result of the task to the task sender.",
              "snippet": "sendTaskResult ${2:[state,result,sentence]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendUDPMessage",
              "description": "Send message to given address using UDP protocol. Returns false if the message has not been delivered \n\nNote: Not implemented (see talk page for more info).",
              "snippet": "sendUDPMessage [${1:ip}, ${2:port}, ${3:message}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommand",
              "description": "Executes the given server command.\nAvailable commands for execution can be found with serverCommandAvailable.\nCommands that can be executed can be found with serverCommandExecutable.\n\n\u24d8If serverCommand is executed on a client, it must be executed from  UI context, such as onButtonDown or similar events (see User_Interface_Event_Handlers).\nAs of Arma 3 v1.39 an alternative version of serverCommand can be used on dedicated server and headless clients. It requires a password, set with serverCommandPassword in server.cfg and passed to the command as an argument (See Alt Syntax).",
              "snippet": "serverCommand ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = password ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommand",
              "description": "Executes the given server command.\nAvailable commands for execution can be found with serverCommandAvailable.\nCommands that can be executed can be found with serverCommandExecutable.\n\n\u24d8If serverCommand is executed on a client, it must be executed from  UI context, such as onButtonDown or similar events (see User_Interface_Event_Handlers).\nAs of Arma 3 v1.39 an alternative version of serverCommand can be used on dedicated server and headless clients. It requires a password, set with serverCommandPassword in server.cfg and passed to the command as an argument (See Alt Syntax).",
              "snippet": "serverCommand ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommandAvailable",
              "description": "Returns true if given serverCommand is available on current machine, false if not. Here is the general table of availability of Arma 3 server commands:\n\nAvailable to anyone\n#login, #userlist,  #beclient,  #vote\nAvailable to any admin (voted in / logged in) or server host\n#kick, #debug\nAvailable to logged in admin or server host\n#lock, #unlock, #maxping, #maxdesync, #maxpacketloss\nAvailable to any admin (voted in / logged in)\n#logout, #restart, #mission, #missions, #reassign, #monitor, #init\nAvailable to logged in admin\n#shutdown, #restartserver, #exec, #beserver, #monitords, #logentities, #exportjipqueue\nAvailable to logged in admin on certain game builds\n#captureframe, #enabletest, #disabletest\nTo check if server command could be executed in current environment use serverCommandExecutable. For more information on what each server command does, see Multiplayer Server Commands.\nNOTE: When password variant of serverCommand is used on dedicated server, the table above does not apply as everything is available to it.",
              "snippet": "serverCommandAvailable ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommandExecutable",
              "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.",
              "snippet": "serverCommandExecutable ${1:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverName",
              "description": "Returns name of the hosting server in MP, \"\" in SP.",
              "text": "serverName"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverTime",
              "description": "Returns the time since last server restart, synced to all clients in MP. The syncing is happening every 5 minutes, but you can force the next sync earlier by executing estimatedTimeLeft command. The time returned is also different to the time returned by time and diag_tickTime commands on server. Returns 0 in SP.\n\n\u24d8Known issues before Arma 3 v1.85.145075:  Both server and clients showed the same value when synced. The only time it was not synced was on the server, right after server restart and only for the first 300 seconds. Client side was synced from the start",
              "text": "serverTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set",
              "description": "Changes the element at the given (zero-based) index of the array.\nIf the element does not exist, resize index+1 is called to create it.",
              "snippet": "set ${2:[${3:index}, ${4:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENAttribute",
              "description": "Set one of entity attributes. For the list of all attributes with their properties, see Setting Attributes.\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "set3DENAttribute [${2:class}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENAttributes",
              "description": "Set entity attributes.\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "set3DENAttributes [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENGrid",
              "description": "Sets the grid increment for the given transformation type.\nTransformation types:\nRotation - \"r\"\nTranslation - \"t\"\nScale - \"s\"",
              "snippet": "set3DENGrid [${1:type},${2:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENIconsVisible",
              "description": "Toggle visibility of Eden Editor icons.",
              "snippet": "set3DENIconsVisible [${2:showMap}, ${1:showScene}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLayer",
              "description": "Set layer for Eden Entity.",
              "snippet": "set3DENLayer ${2:layerID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLinesVisible",
              "description": "Toggle visibility of Eden Editor lines.",
              "snippet": "set3DENLinesVisible [${2:showMap}, ${1:showScene}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objects ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLogicType",
              "description": "Sets the new type of Logic object(s). For other objects use set3DENObjectType",
              "snippet": "set3DENLogicType ${2:classname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENMissionAttribute",
              "description": "Set scenario attribute.\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "set3DENMissionAttribute [<${2:class}>,<${3:value}>]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENMissionAttributes",
              "description": "Set scenario attributes.\n\nAn attribute is identified by its property (data when it is engine-drive attribute) value in config. For the list of all attributes with their properties, see Mission Attributes.\n\n\u26a0Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "snippet": "set3DENMissionAttributes [[<${1:section}>,<class1>,<value1>], ..., [<${1:section} >,<classN>,<valueN>]]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENModelsVisible",
              "description": "Enables or disables lines visibility in 3DEN",
              "snippet": "set3DENModelsVisible [${1:map}, ${2:scene}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "objects ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENObjectType",
              "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType",
              "snippet": "set3DENObjectType ${2:classname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENSelected",
              "description": "Changes selection in 3den to what is inside entities array.",
              "snippet": "set3DENSelected ${1:entities}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAccTime",
              "description": "Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4].",
              "snippet": "setAccTime ${1:accFactor}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setActualCollectiveRTD",
              "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).\n0: collective fully down\n~0.7: approximate stable hover position\n1: collective fully up\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setActualCollectiveRTD ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "airplane ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirplaneThrottle",
              "description": "Sets a wanted throttle position, works only on player's vehicle.",
              "snippet": "setAirplaneThrottle ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "id ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirportSide",
              "description": "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.",
              "snippet": "setAirportSide ${2:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "target ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirportSide",
              "description": "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.",
              "snippet": "setAirportSide ${2:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmo",
              "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed.",
              "snippet": "setAmmo ${2:[${3:weapon}, ${4:count}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmoCargo",
              "description": "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.\n\nThe actual quantity to work with is determined by the model's class in CfgVehicles",
              "snippet": "setAmmoCargo ${2:ammoCargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmoOnPylon",
              "description": "Set count of ammo in magazine on pylon (supports pylon name since Arma 3 v1.93.145594)",
              "snippet": "setAmmoOnPylon ${2:[${3:pylon}, ${4:ammocount}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAnimSpeedCoef",
              "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).\nDoesn't affect upper body animations (reloading, etc.)",
              "snippet": "setAnimSpeedCoef ${2:coef}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAperture",
              "description": "Sets custom camera aperture (-1 to do it automatically).\n\u26a0The aperture is set to default by the engine at the mission start. If you set it before the mission started it will reset like it never happened. Make sure you set it at the right time (see example 2)",
              "snippet": "setAperture ${1:aperture}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setApertureNew",
              "description": "Sets custom camera aperture ([-1] to do it automatically).",
              "snippet": "setApertureNew ${1:[${2:min}, ${3:std}, ${4:max}, ${5:stdLum}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAPURTD",
              "description": "Let the Auxiliary Power Unit (APU) reach a desired state over the given period of time. \n0: fully off\n1: fully powered up",
              "snippet": "setAPURTD [${2:value}, ${3:time}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setArmoryPoints",
              "description": "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created.",
              "snippet": "setArmoryPoints ${1:points}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = text ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAttributes",
              "description": "Returns a Structured Text created from the given structured text and sets  attributes to the given values.\n\u26a0Even though command accepts plain String too, the argument should be Structured Text in order for the set attributes to have an effect. Additionally the result of the command should be fed to composeText (See Example 1) or formatText",
              "snippet": "setAttributes ${2:[name1, value1, name2, value2, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "uav ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAutonomous",
              "description": "Sets UAV autonomous mode.",
              "snippet": "setAutonomous ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBatteryChargeRTD",
              "description": "Set the actual battery charge of a helicopter.\n0: no charge\n1: fully charged",
              "snippet": "setBatteryChargeRTD ${2:charge}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBatteryRTD",
              "description": "Toggle a helicopter's electrical systems on and off.",
              "snippet": "setBatteryRTD ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBehaviour",
              "description": "Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of: \n\"CARELESS\"\n\"SAFE\"\n\"AWARE\"\n\"COMBAT\"\n\"STEALTH\".\n\u24d8See AI Behaviour for details of the effect of this command on AI units.",
              "snippet": "setBehaviour ${2:behaviour}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBehaviourStrong",
              "description": "Sets group behaviour mode & forces it to a group. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of: \n\"CARELESS\"\n\"SAFE\"\n\"AWARE\"\n\"COMBAT\"\n\"STEALTH\".\n\u24d8See AI Behaviour for details of the effect of this command on AI units.",
              "snippet": "setBehaviourStrong ${2:behaviour}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBleedingRemaining",
              "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.",
              "snippet": "setBleedingRemaining ${2:time}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBrakesRTD",
              "description": "Enable landing gear wheel brakes for a helicopter.\nvalue 0: brakes off\nvalue 1: brakes on\n\nindex 1: left wheels\nindex 2: right wheels\nindex 3: both sides\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.\n\u24d8This command is implemented, but not fully supported.",
              "snippet": "setBrakesRTD [${2:value}, ${3:wheelIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraEffect",
              "description": "This command is not available in Arma 3 \nName efines the effect type (a subclass of CfgCameraEffects.Array):\n\n\"TERMINATE\",\n\"INTERNAL\",\n\"ZOOMIN\",\n\"ZOOMINSLOW\",\n\"AROUND\",\n\"AROUNDSLOW\",\n\"ZOOMANDAROUND\",\n\"AROUNDANDZOOMINSLOW\",\n\"ZOOMINS\",\n\"FIXED\",\n\"FIXEDWITHZOOM\",\n\"EXTERNAL\"\n\"$TERMINATE$\" to cancel the current effect.\nPlacement is camera placement: \n\n\"TOP\",\n\"LEFT\",\n\"RIGHT\",\n\"FRONT\",\n\"BACK\",\n\"LEFT FRONT\",\n\"RIGHT FRONT\",\n\"LEFT BACK\",\n\"RIGHT BACK\",\n\"LEFT TOP\",\n\"RIGHT TOP\",\n\"FRONT TOP\",\n\"BACK TOP\"\n\"BOTTOM\".",
              "snippet": "setCameraEffect ${2:[${3:name}, ${4:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraEffect",
              "description": "This command is not available in Arma 3 \nName efines the effect type (a subclass of CfgCameraEffects.Array):\n\n\"TERMINATE\",\n\"INTERNAL\",\n\"ZOOMIN\",\n\"ZOOMINSLOW\",\n\"AROUND\",\n\"AROUNDSLOW\",\n\"ZOOMANDAROUND\",\n\"AROUNDANDZOOMINSLOW\",\n\"ZOOMINS\",\n\"FIXED\",\n\"FIXEDWITHZOOM\",\n\"EXTERNAL\"\n\"$TERMINATE$\" to cancel the current effect.\nPlacement is camera placement: \n\n\"TOP\",\n\"LEFT\",\n\"RIGHT\",\n\"FRONT\",\n\"BACK\",\n\"LEFT FRONT\",\n\"RIGHT FRONT\",\n\"LEFT BACK\",\n\"RIGHT BACK\",\n\"LEFT TOP\",\n\"RIGHT TOP\",\n\"FRONT TOP\",\n\"BACK TOP\"\n\"BOTTOM\".",
              "snippet": "setCameraEffect ${2:[${3:name}, ${4:position}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "entity ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraInterest",
              "description": "Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.",
              "snippet": "setCameraInterest ${2:interest}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamShakeDefParams",
              "description": "Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person.",
              "snippet": "setCamShakeDefParams [${1:power}, ${2:duration}, ${3:frequency}, ${4:minSpeed}, ${5:minMass}, ${6:caliberCoefHit}, ${7:vehicleCoef}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamShakeParams",
              "description": "Set camera shake parameters. \nWill not have any effect until shake is started via addCamShake.",
              "snippet": "setCamShakeParams [${1:posCoef}, ${2:vertCoef}, ${3:horzCoef}, ${4:bankCoef}, ${5:interpolation}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "Bool ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamUseTI",
              "description": "Activates thermal vision. Mode index defines what sort of thermal vision it is:\n0 - White Hot\n1 - Black Hot\n2 - Light Green Hot / Darker Green cold\n3 - Black Hot / Darker Green cold\n4 - Light Red Hot /Darker Red Cold\n5 - Black Hot / Darker Red Cold\n6 - White Hot . Darker Red Cold\n7 - Thermal (Shade of Red and Green, Bodies are white) \nThis command only works with camCreate created camera that is currently the main camera for the player (see example).",
              "snippet": "setCamUseTI ${2:modeIndex}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCaptive",
              "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.\n\nUsing a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.). The numbered status syntax was introduced in Arma 2.",
              "snippet": "setCaptive ${2:status}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCaptive",
              "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.\n\nUsing a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.). The numbered status syntax was introduced in Arma 2.",
              "snippet": "setCaptive ${2:statusNumber}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "myObject ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCenterOfMass",
              "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "snippet": "setCenterOfMass ${2:[${3:centerOfMass}, ${4:time}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "myObject ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCenterOfMass",
              "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "snippet": "setCenterOfMass ${2:centerOfMass}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCollisionLight",
              "description": "Switches collision lights of a vehicle on/off.",
              "snippet": "setCollisionLight ${2:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCombatMode",
              "description": "Sets AI  group combat mode (engagement rules). Mode may be one of the following: \n\"BLUE\"\u00a0: Never fire, keep formation\n\"GREEN\"\u00a0: Hold fire, keep formation\n\"WHITE\"\u00a0: Hold fire, engage at will/loose formation\n\"YELLOW\"\u00a0: Fire at will, keep formation\n\"RED\"\u00a0: Fire at will, engage at will/loose formation\nSee Combat Modes for more information on combat modes.",
              "snippet": "setCombatMode ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCompassOscillation",
              "description": "This command sets random heading on the player's compass (both, in map and in 3D view) with given frequency, which is also randomised. To reset the compass back to defaults, execute: setCompassOscillation [-1, 0, 0];.",
              "snippet": "setCompassOscillation ${1:[${2:angle}, ${3:frequencyMin}, ${4:frequencyMax}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setConvoySeparation",
              "description": "Sets the distance to keep to the vehicle which is in front.\nThis command has to be applied to all vehicles in a convoy in order to have a separation of, for example, 50 m.\nVehicles in a convoy can also have different distances.\nIt's recommended that small values (<10m) should only be used for slowly moving convoys, otherwise AI driven vehicles will leave the road frequently to avoid collisions",
              "snippet": "setConvoySeparation ${2:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorCameraAreaCeiling",
              "description": "Sets maximal (ATL) height to which curator camera can move.",
              "snippet": "setCuratorCameraAreaCeiling ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorCoef",
              "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).",
              "snippet": "setCuratorCoef ${2:[${3:action},${4:coef}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorEditingAreaType",
              "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).",
              "snippet": "setCuratorEditingAreaType ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "curatorObj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorWaypointCost",
              "description": "Sets cost of waypoints (used for placing, editing and deleting).",
              "snippet": "setCuratorWaypointCost ${2:cost}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentChannel",
              "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure. Correspondence between channel and number:\n0 = Global\n1 = Side\n2 = Command\n3 = Group\n4 = Vehicle\n5 = Direct\n6-15 = Custom Radio (see radioChannelCreate)",
              "snippet": "setCurrentChannel ${1:channel}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentTask",
              "description": "Set the task as a current task of the person.",
              "snippet": "setCurrentTask ${2:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentWaypoint",
              "description": "Sets the currently active waypoint for a group.",
              "snippet": "setCurrentWaypoint ${2:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCustomAimCoef",
              "description": "Set custom aim precision coefficient for weapon sway",
              "snippet": "setCustomAimCoef ${2:coef}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCustomSoundController",
              "description": "Sets value of the specified custom sound controller to be used in simple expressions in config. Returns true if value was set to the controller, false if command fails, for example if vehicle is not a transport or controller name is not recognised.\n\u26a0Custom sound controller name is case sensitive and of the following format:\nformat [\"CustomSoundController%1\", _number]\n\nWhere _number is a number from 1 to getCustomSoundControllerCount (currently 32)",
              "snippet": "setCustomSoundController [${1:vehicle}, ${2:controller}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCustomWeightRTD",
              "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setCustomWeightRTD ${2:weight}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDamage",
              "description": "Sets an object's damage value in the range 0..1, 0 meaning fully functional and 1 completely destroyed / dead.\nThe alternative syntax allows to switch off destruction effects.\n\n\u24d8Identical to setDammage, typo aside.",
              "snippet": "setDamage ${2:damage}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDamage",
              "description": "Sets an object's damage value in the range 0..1, 0 meaning fully functional and 1 completely destroyed / dead.\nThe alternative syntax allows to switch off destruction effects.\n\n\u24d8Identical to setDammage, typo aside.",
              "snippet": "setDamage ${2:[${3:damage}, ${4:useEffects}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDammage",
              "description": "Damage / repair object.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead.\n\nAlias of setDamage, which was introduced to fix a spelling error in this operator's name.",
              "snippet": "setDammage ${2:damage}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDate",
              "description": "Sets mission date and time. This command is fully JIP compatible (as of Arma 3 v1.93.145588). Players joining after mission start will get the current server date including the year.\n\nClients' local date is automatically and periodically synchronised with the server date.",
              "text": "setDate"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "endType ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDebriefingText",
              "description": "Sets debriefing text for endType defined in CfgDebriefing.\n\n\u26a0This command is broken. https://feedback.bistudio.com/T85682",
              "snippet": "setDebriefingText ${2:[${3:title}, ${4:description}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDefaultCamera",
              "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)",
              "snippet": "setDefaultCamera [${1:position}, ${2:direction}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDestination",
              "description": "Set the destination for path planning of the pilot.\n\nPossible values for planningMode are:\n\n\"DoNotPlan\" - used when not moving\n\"DoNotPlanFormation\" - used in formation when simple path testing is used\n\"LEADER PLANNED\" - used for formation leader (full path finding used)\n\"LEADER DIRECT\" - used for DirectGo (like getin, supply)\n\"FORMATION PLANNED\" - used in formation when full path finding is used\n\"VEHICLE PLANNED\" - used for vehicle driver\n\nWorks best when used on agents. Using \"LEADER PLANNED\" will trigger \"PathCalculated\"  Event Handler",
              "snippet": "setDestination ${2:[${3:position}, ${4:planningMode}, ${5:forceReplan}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDetailMapBlendPars",
              "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.",
              "snippet": "setDetailMapBlendPars ${1:[${2:fullDetail}, ${3:noDetail}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDiaryRecordText",
              "description": "Set text of a log record.",
              "snippet": "setDiaryRecordText ${2:[[subject, diaryRecord], [title, text]]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDir",
              "description": "Sets object heading. Angles are measured in degrees clockwise from north, and regular range goes from 0 to 360 (0\u00b0 = N, 90\u00b0 = E, 180\u00b0 = S, 270\u00b0 = W). Negative angles represent a counter-clockwise angle.",
              "snippet": "setDir ${2:heading}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDirection",
              "description": "Set's the orientation of a location. It's area and map icon (if it is type uses an icon) will be rotated to this orientation.",
              "snippet": "setDirection ${2:direction}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDrawIcon",
              "description": "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.\n\u24d8Some Old Editor Command",
              "snippet": "setDrawIcon ${2:[object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDriveOnPath",
              "description": "Sets the path to follow for AI driver. Note that unitReady will return true even if AI is still driving through the points.\nUsing any other move command (e.g vehicleName move getPos vehicleName) or doStop will stop the effect of this command.",
              "snippet": "setDriveOnPath ${2:points}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "particleSource ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDropInterval",
              "description": "Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is 18000. Correspondence between CfgCloudlets class param name and command param:\nparticleSource setDropInterval interval;",
              "snippet": "setDropInterval ${2:interval}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "category ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDynamicSimulationDistance",
              "description": "Sets activation distance of Arma_3_Dynamic_Simulation for given category",
              "snippet": "setDynamicSimulationDistance ${2:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "class ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDynamicSimulationDistanceCoef",
              "description": "Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class",
              "snippet": "setDynamicSimulationDistanceCoef ${2:multiplier}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEditorMode",
              "description": "Sets map mode to MAP,3D or PREVIEW. \n\u24d8Some Old Editor Command",
              "snippet": "setEditorMode ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEditorObjectScope",
              "description": "This command defines the level of access a user has to editor objects.\n\n\"objects\" is an array of either Editor Objects (eg [\"_unit_0\"]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects.\n\n\"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types.\n\n\"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member.\n\n\"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\".\n\n\"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.\n\u24d8Some Old Editor Command",
              "snippet": "setEditorObjectScope ${2:[${3:objects}, ${4:editorType}, ${5:condition}, ${6:scope}, ${7:subordinatesAlso}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEffectCondition",
              "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\nIf the result is a boolean and true, the effect is launched.\nIf the result is an object, the effect is launched if the result is the player or the player vehicle.\nIf the result is an array, the effect is launched if the result contains the player or the player vehicle.",
              "snippet": "setEffectCondition ${2:statement}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEffectCondition",
              "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\nIf the result is a boolean and true, the effect is launched.\nIf the result is an object, the effect is launched if the result is the player or the player vehicle.\nIf the result is an array, the effect is launched if the result contains the player or the player vehicle.",
              "snippet": "setEffectCondition ${2:statement}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEffectiveCommander",
              "description": "Sets effectiveCommander of the given vehicle. Effective commander is the person who commands the vehicle, i.e. gives commands to the driver. Every time a person gets in or out of a vehicle, effective commander eligibility is recalculated by the engine based on the current crew. Use this command to force desired effective commander. In multiplayer, execute globally.",
              "snippet": "setEffectiveCommander ${2:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEngineRPMRTD",
              "description": "Instantly set a helicopter's engine RPMs to the given value.\nengine index 0: engine #1\nengine index 1: engine #2\nengine index 2: engine #3\nengine index -1: all engines\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setEngineRPMRTD [${2:value}, ${3:engineIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFace",
              "description": "Set person's face. For a list of available faces, check Category:CfgIdentities.",
              "snippet": "setFace ${2:face}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFaceAnimation",
              "description": "Sets facial animation phase (eye blinking), blink is in the range from 0 to 1. \nThis command is not functional in Arma 3",
              "snippet": "setFaceAnimation ${2:blink}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFatigue",
              "description": "Sets the person's fatigue, from 0 to 1.",
              "snippet": "setFatigue ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFeatureType",
              "description": "Enable/disable object as a feature/landmark. Possible feature types:\n0 - Feature disabled\n1 - Object is always visible within object view distance\n2 - Object is always visible within terrain view distance\nThe limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.",
              "snippet": "setFeatureType ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "flag ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagAnimationPhase",
              "description": "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use BIS_fnc_animateFlag",
              "snippet": "setFlagAnimationPhase ${2:phase}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "flag ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagOwner",
              "description": "Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole. A flag owned by a logic has no visual representation.",
              "snippet": "setFlagOwner ${2:owner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagSide",
              "description": "Returns Side of the local instance of the flag. A getter for setFlagSide.",
              "snippet": "flagSide ${1:flag}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagTexture",
              "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.",
              "snippet": "flagTexture ${1:flagCarrier}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "flag ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagSide",
              "description": "Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with setFlagTexture, if the command executed where unit is local effect of the command will be global and JIP compatible.",
              "snippet": "setFlagSide ${2:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "flag ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagTexture",
              "description": "Sets flag texture.\n\nIf texture is \"\", flag is not drawn.\nCustom texture can be used, as long as it is in *.jpg format and has dimensions of 200\u00d7200px, or *.paa (Arma 3 standard: 512\u00d7256px).\n\n\u24d8See Flag Textures for a list of all in-game flag textures.",
              "snippet": "setFlagTexture ${2:texture}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFog",
              "description": "Smoothly change the fog over given time (in seconds). See also fogParams.\nThis command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.",
              "snippet": "setFog ${2:fog}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFog",
              "description": "Smoothly change the fog over given time (in seconds). See also fogParams.\nThis command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.",
              "snippet": "setFog ${2:[${3:fogValue}, ${4:fogDecay}, ${5:fogBase}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormation",
              "description": "Set group formation.\nFormation is one of: \n\"COLUMN\"\n\"STAG COLUMN\"\n\"WEDGE\"\n\"ECH LEFT\"\n\"ECH RIGHT\"\n\"VEE\"\n\"LINE\"\n\"FILE\" (ArmA)\n\"DIAMOND\" (ArmA)",
              "snippet": "setFormation ${2:formation}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormationTask",
              "description": "Set the current task of the formation member. \n\n\nThis function is no longer available in Arma 2.",
              "snippet": "setFormationTask ${2:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormDir",
              "description": "Sets group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overridden by movement direction. If the new direction is noticeably different from the old direction (approx +/- 15 degrees), units will change positions changing formationDirection.",
              "snippet": "setFormDir ${2:heading}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "side1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFriend",
              "description": "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it is friendly.\n\nIntended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. See also Side relations.",
              "snippet": "setFriend ${2:[${3:side2} , ${4:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFromEditor",
              "description": "Set if given team member was inserted directly from editor.",
              "snippet": "setFromEditor ${2:fromEditor}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "handle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFSMVariable",
              "description": "Set variable to given value in the variable space of given FSM.\nThe FSM handle is the number returned by the execFSM command.",
              "snippet": "setFSMVariable [${3:name}, ${4:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFuel",
              "description": "Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed.",
              "snippet": "setFuel ${2:amount}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFuelCargo",
              "description": "Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1)\nNote, the carrying capacity of each side's refuel trucks differ.",
              "snippet": "setFuelCargo ${2:amount}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIcon",
              "description": "Sets group icon properties.",
              "snippet": "setGroupIcon ${2:[${3:id}, ${4:icon}, ${5:offset}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconParams",
              "description": "Set group icons parameters. [color,string,float,bool]",
              "snippet": "setGroupIconParams ${2:properties}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconsSelectable",
              "description": "Sets if group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.",
              "snippet": "setGroupIconsSelectable ${1:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Nothing, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconsVisible",
              "description": "Sets if group icons added with addGroupIcon are visible on map and in the HUD.\nSince Arma 3 v1.93.145657 this command returns Nothing as it should",
              "snippet": "setGroupIconsVisible ${1:[${2:showOnMap}, ${3:showOnHUD}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupId",
              "description": "Sets the group radio callsign, how it will be displayed in radio chat. Two groups on the same side cannot have the same callsign (different side is possible). When trying to apply the same callsign to two groups of the same side, the callsigns will simply be swapped, e.g:\ngroup1 setGroupId [\"Active Group\"];\ngroup2 setGroupId [\"Inactive Group\"];\n\ngroup2 setGroupId [\"Active Group\"]; //\u00a0group1 is \"Inactive Group\" now\n\nThe identity setup can also consist of format keywords (marked with\u00a0%) and param keywords taken from CfgWorlds config.\nBasically it is like format command but with some special group keywords (See Example 2).\n\nPossible Arma 3 values: Show text\n\n%GroupSquad:\n\n\"Squad1\" \u2192 1\n\"Squad2\" \u2192 2\n\"Squad3\" \u2192 3\n\"Squad4\" \u2192 4\n%GroupPlatoon:\n\n\"Platoon1\" \u2192 1\n\"Platoon2\" \u2192 2\n\"Platoon3\" \u2192 3\n\"Platoon4\" \u2192 4\n%GroupCompany:\n\n\"CompanyAlpha\" \u2192 Alpha\n\"CompanyBravo\" \u2192 Bravo\n\"CompanyCharlie\" \u2192 Charlie\n\"CompanyDelta\" \u2192 Delta\n\"CompanyEcho\" \u2192 Echo\n\"CompanyFoxtrot\" \u2192 Foxtrot\n\"CompanyGolf\" \u2192 Golf\n\"CompanyHotel\" \u2192 Hotel\n\"CompanyIndia\" \u2192 India\n\"CompanyKilo\" \u2192 Kilo\n\"CompanyLima\" \u2192 Lima\n\"CompanyMike\" \u2192 Mike\n\"CompanyNovember\" \u2192 November\n\"CompanyOscar\" \u2192 Oscar\n\"CompanyPapa\" \u2192 Papa\n\"CompanyQuebec\" \u2192 Quebec\n\"CompanyRomeo\" \u2192 Romeo\n\"CompanySierra\" \u2192 Sierra\n\"CompanyTango\" \u2192 Tango\n\"CompanyUniform\" \u2192 Uniform\n\"CompanyVictor\" \u2192 Victor\n\"CompanyWhiskey\" \u2192 Whiskey\n\"CompanyXray\" \u2192 X-Ray\n\"CompanyYankee\" \u2192 Yankee\n\"CompanyZulu\" \u2192 Zulu\n%GroupNames:\n\n\"Alpha\" \u2192 Alpha\n\"Bravo\" \u2192 Bravo\n\"Charlie\" \u2192 Charlie\n\"Delta\" \u2192 Delta\n\"Echo\" \u2192 Echo\n\"Foxtrot\" \u2192 Foxtrot\n\"Golf\" \u2192 Golf\n\"Hotel\" \u2192 Hotel\n\"November\" \u2192 November\n\"Kilo\" \u2192 Kilo\n\"Yankee\" \u2192 Yankee\n\"Zulu\" \u2192 Zulu\n\"Two\" \u2192 Two\n\"Three\" \u2192 Three\n\"Buffalo\" \u2192 Buffalo\n\"Guardian\" \u2192 Guardian\n\"Convoy\" \u2192 Convoy\n\"Fox\" \u2192 Fox\n%GroupColors:\n\n\"GroupColor0\" \u2192 (nothing)\n\"GroupColor1\" \u2192 Black\n\"GroupColor2\" \u2192 Red\n\"GroupColor3\" \u2192 Green\n\"GroupColor4\" \u2192 Blue\n\"GroupColor5\" \u2192 Yellow\n\"GroupColor6\" \u2192 Orange\n\"GroupColor7\" \u2192 Pink\n\"Six\" \u2192 Six\n\n\n\n\n\n\n\u24d8From Armed Assault, you can freely decide the callsign, e.g  group player setGroupId [\"First Assault Recon Team\"];.\n\u24d8In Operation Flashpoint, group ID cannot be freely decided and format must be of [letter, colour, picture] or [letter, colour]. Possible values: Show text\n\nLetter:\n\n\"Alpha\"\n\"Bravo\"\n\"Charlie\"\n\"Delta\"\n\"Echo\"\n\"Foxtrot\"\n\"Golf\"\n\"Hotel\"\n\"Kilo\"\n\"Yankee\"\n\"Zulu\"\n\"Buffalo\"\n\"Convoy\"\n\"Guardian\"\n\"November\"\n\"Two\"\n\"Three\"\n\"Fox\"\nColour:\n\n\"GroupColor0\" \u2192 (nothing)\n\"GroupColor1\" \u2192 Black\n\"GroupColor2\" \u2192 Red\n\"GroupColor3\" \u2192 Green\n\"GroupColor4\" \u2192 Blue\n\"GroupColor5\" \u2192 Yellow\n\"GroupColor6\" \u2192 Orange\n\"GroupColor7\" \u2192 Pink\n\"Six\" \u2192 Six\n\n\n\n\n\nThe radio callsign strings can be overwritten in a mission by writing Stringtable entries of the same name. Some entry names: Show text\n\n\nSTR_CFG_GRPNAMES_ALPHA\nSTR_CFG_GRPNAMES_FOX\nSTR_CFG_GRPCOL_BLACK\nSTR_CFG_GRPNAMES_SIX (unlike its name suggests, this is a \"group colour\")\nSTR_CFG_FIREFLYBASE\nSTR_CFG_PAPABEAR\nSTR_CFG_HQ_BASE\n\n\n\n\n\n\nFor the global variant of this command see setGroupIdGlobal.",
              "snippet": "setGroupId ${2:[${3:nameFormat}, ${4:nameParam1}, ..., nameParamN]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIdGlobal",
              "description": "A global equivalent of  setGroupId.",
              "snippet": "setGroupIdGlobal [${2:format}, keyword1, ..., keywordN]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupOwner",
              "description": "Changes the ownership of a group (and all its units) to a given client. The group leader must not be a player. This command only works when called from the server. Returns true if locality was changed. For agents use setOwner command.",
              "snippet": "setGroupOwner ${2:clientID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGusts",
              "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.",
              "snippet": "setGusts ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHideBehind",
              "description": "Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom. Command is not functional in ArmA 2.\n\u26a0This command is not implemented",
              "snippet": "setHideBehind ${2:[${3:objectWhereHide}, ${4:hidePosition}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHit",
              "description": "Set damage on a part of an object.\n\u24d8Some part names are in Czech; see translation table.",
              "snippet": "setHit ${1:[${3:part}, ${4:damage}, ${5:useEffects}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHitIndex",
              "description": "Set the current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.\n0: no damage\n1: full damage",
              "snippet": "setHitIndex [${2:hitPartIndex}, ${3:damage}, ${4:useEffects}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHitPointDamage",
              "description": "Set the current level of damage for a specific Hit Point (specified by its config class).\n0: no damage\n1: full damage\nSee also BIS_fnc_setHitPointDamage for setting hit with dependency",
              "snippet": "setHitPointDamage [${3:hitPointName}, ${4:damage}, ${5:useEffects}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHorizonParallaxCoef",
              "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).",
              "snippet": "setHorizonParallaxCoef ${1:coef}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHUDMovementLevels",
              "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.",
              "snippet": "setHUDMovementLevels [${2:minSpeed}, ${3:maxSpeed}, ${4:minAlt}, ${5:maxAlt}, ${6:minDir}, ${7:maxDir}, ${8:targetOrPosition}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setIdentity",
              "description": "Sets identity of a person. The identities could be defined in a custom config in Description.ext or in the main config. For a list of available main config values see CfgIdentities.\n \nThis command is an aggregate of the following commands: setName, setFace, setSpeaker, setNameSound, setPitch, only the values are loaded from the given config. It also includes value for glasses for which currently there is no direct command, instead there is an inventory command addGoggles.",
              "snippet": "setIdentity ${2:identity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setImportance",
              "description": "Sets the importance value of location.",
              "snippet": "setImportance ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setInfoPanel",
              "description": "Opens given component or first component of given component type on specified info panel.",
              "snippet": "setInfoPanel [${1:infopanelId}, ${2:componentClassOrType}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "team ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLeader",
              "description": "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.",
              "snippet": "setLeader ${2:leader}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightAmbient",
              "description": "Set ambient color of light. This includes surfaces that face away from the light, unlike setLightColor.",
              "snippet": "setLightAmbient ${2:[r, g, b]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightAttenuation",
              "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).",
              "snippet": "setLightAttenuation ${2:[${3:start}, ${4:constant}, ${5:linear}, ${6:quadratic}, ${7:hardlimitstart}, ${8:hardlimitend}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightBrightness",
              "description": "Set brightness of light.",
              "snippet": "setLightBrightness ${2:brightness}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightColor",
              "description": "Set diffuse color of light. Illuminates surfaces that are facing the light.",
              "snippet": "setLightColor ${2:[r, g, b]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightDayLight",
              "description": "Sets if light can be used during the day.",
              "snippet": "setLightDayLight ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightFlareMaxDistance",
              "description": "Sets max distance where the flare is visible.",
              "snippet": "setLightFlareMaxDistance ${2:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightFlareSize",
              "description": "Sets relative size of the flare for the light.",
              "snippet": "setLightFlareSize ${2:size}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightIntensity",
              "description": "Sets intensity of light.",
              "snippet": "setLightIntensity ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightnings",
              "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\nNOTE: This command will have no effect (even though the value of lightnings changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.",
              "snippet": "setLightnings ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "light ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightUseFlare",
              "description": "Sets if light has flare.",
              "snippet": "setLightUseFlare ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLocalWindParams",
              "description": "Sets parameters for helicopter rotor wash. Visually it affects how much the grass, bushes and trees bend and how much the particles blown under a helicopter and how big is the area of the effect. Default [1.0, 1.0].\n\u24d8Both parameters can't take 0, it'll just be ignored. If you need to disable effects, put very small values.",
              "snippet": "setLocalWindParams ${1:[${2:strength}, ${3:diameter}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMagazineTurretAmmo",
              "description": "Sets ammo count to given amount for given turret.\n\u26a0Broken when vehicle has multiple magazines of the same type",
              "snippet": "setMagazineTurretAmmo ${2:[magazineClass, ammoCount, turretPath]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "marker ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerAlpha",
              "description": "Sets the marker alpha. The marker is modified on all computers in a network session.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions.",
              "snippet": "setMarkerAlpha ${2:alpha}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "marker ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerAlphaLocal",
              "description": "Sets the marker alpha. The marker is only modified on the computer where the command is called.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions.",
              "snippet": "setMarkerAlphaLocal ${2:alpha}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerBrush",
              "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n\"Solid\"\n\"SolidFull\" (A3 only)\n\"Horizontal\"\n\"Vertical\"\n\"Grid\"\n\"FDiagonal\"\n\"BDiagonal\"\n\"DiagGrid\"\n\"Cross\"\n\"Border\"\n\"SolidBorder\"",
              "snippet": "setMarkerBrush ${2:brush}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerBrushLocal",
              "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n\"Solid\"\n\"SolidFull\" (A3 only)\n\"Horizontal\"\n\"Vertical\"\n\"Grid\"\n\"FDiagonal\"\n\"BDiagonal\"\n\"DiagGrid\"\n\"Cross\"\n\"Border\" (A2/A3 only)\n\"SolidBorder\" (OA/A3 only)",
              "snippet": "setMarkerBrushLocal ${2:brush}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerColor",
              "description": "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3",
              "snippet": "setMarkerColor ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerColorLocal",
              "description": "Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3",
              "snippet": "setMarkerColorLocal ${2:color}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerDir",
              "description": "Sets the orientation of the marker. Angle is in degrees.",
              "snippet": "setMarkerDir ${2:angle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerDirLocal",
              "description": "Sets the orientation of the marker. Angle is in degrees.",
              "snippet": "setMarkerDirLocal ${2:angle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerPos",
              "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. When Object is used for position, PositionWorld of the object is used.",
              "snippet": "setMarkerPos ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerPosLocal",
              "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. When Object is used for position, PositionWorld of the object is used.",
              "snippet": "setMarkerPosLocal ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerShape",
              "description": "Selects shape (actual type) of the marker. The shape can be:\n\"ICON\"\n\"RECTANGLE\"\n\"ELLIPSE\"\n\"POLYLINE\"",
              "snippet": "setMarkerShape ${2:shape}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerShapeLocal",
              "description": "Selects shape (actual type) of the local marker. The shape can be:\n\"ICON\"\n\"RECTANGLE\"\n\"ELLIPSE\"\n\"POLYLINE\"",
              "snippet": "setMarkerShapeLocal ${2:shape}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerSize",
              "description": "Set marker size.\nSize is in format [a-axis, b-axis].",
              "snippet": "setMarkerSize ${2:[${3:a-axis}, ${4:b-axis}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerSizeLocal",
              "description": "Set marker size.\nSize is in format [a-axis, b-axis].",
              "snippet": "setMarkerSizeLocal ${2:[${3:a-axis}, ${4:b-axis}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerText",
              "description": "Sets the text label of an existing marker.",
              "snippet": "setMarkerText ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerTextLocal",
              "description": "Sets the text label of an existing marker.",
              "snippet": "setMarkerTextLocal ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerType",
              "description": "Sets marker type. Marker type is a class name in cfgMarkers.",
              "snippet": "setMarkerType ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "markerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerTypeLocal",
              "description": "Sets marker type locally. Marker type is a class name in cfgMarkers.",
              "snippet": "setMarkerTypeLocal ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "myObject ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMass",
              "description": "Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.\n\u26a0When main syntax is used on local vehicle, the change is global. When alternative syntax is used with time transition on local vehicle, the gradual mass change doesn't happen on remote clients, only final mass is applied after the given time. If you need gradual change on remote clients too,  remote execute setMass globally.",
              "snippet": "setMass ${2:mass}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "myObject ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMass",
              "description": "Changes the mass of a PhysX object. When using the alternative syntax the mass change is gradual during the given time. A time of zero means immediate change.\n\u26a0When main syntax is used on local vehicle, the change is global. When alternative syntax is used with time transition on local vehicle, the gradual mass change doesn't happen on remote clients, only final mass is applied after the given time. If you need gradual change on remote clients too,  remote execute setMass globally.",
              "snippet": "setMass [${2:mass}, ${3:time}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMimic",
              "description": "Sets person's facial expression. To set it back to default, use \"\".\nPrior to Arma 3 v2.01.146630 Mimics must be written in all lower case letters.",
              "snippet": "setMimic ${2:mimic}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = munition ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMissileTarget",
              "description": "Sets a guided missile target. Doesn't work for all types of missiles. If target is dead, target is ignored. The target has to be inside configured missile targeting cone for command to work.",
              "snippet": "setMissileTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "munition ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMissileTargetPos",
              "description": "Sets a guided munition target position. The munition must have manualControl config to use this command. The target position has to be inside configured missile targeting cone for command to work.",
              "snippet": "setMissileTargetPos ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMousePosition",
              "description": "Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area.",
              "snippet": "setMousePosition ${1:[${2:x}, ${3:y}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEffect",
              "description": "Defines the music track played on activation.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track).",
              "snippet": "setMusicEffect ${2:track}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEffect",
              "description": "Defines the music track played on activation.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track).",
              "snippet": "setMusicEffect ${2:track}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEventHandler",
              "description": "Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them.",
              "snippet": "setMusicEventHandler ${1:[${2:type}, ${3:function}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "snippet": "setName ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "snippet": "setName ${2:[${3:name}, ${4:firstName}, ${5:lastName}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "text": "location"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setNameSound",
              "description": "Sets the nameSound of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\".\n\n\u24d8See CfgIdentities - NameSounds for common values.\nNote that any word from configfile >> \"RadioProtocolENG\" >> \"Words\" is accepted (e.g \"veh_infantry_Sniper_s\").",
              "snippet": "setNameSound ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectArguments",
              "description": "Set object arguments in mission editor.\n\u24d8Some Old Editor Command",
              "snippet": "setObjectArguments ${2:[object,[name1,value1,...]]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectMaterial",
              "description": "Sets material of object selection. The selection number is defined through the  hiddenselection[]={} array in the vehicle's config (starting with 0).",
              "snippet": "setObjectMaterial ${2:[${3:selectionNumber}, ${4:material}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectMaterialGlobal",
              "description": "Set the material of the given selection on all computers in a network session.",
              "snippet": "setObjectMaterialGlobal [${3:selection}, ${4:material}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectProxy",
              "description": "Set the proxy object associated with the given editor object.\n\u24d8Some Old Editor Command",
              "snippet": "setObjectProxy ${2:[object,proxy object]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectTexture",
              "description": "Textures object selection with texture named in array. \n\nArray has the form [selectionNumber, \"Texture\"].\n\nThe selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).\nNOTES: \nNot all objects could be textured this way. To find out, run getObjectTextures command on an object. Empty array [] usually indicates it cannot be textured.\nAll textures must have resolution 2^x / 2^y (e.g. 16 / 16, 16 / 32, 64 / 256, 512 / 512, etc). The largest texture size commonly supported by graphics cards and RV engine is 4096x4096\nSupported formats: .pac, .paa, .jpg, .jpeg, .ogg, .ogv",
              "snippet": "setObjectTexture ${2:[${3:selectionNumber},${4:texture}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectTextureGlobal",
              "description": "Set the texture of the given selection on all computers in a network session.\nNot all objects can be textured this way. See getObjectTextures for supported texture selections.\n\n\u24d8All textures must have a resolution of 2^x / 2^y (e.g. 16x16, 16x32, 64x256, 512x32, etc). The largest texture size supported by the RV engine is 4096x4096.",
              "snippet": "setObjectTextureGlobal [${3:selection}, ${4:texture}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectViewDistance",
              "description": "Sets the rendering distance of objects (and shadows).",
              "snippet": "setObjectViewDistance ${1:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectViewDistance",
              "description": "Sets the rendering distance of objects (and shadows).",
              "snippet": "setObjectViewDistance ${1:[${2:objectDistance}, ${3:shadowDistance}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOvercast",
              "description": "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds.",
              "snippet": "setOvercast ${2:overcast}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOwner",
              "description": "From server machine, change the ownership of an object to a given client. Returns true if locality was changed.\nSince Arma 3 v1.40, this command should not be used to transfer ownership of units with AI (agents are an exception to this rule). \nUsing command in an unintended way will log a message to .rpt file.\nTo transfer ownership of all AI units in a group properly, use setGroupOwner instead.",
              "snippet": "setOwner ${2:clientID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOxygenRemaining",
              "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.",
              "snippet": "setOxygenRemaining ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "particleSource ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleCircle",
              "description": "Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleCircle\n[\n\tcircleRadius,\n\tcircleVelocity\n];",
              "snippet": "setParticleCircle ${2:[${3:radius}, ${4:velocity}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "source ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleClass",
              "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use setParticleParams subsequently if you need to overwrite some values.\n\u26a0If CfgCloudlets class contains  simple expressions, they will not be evaluated by this command, which might make the whole class unusable in script.",
              "snippet": "setParticleClass ${2:className}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "source ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleFire",
              "description": "Set fire parameters to particle effect.\n\nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleFire\n[\n\tcoreIntensity,\n\tcoreDistance,\n\tdamageTime\n];",
              "snippet": "setParticleFire ${2:[${3:coreIntensity}, ${4:coreDistance}, ${5:damageTime}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "particleSource ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleParams",
              "description": "Set parameters to particle source. Array is in format ParticleArray. \n\nSince Arma 3 version 1.11.114706 you can use this command to overwrite many values set by setParticleClass, particularity those defined in ParticleArray. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleParams\n[\n\t/* String or Array - If string then the name of the particleShape. And following default values are used:\n\t\tparticleFSNtieth = 1\n\t\tparticleFSIndex = 0\n\t\tparticleFSFrameCount = 1\n\t\tparticleFSLoop = 1\n\t*/\n\t[\n\t\tparticleShape, /*String*/\n\t\tparticleFSNtieth, /*Number*/\n\t\tparticleFSIndex, /*Number*/\n\t\tparticleFSFrameCount, /*Number*/\n\t\tparticleFSLoop /*Optional - Number. Default: 1*/\n\t],\n\tanimationName, /*String*/\n\tparticleType, /*String - Enum: Billboard, SpaceObject*/\n\ttimerPeriod, /*Number*/\n\tlifeTime, /*Number*/\n\tposition, /*3D Array of numbers as relative position to particleSource or (if object at index 18 is set) object. \n\t\t\tOr (if object at index 18 is set) String as memoryPoint of object.*/\n\tmoveVelocity, /*3D Array of numbers.*/\n\trotationVelocity, /*Number*/\n\tweight, /*Number*/\n\tvolume, /*Number*/\n\trubbing, /*Number*/\n\tsize, /*Array of Number*/\n\tcolor, /*Array of Array of RGBA Numbers*/\n\tanimationSpeed, /*Array of Number*/\n\trandomDirectionPeriod, /*Number*/\n\trandomDirectionIntensity, /*Number*/\n\tonTimerScript, /*String*/\n\tbeforeDestroyScript, /*String*/\n\tthis, /*Object*/\n\tangle, /*Optional Number - Default: 0*/\n\tonSurface, /*Optional Boolean*/\n\tbounceOnSurface, /*Optional Number*/\n\temissiveColor, /*Optional Array of Array of RGBA Numbers*/\n\tvectorDir /*Optional 3D Array Vector dir. Since Arma 3 v1.92 it is possible to set the initial direction of the SpaceObject */\n];",
              "snippet": "setParticleParams ${2:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "particleSource ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleRandom",
              "description": "Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleRandom\n[\n\tlifeTimeVar,\n\tpositionVar,\n\tmoveVelocityVar,\n\trotationVelocityVar,\n\tsizeVar,\n\tcolorVar,\n\trandomDirectionPeriodVar,\n\trandomDirectionIntensityVar,\n\tangleVar,\n\tbounceOnSurfaceVar\n];",
              "snippet": "setParticleRandom ${2:[lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraDirection",
              "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).",
              "snippet": "setPilotCameraDirection ${2:Vector3D}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraRotation",
              "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
              "snippet": "setPilotCameraRotation ${2:rotation}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraTarget",
              "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. \nTo track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type.\nUsing objNull will unlock the camera",
              "snippet": "setPilotCameraTarget ${2:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotLight",
              "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"LightOn\"/\"LightOff\"",
              "snippet": "setPilotLight ${2:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "name ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPiPEffect",
              "description": "Sets Render Target's visual effect (Picture-in-Picture). \n0: Normal - [0]\n1: Night Vision - [1]\n2: Thermal - [2]\n3: Color Correction - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]\n4: Mirror - [4] <currently not working>\n5: Chromatic Aberration - [5, enabled, powerx, powery, (bool) aspectCorrection] <currently not working>\n6:  Film Grain - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] <currently not working>\n7: Thermal Inverted [7]\n8: Green Thermal [8]",
              "snippet": "setPiPEffect ${2:[${3:effect}, optionalParam1, ..., optionalParamN]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPitch",
              "description": "Sets the pitch of a persons voice.",
              "snippet": "setPitch ${2:pitch}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlateNumber",
              "description": "Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!",
              "snippet": "setPlateNumber ${2:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlayable",
              "description": "Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch.",
              "snippet": "setPlayable ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlayerRespawnTime",
              "description": "Sets the time interval (in seconds) that the player must wait before respawn. It resets to mission default on mission start. In Single Player or when respawn type is GROUP or SIDE in Multiplayer, setting player respawn time has no effect, and playerRespawnTime will always return -1.",
              "snippet": "setPlayerRespawnTime ${1:interval}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlayerVoNVolume",
              "description": "Sets provided player's Voice over Network (VoN) volume.",
              "snippet": "setPlayerVoNVolume ${2:volume}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPos",
              "description": "Sets object position. The position is clamped to the bound of minXYZ: [-50k,-50k,-50k]; maxXYZ: [500k,500k,500k] (See Position)",
              "snippet": "setPos ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASL",
              "description": "Sets the object position above sea level. Given position must be in PositionASL format.",
              "snippet": "setPosASL ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASL2",
              "description": "Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center. \n\u26a0This command was deactivated and has no effect. Use setPosWorld instead.",
              "snippet": "setPosASL2 ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASLW",
              "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.",
              "snippet": "setPosASLW ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosATL",
              "description": "Sets the position of an object relative to the terrain.",
              "snippet": "setPosATL ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosition",
              "description": "Sets the position of a location.",
              "snippet": "setPosition ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosWorld",
              "description": "Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0].",
              "snippet": "setPosWorld ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPylonLoadout",
              "description": "Adds/overrides loadout to a vehicle pylon. TransportPylonsComponent in vehicle config and pylonWeapon in the magazine config are required to run.",
              "snippet": "setPylonLoadout ${2:[${3:pylon}, ${4:magazine}, ${5:forced}, ${6:turret}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPylonsPriority",
              "description": "Overrides default pylons priorities",
              "snippet": "setPylonsPriority [priority pylon1, priority pylon2, ...]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "index ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRadioMsg",
              "description": "Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title",
              "snippet": "setRadioMsg ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRain",
              "description": "Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change.\nA rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7.\n\nSince Arma 3 this command is MP synchronised:\nIf executed on server, the changes will propagate globally.\nIf executed on client, the effect is temporary and will soon change to the server setting.\nMinimum overcast needed for rain in Arma 3 is 0.5.",
              "snippet": "setRain ${2:rain}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRainbow",
              "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
              "snippet": "setRainbow ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRandomLip",
              "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it is talking.",
              "snippet": "setRandomLip ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRank",
              "description": "Sets rank of given unit.\n\nPossible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL. \n\nSince Arma 3 v1.67 this command is",
              "snippet": "setRank ${2:rank}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRectangular",
              "description": "Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.",
              "snippet": "setRectangular ${2:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRepairCargo",
              "description": "Set amount of repair resources in cargo space of repair vehicle.\nAmount 1 is full cargo.",
              "snippet": "setRepairCargo ${2:amount}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRotorBrakeRTD",
              "description": "Toggle a helicopter's rotor brake on or off.\n0: off\n1: on\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setRotorBrakeRTD ${2:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setShadowDistance",
              "description": "Sets the shadows rendering distance.",
              "snippet": "setShadowDistance ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "projectile ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setShotParents",
              "description": "Sets vehicle and instigator pair for the given projectile.",
              "snippet": "setShotParents ${2:[${3:vehicle}, ${4:instigator}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSide",
              "description": "Sets a location's side. The default side is Unknown.",
              "snippet": "setSide ${2:side}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "taskID ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskAlwaysVisible",
              "description": "Makes the given task allways visible or not.",
              "snippet": "setSimpleTaskAlwaysVisible ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskCustomData",
              "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.",
              "snippet": "setSimpleTaskCustomData [${2:IconPath}, ${3:tooltip}, ${4:description}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskDescription",
              "description": "Attach descriptions to the simple task.",
              "snippet": "setSimpleTaskDescription ${2:[${3:description}, ${4:descriptionShort}, ${5:descriptionHUD}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskDestination",
              "description": "Attach a destination to the simple task.Overrides setSimpleTaskTarget",
              "snippet": "setSimpleTaskDestination ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskTarget",
              "description": "Attach a target to the simple task.Overrides setSimpleTaskDestination.",
              "snippet": "setSimpleTaskTarget [${2:target}, ${3:precisePosition}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskType",
              "description": "Attach type to the simple task. See Default Task Types.",
              "snippet": "setSimpleTaskType ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimulWeatherLayers",
              "description": "Sets number of simul weather layers, affects quality of simul weather clouds.",
              "snippet": "setSimulWeatherLayers ${1:layers}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSize",
              "description": "Sets the size (radius)  of a location.\n\nThe width  is 2 * x, the height is 2 * y.",
              "snippet": "setSize ${2:size}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSkill",
              "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.\n1.00 The alternative syntax allows fine-tuning AI Sub-skills.\nAvailable sub-skills are:\naimingAccuracy\naimingShake\naimingSpeed\nendurance\nspotDistance\nspotTime\ncourage\nreloadSpeed\ncommanding\ngeneral\nThe value of a sub-skill is interpolated into a range defined in CfgAISkill.",
              "snippet": "setSkill ${2:skill}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSkill",
              "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.\n1.00 The alternative syntax allows fine-tuning AI Sub-skills.\nAvailable sub-skills are:\naimingAccuracy\naimingShake\naimingSpeed\nendurance\nspotDistance\nspotTime\ncourage\nreloadSpeed\ncommanding\ngeneral\nThe value of a sub-skill is interpolated into a range defined in CfgAISkill.",
              "snippet": "setSkill [${2:skillName}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = heli ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSlingLoad",
              "description": "Creates a sling loading from a helicopter to an entity if possible. To unload cargo, pass objNull as second param. \n\u24d8FROM object has to be a helicoper, alive with  rope attachment enabled, TO object has to be an entity, alive with  rope attachment enabled.",
              "snippet": "setSlingLoad ${2:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSoundEffect",
              "description": "Defines the different sound effects. \n\nSound - plays a 2D sound from CfgSounds\nVoice - plays a 3D sound from CfgSounds\nSoundEnv - plays an environmental sound from CfgEnvSounds\nSoundDet (only for triggers) - creates a dynamic sound object attached to a trigger defined in CfgSFX\n\nTo stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). Also use \"$NONE$\" to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).",
              "snippet": "setSoundEffect ${2:[sound, voice, soundEnv, soundDet]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSoundEffect",
              "description": "Defines the different sound effects. \n\nSound - plays a 2D sound from CfgSounds\nVoice - plays a 3D sound from CfgSounds\nSoundEnv - plays an environmental sound from CfgEnvSounds\nSoundDet (only for triggers) - creates a dynamic sound object attached to a trigger defined in CfgSFX\n\nTo stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). Also use \"$NONE$\" to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).",
              "snippet": "setSoundEffect ${2:[sound, voice, soundEnv, soundDet]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeaker",
              "description": "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server: \n\n[bob, \"Male02GRE\"] remoteExec [\"setSpeaker\", 0, bob];",
              "snippet": "setSpeaker ${2:speaker}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeech",
              "description": "Add speech to location.",
              "snippet": "setSpeech ${2:speech}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "groupName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeedMode",
              "description": "Sets group speed mode. If unit is passed as param, unit's group is used. Mode may be one of: \n\"UNCHANGED\" (unchanged)\n\"LIMITED\" (half speed)\n\"NORMAL\" (full speed, maintain formation)\n\"FULL\" (do not wait for any other units in formation)",
              "snippet": "setSpeedMode ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStamina",
              "description": "Set units' stamina (seconds until depletion)",
              "snippet": "setStamina ${2:stamina}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStaminaScheme",
              "description": "Set stamina bar color. The scheme can be \"Normal\", \"FastDrain\", \"Exhausted\" or \"Default\".",
              "snippet": "setStaminaScheme ${1:scheme}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStarterRTD",
              "description": "Toggle the starter for the given helicopter engine(s) on or off. \nengine index 0: engine #1\nengine index 1: engine #2\nengine index 2: engine #3\nengine index -1: all engines",
              "snippet": "setStarterRTD [${2:enable}, ${3:engineIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStatValue",
              "description": "Sets a value to a given stat. \nA list of possible StatNames can be found here: Arma 3 Stat Names\nIts important to note that most Stats are restricted to scripts and missions in certain paths.\nFor example \"ExpWarlockDown\" is restricted to scripts in any subdirectory of \"a3\\Missions_F_Exp\\Campaign\\Missions\\\"",
              "snippet": "setStatValue ${1:[${2:name}, ${3:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSuppression",
              "description": "Sets the given suppression value for the given unit. The value range is from 0 to 1.   \n\u26a0The unit must not be objNull, must be local and alive",
              "snippet": "setSuppression ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSystemOfUnits",
              "description": "Set system of units. This will only impact gauges from advanced flight model.\n\u26a0This command is buggy: any value other than 0 (metric) will display both units at the same time.",
              "snippet": "setSystemOfUnits ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTargetAge",
              "description": "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.\n\nPossible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\".",
              "snippet": "setTargetAge ${2:age}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "obj ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTaskMarkerOffset",
              "description": "Sets the task marker position in model space.",
              "snippet": "setTaskState ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTaskResult",
              "description": "Set a result of the task.",
              "snippet": "setTaskResult ${2:[state,result]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "task ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTaskState",
              "description": "Set the state of a given task.\n\nState value may be one of:\n\"None\"\n\"Created\"\n\"Assigned\"\n\"Succeeded\"\n\"Failed\"\n\"Canceled\"",
              "snippet": "setTaskState ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTerrainGrid",
              "description": "Sets the desired  terrain resolution (in meters). For default landscapes the supported resolutions are: \n\n50 - smoothest, less lag\n25 - default in multiplayer\n12.5 - default in single player\n6.25\n3.125 - bumpiest, higher lag\n\nIf unsupported resolution is selected, the nearest supported resolution is used instead. Higher number means less vertices are used for terrain rendering, making distant hills less smooth. Value 12.5 corresponds to selecting Terrain Detail Normal in Video options, 50 to Very Low, 3.125 to Very High. In older games like Armed Assault terrain resolution is fixed, determined by the world created.",
              "snippet": "setTerrainGrid ${1:grid}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setText",
              "description": "Sets the text associated with a location. This text will be displayed on the game map at the location's position.",
              "snippet": "setText ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setThrottleRTD",
              "description": "Set the throttle for the given engine(s) of a helicopter. \nengine index 0: engine #1\nengine index 1: engine #2\nengine index 2: engine #3\nengine index -1: all engines\n\nthrottle 0: fully closed\nthrottle ~0.15: average flight idle\nthrottle 1: full",
              "snippet": "setThrottleRTD [${2:value}, ${3:engineIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTimeMultiplier",
              "description": "Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems.",
              "snippet": "setTimeMultiplier ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTitleEffect",
              "description": "Defines the title effect via [Type, Effect, Text] where\n\n'Type' can be \n\"NONE\",\n\"OBJECT\",\n'Text' defines the shown object , a subclass of CfgTitles.\n\n\"RES\"\n'Text' defines a resource class, a subclass of RscTitles.\n\"TEXT\"\nThe 'Text' is shown as text itself. 'Effect' defines a subtype: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" or \"WHITE IN\".",
              "snippet": "setTitleEffect ${2:[type, effect, text]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTitleEffect",
              "description": "Defines the title effect via [Type, Effect, Text] where\n\n'Type' can be \n\"NONE\",\n\"OBJECT\",\n'Text' defines the shown object , a subclass of CfgTitles.\n\n\"RES\"\n'Text' defines a resource class, a subclass of RscTitles.\n\"TEXT\"\nThe 'Text' is shown as text itself. 'Effect' defines a subtype: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" or \"WHITE IN\".",
              "snippet": "setTitleEffect ${2:[type, effect, text]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setToneMapping",
              "description": "Applies a specific tone mapping to the game.\n\nThis command is not present in Arma 3.",
              "snippet": "setToneMapping ${1:toneName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "toneName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setToneMappingParams",
              "description": "Edits tone mapping parameters.\n\nThis command is not present in Arma 3.",
              "snippet": "setToneMappingParams ${2:params}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficDensity",
              "description": "Set the density of ambient cars in a rectangle (in cars per kilometer).",
              "snippet": "setTrafficDensity [${1:density}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficDistance",
              "description": "Set maximum ambient traffic draw distance (in 2D).",
              "snippet": "setTrafficDistance ${1:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficGap",
              "description": "Set the average gap between ambient cars in a rectangle (in meters).",
              "snippet": "setTrafficGap [${1:gap}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficSpeed",
              "description": "Set ambient traffic speed in a rectangle (in kilometers per hour).",
              "snippet": "setTrafficSpeed [${1:speed}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerActivation",
              "description": "Defines the trigger activation type. \n\nSee ArmA:Mission Editor - Triggers for a thorough overview of triggers and its fields for activation, effects, etc.   Since Arma 3 v1.67, \"ANYPLAYER\" activation can be used to detect any player.",
              "snippet": "setTriggerActivation [${2:by}, ${3:type}, ${4:repeating}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerArea",
              "description": "Defines the area monitored by the given trigger. The area could be either rectangular or elliptical. Since Arma 3 v1.59.135137 it is possible to define 3 dimensional area to monitor by specifying extra param for the area height (see pic). \nJust like with a and b dimensions, c dimension will alter area in opposite directions from the trigger position along z axis. Therefore if the trigger position is on the surface, half of the trigger area will be above the surface and half below. To place the whole area above the surface, adjust trigger position (move it up c meters). If c is not specified or <= 0, the trigger area considered infinitely tall, like in old triggers.",
              "snippet": "setTriggerArea ${2:[${3:a}, ${4:b}, ${5:angle}, ${6:isRectangle}, ${7:c}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerInterval",
              "description": "Sets the interval in seconds for trigger condition check.\n\n\u24d8Triggers are configured to check condition approx. every 0.5 second by default. This command allows either to slow down or to speed up default check interval per trigger. Setting interval to 0 will make the trigger check its condition every frame. However, when trigger is attached to some object, the trigger will inherit the simulation frequency of the object it is  attached to. This command cannot change the interval of the attached trigger. The trigger can also be \"frozen\" with enableSimulation command.",
              "snippet": "setTriggerInterval ${2:interval}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerStatements",
              "description": "Defines trigger condition, activation and deactivation statements. Trigger condition has to return Boolean. true will activate the trigger, false will deactivate it (only if activation is set to repeat). thisList returns the same result as list command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.",
              "snippet": "setTriggerStatements ${2:[${3:condition}, ${4:activation}, deactivation]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerText",
              "description": "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.",
              "snippet": "setTriggerText ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerTimeout",
              "description": "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time. \nFor a normal trigger, min, mid and max are used to generate random duration according to Gaussian Distribution[1]. For a \"Seized\" type of trigger, the duration value is generated using side ruling power",
              "snippet": "setTriggerTimeout ${2:[${3:min}, ${4:mid}, ${5:max}, ${6:interruptable}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerType",
              "description": "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):\n\n\"NONE\"\n\"EAST G\" - Guarded by OPFOR - (It is better to use createGuardedPoint instead)\n\"WEST G\" - Guarded by BLUFOR - (It is better to use createGuardedPoint instead)\n\"GUER G\" - Guarded by Independent - (It is better to use createGuardedPoint instead)\n\"SWITCH\" - Switch waypoints/break loop (see Triggers)\n\"END1\" - End #1\n\"END2\" - End #2\n\"END3\" - End #3\n\"END4\" - End #4\n\"END5\" - End #5\n\"END6\" - End #6\n\"LOOSE\" - (Meant to say LOSE but is misspelt in the game engine).\n\"WIN\" - (Not in editor. Valid enum name but when set, defaults to \"END1\")",
              "snippet": "setTriggerType ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "location ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setType",
              "description": "Changes a location to the specified class. Location classes are defined in CfgLocationTypes.",
              "snippet": "setType ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnconscious",
              "description": "In Arma 2 and since Arma 3 v1.63.136889, this command sets unit into incapacitated state.\nlifeState results:\nArma 2: \"UNCONSCIOUS\"\nArma 3: \"INCAPACITATED\"\n\nAnimation played while incapacitated depends on the injuries received.",
              "snippet": "setUnconscious ${2:set}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMultiplayerSolo",
              "description": "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).",
              "text": "isMultiplayerSolo"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitAbility",
              "description": "Sets skill of given unit. Unlike setSkill, setUnitAbility can set values > 1. Even though the skill command will correctly return set value, the actual unit ability will be capped to max available.",
              "snippet": "setUnitAbility ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitCombatMode",
              "description": "Sets unit's combat mode (engagement rules). Mode may be one of the following: \n\"BLUE\"\u00a0: Never fire, keep formation\n\"GREEN\"\u00a0: Hold fire, keep formation\n\"WHITE\"\u00a0: Hold fire, engage at will/loose formation\n\"YELLOW\"\u00a0: Fire at will, keep formation\n\"RED\"\u00a0: Fire at will, engage at will/loose formation\nSee Combat Modes for more information on combat modes.",
              "snippet": "setUnitCombatMode ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitLoadout",
              "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"};\n\tweapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"};\n\titems[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"};\n\tmagazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"};\n};",
              "snippet": "setUnitLoadout ${2:loadout}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitLoadout",
              "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"};\n\tweapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"};\n\titems[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"};\n\tmagazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"};\n};",
              "snippet": "setUnitLoadout ${2:[${3:loadout}, ${4:fullMagazines}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitLoadout",
              "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"};\n\tweapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"};\n\titems[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"};\n\tmagazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"};\n};",
              "snippet": "setUnitLoadout ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitLoadout",
              "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including  mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:\nclass MyLoadout\n{\n\tuniformClass = \"U_B_CombatUniform_mcam\";\n\tbackpack = \"B_AssaultPack_mcamo\";\n\tlinkedItems[] = {\"V_PlateCarrier1_rgr\",\"H_HelmetB\",\"ItemCompass\",\"ItemWatch\",\"ItemRadio\",\"NVGoggles\"};\n\tweapons[] = {\"arifle_MX_ACO_pointer_F\",\"hgun_P07_F\"};\n\titems[] = {\"FirstAidKit\",\"FirstAidKit\",\"FirstAidKit\"};\n\tmagazines[] = {\"30Rnd_65x39_caseless_mag\",\"16Rnd_9x21_Mag\",\"SmokeShell\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\",\"HandGrenade\"};\n};",
              "snippet": "setUnitLoadout ${2:config}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitPos",
              "description": "Set unit position rules. Mode may be one of: \n\"DOWN\" - unit goes prone and stays prone.\n\"UP\" - unit stands and stays standing.\n\"MIDDLE\" - Kneel Position. ArmA version 1.04 (Unit will not kneel if it is unarmed)\n\"AUTO\" - unit chooses mode according to circumstances.\nThis command will not change the stance of the human player, even though it will change the output of unitPos command. To change player stance use playAction or playActionNow:\nplayer playAction \"PlayerProne\"; // DOWN\nplayer playAction \"PlayerStand\"; // UP\nplayer playAction \"PlayerCrouch\"; // MIDDLE",
              "snippet": "setUnitPos ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitPosWeak",
              "description": "Set unit position rules. Mode may be one of: \n\"DOWN\" - person goes prone and stays prone.\n\"UP\" - person stands and stays standing.\n\"Middle\" - Kneel Position. ArmA version 1.04\n\"AUTO\" - person chooses mode according to circumstances.",
              "snippet": "setUnitPosWeak ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitRank",
              "description": "Sets rank of given unit.\n\nPossible rank values, and the associated rating that is automatically given:\n\n\nRank\nRatings\n\n\nArmA 1\nArma 2\nArma 3\n\n\nPRIVATE\n0\n?\n0\n\n\nCORPORAL\n500\n?\n0\n\n\nSERGEANT\n1500\n?\n0\n\n\nLIEUTENANT\n2500\n?\n0\n\n\nCAPTAIN\n3500\n?\n0\n\n\nMAJOR\n5000\n?\n0\n\n\nCOLONEL\n7500\n?\n0\n\nSince Arma 3 v1.67 this command is",
              "snippet": "setUnitRank ${2:rank}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitRecoilCoefficient",
              "description": "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.",
              "snippet": "setUnitRecoilCoefficient ${2:coefficient}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitTrait",
              "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.\nDefault traits are:\nNumber audibleCoef - A lower value means the unit is harder to hear\nNumber camouflageCoef - A lower value means the unit is harder to spot\nNumber loadCoef - Equipment weight multiplier affecting fatigue and stamina\nBoolean engineer - Ability to partially repair vehicles with toolkit, equivalent to engineer = 1; in CfgVehicles\nBoolean explosiveSpecialist - Ability to defuse mines with toolkit, equivalent to canDeactivateMines = 1; in CfgVehicles\nBoolean medic - Ability to treat self and others with medikit, equivalent to attendant = 1; in CfgVehicles\nBoolean UAVHacker - Ability to hack drones, equivalent to uavHacker = 1; in CfgVehicles",
              "snippet": "setUnitTrait [${2:skillName}, ${3:value}, isCustom]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUserActionText",
              "description": "Changes user added action (see addAction) menu item text. \n\nSince Arma 3 v1.61.136587 it is possible to set 2 more optional texts, one for background and one for foreground when action is displayed on the screen (showWindow = true)",
              "snippet": "setUserActionText ${2:[${3:actionIndex}, ${4:textMenu}, ${5:textWindowBackground}, ${6:textWindowForeground}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUserMFDText",
              "description": "Stored user text value in MFD, limit is 50, user0...user49",
              "snippet": "setUserMFDText [${2:index}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUserMFDValue",
              "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry\n...\nclass Draw\n{\n\talpha = \"user3\";\n\tcolor[] = {\"user0\",\"user1\",\"user2\"};\n...\n\nwhich could control color of the MFD. See Example 2-3-4 on how to set different colors of the Blackfoot MFD",
              "snippet": "setUserMFDValue [${2:index}, ${3:value}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "varspace ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVariable",
              "description": "Set variable to given value in the variable space of given element.\nTo remove a variable, set it to nil (e.g. player setVariable [\"varname\", nil];).\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.\nWhen variable is set on Location, it works only with locations created with createLocation.\nAll supported variable types:\nNamespace\nObject\nGroup\nTeam Member\nTask (FSM Task)\nLocation (only  scripted locations)\nControl (since Arma 3 v1.55.133553)\nDisplay (since Arma 3 v1.55.133553)\n\nIn Arma 3 it is possible to broadcast nil value\n\u26a0missionNamespace, uiNamespace, parsingNamespace and profileNamespace variable names could be any string, except for the reserved names, which are normally script command names. For example: missionNamespace setVariable [\"west\", 123]; will result in error: \nError in expression <missionNamespace setVariable [\"west\", 123];>\n   Error position: <setVariable [\"west\", 123];>\n   Error Reserved variable in expression  \n\nas west is a script command. Other varspaces do not have such limitation. You can always check for all available script commands by running  utility number 5",
              "snippet": "setVariable ${2:[${3:name}, ${4:value}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVariable",
              "description": "Set variable to given value in the variable space of given element.\nTo remove a variable, set it to nil (e.g. player setVariable [\"varname\", nil];).\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.\nWhen variable is set on Location, it works only with locations created with createLocation.\nAll supported variable types:\nNamespace\nObject\nGroup\nTeam Member\nTask (FSM Task)\nLocation (only  scripted locations)\nControl (since Arma 3 v1.55.133553)\nDisplay (since Arma 3 v1.55.133553)\n\nIn Arma 3 it is possible to broadcast nil value\n\u26a0missionNamespace, uiNamespace, parsingNamespace and profileNamespace variable names could be any string, except for the reserved names, which are normally script command names. For example: missionNamespace setVariable [\"west\", 123]; will result in error: \nError in expression <missionNamespace setVariable [\"west\", 123];>\n   Error position: <setVariable [\"west\", 123];>\n   Error Reserved variable in expression  \n\nas west is a script command. Other varspaces do not have such limitation. You can always check for all available script commands by running  utility number 5",
              "snippet": "setVariable ${1:[${2:name}, ${3:value}, ${4:public}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorDir",
              "description": "Set object's direction vector. Up vector will remain unchanged.",
              "snippet": "setVectorDir ${2:[x,y,z]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorDirAndUp",
              "description": "Sets orientation of an object.\nThe command takes 2 vector arrays, one for vectorDir and one for vectorUp.\nDefault object orientation will always have vectorDir pointing forward (North) along Y axis and vectorUp pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below (see also BIS_fnc_transformVectorDirAndUp).\nWhen attaching object to an object the axes are relative to the object that gets the attachment.\nIf it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up.\nThe setDir command is incompatible with setVectorDirAndUp and should not be used together on the same object.\n\nUsing setVectorDirAndUp alone should be sufficient for any orientation.",
              "snippet": "setVectorDirAndUp ${2:[${3:[x1, y1, z1]}, ${4:[x2, y2, z2]}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorUp",
              "description": "Set object's up vector. Direction of the object remain unchanged. Default object's vectorUp is [0,0,1].\n\nIn Multiplayer, setVectorUp must be executed on the machine where the object it applied to is local.",
              "snippet": "setVectorUp ${2:[x, y, z]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleAmmo",
              "description": "Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to local turrets. To check locality of turret use turretLocal.\n\nThe value ranges from 0 to 1.",
              "snippet": "setVehicleAmmo ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleAmmoDef",
              "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.",
              "snippet": "setVehicleAmmoDef ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleArmor",
              "description": "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). \n\nWorks like setDamage only in reverse: player setVehicleArmor 1 is the same as player setDamage 0, and player setVehicleArmor 0 is the same as player setDamage 0.97",
              "snippet": "setVehicleArmor ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleCargo",
              "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded.  Can also be used to unload a specific loaded vehicle or all loaded vehicles.",
              "snippet": "setVehicleCargo ${2:cargo}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleId",
              "description": "Sets ID to vehicle. By this ID vehicle is referenced by triggers and waypoints.\n\n\u26a0This command is not to be used.",
              "snippet": "setVehicleId ${2:id}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleInit",
              "description": "Attach a statement to a unit. The statement is propagated over the network in MP games, it can be executed by invoking processInitCommands.\n\nFor security reasons, the command was disabled in Arma 3. Use remoteExec for remote execution.",
              "snippet": "setVehicleInit ${2:statement}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleLock",
              "description": "Sets vehicle lock. Possible values:\n \n\"UNLOCKED\"\n\"DEFAULT\"\n\"LOCKED\"\n\"LOCKEDPLAYER\"",
              "snippet": "setVehicleLock ${2:lockState}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehiclePosition",
              "description": "Moves the object to a given position (same as createVehicle placement algorithm). Uses either the position that's defined by the position param, or one of the marker positions from the markers array. The object is placed inside a circle with position as its center and placement as its radius. The type of placement could also be controlled with special. \n\nIf position is in water and vehicle can float, it is placed on water surface, otherwise it is placed on the ground, even if ground is under water. If roof surfaces support walking, units will be placed on roofs if such position is given.",
              "snippet": "setVehiclePosition ${2:[${3:position}, ${4:markers}, ${5:placement}, ${6:special}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleRadar",
              "description": "Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.",
              "snippet": "setVehicleRadar ${2:rules}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReceiveRemoteTargets",
              "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.",
              "snippet": "setVehicleReceiveRemoteTargets ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReportOwnPosition",
              "description": "Sets that the vehicle will share its own position via datalink to the Side center.",
              "snippet": "setVehicleReportOwnPosition ${2:report}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReportRemoteTargets",
              "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.",
              "snippet": "setVehicleReportRemoteTargets ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleTIPars",
              "description": "Sets the \"heat\" state of different vehicle parts for Thermal Imaging detection. This allows simulation of heated up parts of a vehicle without it actually having to utilize them - on a range from 0 to 1, 0 being cold, 1 being hot.\n\u24d8This command does not work on infantry weapons.",
              "snippet": "setVehicleTIPars ${2:[${3:engine}, ${4:wheels}, ${5:weapon}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleVarName",
              "description": "Sets string representation of an object to a custom string. For example it is possible to return \"MyFerrari\" instead of default \"ce06b00# 164274: offroad_01_unarmed_f.p3d\" when querying object as string: \nhint str _offroad; //MyFerrari\nWhen a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. vehicleVarName on the other hand is only string representation of the object. So if you want to refer to the actual object by its vehicleVarName, an extra step needed to assign the object to a variable of the same name. For example to see and refer to offroad as myFerrari:\n_offroad setVehicleVarName \"MyFerrari\";\nMyFerrari = _offroad;\nIn multiplayer environment setVehicleVarName has to be executed on every PC if you want the custom name to be known everywhere. If vehicle is created and named in the editor, the vehicle name will be known globally automatically. \nTo reset vehicleVarName and str representation of the object to original form set vehicleVarName to an empty string:\n_offroad setVehicleVarName \"\";",
              "snippet": "setVehicleVarName ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocity",
              "description": "Set velocity (speed vector) of a vehicle.   Units are in metres per second.",
              "snippet": "setVelocity ${2:[x, y, z]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocityModelSpace",
              "description": "Sets the velocity (speed vector) of the given vehicle relative to its model.",
              "snippet": "setVelocityModelSpace ${2:[x, y, z]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocityTransformation",
              "description": "Interpolates and applies PositionASL, velocity, vectorDir and vectorUp to the given object based on the interval value. \nWhen interval is 0 the \"fromXXX\" values are used for the beginning of the interpolation. When interval is 1, the \"toXXX\" values are used for the end of interpolation. When interval value is in between, interpolated values are used (see diagram below). The interpolation is linear and along straight line between \"from\" and \"to\" positions. If curve is needed, then it should be constructed from multiple straight sections or by dynamically changing value of position params during the interpolation cycle, similar to Quadratic Curve animation (see Example 3).\nThe velocity param doesn't do much in SP, but in MP, provided the velocity component is set correctly, it helps the engine to figure out what the next position of the moving object should be on other clients.\n\nThe actual approximate interpolation formula for this command is:\n_vecCurrent = _vecFrom vectorAdd (_vecTo vectorDiff _vecFrom vectorMultiply _interval);\n\n\n\u24d8For continuous movement this command should be executed each frame while changing interval value. For example to apply interpolation for 10 seconds one could use the following command to translate 10 seconds into 0...1 interval:\nt1 = time; \nt2 = time + 10; \nLater inside some on frame event...\n\n_interval = linearConversion [t1, t2, time, 0, 1];\n\u26a0In multiplayer, this command should be applied where object is local",
              "snippet": "setVelocityTransformation ${2:[${3:fromPosASL}, ${4:toPosASL}, ${5:fromVelocity}, ${6:toVelocity}, ${7:fromVectorDir}, ${8:toVectorDir}, ${9:fromVectorUp}, ${10:toVectorUp}, ${11:interval}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setViewDistance",
              "description": "Set rendering distance. Setting view distance to <= 0 resets the value to the client's options (set in Options\u00a0\u2192\u00a0Video\u00a0\u2192\u00a0General\u00a0\u2192\u00a0Visibility\u00a0\u2192\u00a0Overall).\n\u24d8Client-side max view distance is limited by the server's view distance.\n\u26a0View distance also defines the maximum distance between a unit and any other unit they can know about.\nHigher view distance will involve more AI simulation cycles for every unit, which causes low performance.\n\n\nGame\n\nmin. scripted\n\nmin. UI\n\ndefault\n\nmax. UI\n\nmax. scripted\n\n\nArma 3\n\n200\n\n500\n\n1600\n\n12000\n\n40000\n\n\nArma 2: Operation Arrowhead\n\n200\n\n500\n\n2500\n\n10000\n\n15000\n\n\nArma 2\n\n200\n\n500\n\n3000\n\n10000\n\n15000\n\n\nArmed Assault\n\n200\n\n500\n\n1200\n\n10000\n\n?\n\n\nOperation Flashpoint\n\n500\n\n500\n\n900\n\n5000\n\n?",
              "snippet": "setViewDistance ${1:distance}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVisibleIfTreeCollapsed",
              "description": "Sets whether or not the object is visible even if the tree is collapsed.\n\u24d8Some Old Editor Command",
              "snippet": "setVisibleIfTreeCollapsed ${2:[object, ${3:visible}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWantedRPMRTD",
              "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!\nengine index 0: engine #1\nengine index 1: engine #2\nengine index 2: engine #3\nengine index -1: all engines\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setWantedRPMRTD [${2:value}, ${3:time}, ${4:engineIndex}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaves",
              "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\nNOTE: This command will have no effect (even though the value of waves changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.",
              "snippet": "setWaves ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointBehaviour",
              "description": "Switches the unit behaviour when the waypoint becomes active.\n\n\nPossible values are:\n\"UNCHANGED\"\n\"CARELESS\"\n\"SAFE\"\n\"AWARE\"\n\"COMBAT\"\n\"STEALTH\"\n\nSee the AIBehaviour page for details of the effect of this command on AI units.",
              "snippet": "setWaypointBehaviour ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointCombatMode",
              "description": "The group combat mode is switched when the waypoint becomes active.\n\n\nPossible mode values are:\n\"NO CHANGE\" (No change)\n\"BLUE\" (Never fire)\n\"GREEN\" (Hold fire - defend only)\n\"WHITE\" (Hold fire, engage at will)\n\"YELLOW\" (Fire at will)\n\"RED\" (Fire at will, engage at will)",
              "snippet": "setWaypointCombatMode ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointCompletionRadius",
              "description": "The completion radius allows units to call the waypoint completed once they are inside of the given circle.",
              "snippet": "setWaypointCompletionRadius ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointDescription",
              "description": "Sets the description shown in the HUD while the waypoint is active.",
              "snippet": "setWaypointDescription ${2:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointForceBehaviour",
              "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.",
              "snippet": "setWaypointForceBehaviour ${2:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointFormation",
              "description": "Switches the group formation when the waypoint becomes active.\n\n\nPossible values are: \n\"NO CHANGE\"\n\"COLUMN\"\n\"STAG COLUMN\"\n\"WEDGE\"\n\"ECH LEFT\"\n\"ECH RIGHT\"\n\"VEE\"\n\"LINE\"\n\"FILE\"\n\"DIAMOND\"",
              "snippet": "setWaypointFormation ${2:formation}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointHousePosition",
              "description": "For waypoints attached to a house, this defines the target buildingPos index.",
              "snippet": "setWaypointHousePosition ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointLoiterAltitude",
              "description": "Assignes loiter altitude to waypoint",
              "snippet": "setWaypointLoiterAltitude ${2:loiterAltitude}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointLoiterRadius",
              "description": "Assignes loiter radius to waypoint",
              "snippet": "setWaypointLoiterRadius ${2:radius}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointLoiterType",
              "description": "Sets the waypoint loiter type.",
              "snippet": "setWaypointLoiterType ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointName",
              "description": "Changes the waypoint name.",
              "snippet": "setWaypointName ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointPosition",
              "description": "Attempts to move given waypoint to a random position inside a circle with the given center and radius. \n\u24d8If you are looking for the command to set precise WP position, see setWPPos\nThe waypoint will be placed similar to \"NONE\" attribute in setVehiclePosition, even if the radius is 0, which means it could still be off center. In order to force waypoint to the exact position, similar to \"CAN_COLLIDE\" attribute, use negative radius, like -1 for example. You will probably laugh at this, but be warned:\n\n\u26a0When using negative radius, the center position supplied must be PositionASL, only then the resulting waypointPosition will be in format PositionAGL and not buried under the ground \u00af\\_(\u30c4)_/\u00af",
              "snippet": "setWaypointPosition ${2:[${3:center}, ${4:radius}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointScript",
              "description": "Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use SQS-Syntax. The script receives the following arguments in _this variable: [group, position, target] + [the optional passed arguments]. The optional arguments are appended to the end of the arguments array.\nIn Arma 3, command argument can be a reference to .sqf script (it will have to explicitly end with .sqf) or a reference to .sqs script.",
              "snippet": "setWaypointScript ${2:command}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointSpeed",
              "description": "Switches the group speed mode when the waypoint becomes active.\n\n\nPossible values are:\n\"UNCHANGED\"\n\"LIMITED\"\n\"NORMAL\"\n\"FULL\"",
              "snippet": "setWaypointSpeed ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointStatements",
              "description": "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.\nWithin the Condition & Statement code string:\nthis refers to the group leader\nthisList refers to the group's units\n\u26a0The Condition code is evaluated on the group owner's machine. When condition returns true, for some strange reason, the condition is evaluated one more time. The OnActivation code is executed globally, a.k.a on every client! See Waypoints.",
              "snippet": "setWaypointStatements ${2:[${3:condition}, ${4:statement}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointTimeout",
              "description": "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).",
              "snippet": "setWaypointTimeout ${2:[${3:min}, ${4:mid}, ${5:max}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointType",
              "description": "Changes the waypoint type. \n\nType can be:\n\"MOVE\"\n\"DESTROY\"\n\"GETIN\"\n\"SAD\" (Seek And Destroy)\n\"JOIN\"\n\"LEADER\"\n\"GETOUT\"\n\"CYCLE\"\n\"LOAD\"\n\"UNLOAD\"\n\"TR UNLOAD\"\n\"HOLD\"\n\"SENTRY\"\n\"GUARD\" (for use with GUARDED BY trigger or createGuardedPoint)\n\"TALK\"\n\"SCRIPTED\"\n\"SUPPORT\"\n\"GETIN NEAREST\"\n\"DISMISS\"\n\"LOITER\" (new in Arma 3)\n\"HOOK\" (new in Arma 3) - slingload object\n\"UNHOOK\" (new in Arma 3) - drop slingload\n\"AND\" (only for game logics)\n\"OR\" (only for game logics)\n\nMore details at Waypoint types.",
              "snippet": "setWaypointType ${2:type}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointVisible",
              "description": "Sets the visibility of the given waypoint in 3D HUD view (for map visibility see showWaypoint).",
              "snippet": "setWaypointVisible ${2:visible}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWeaponReloadingTime",
              "description": "Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.",
              "snippet": "setWeaponReloadingTime ${2:[${3:gunner}, ${4:muzzleName}, ${5:reloadTime}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWind",
              "description": "Set current (forced == false) or permanent (forced == true) wind vector.\nNOTE: The effect is global only if command is executed on the server. Wind set locally will sync back to server value in a while.",
              "snippet": "setWind ${1:[${2:x}, ${3:y}, ${4:forced}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindDir",
              "description": "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  \nNOTE: Effect is global only when executed on the server. On clients wind direction will sync to server value in a while.",
              "snippet": "setWindDir ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindForce",
              "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.",
              "snippet": "setWindForce ${2:wind}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "time ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindStr",
              "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
              "snippet": "setWindStr ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "helicopterRTD ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWingForceScaleRTD",
              "description": "Set effectivity of wings. For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "setWingForceScaleRTD [leftHorizontal, ${3:rightHorizontal}, ${4:vertical}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWPPos",
              "description": "Sets waypoint position \n\u24d8This command is identical to setWaypointPosition [pos, -1] (see command description for more info)",
              "snippet": "setWPPos ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/show3DIcons",
              "description": "Toggle the drawing of 3D icons.\n\u24d8Some Old Editor Command",
              "snippet": "show3DIcons ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showChat",
              "description": "Shows/hides the whole chat window.",
              "snippet": "showChat ${1:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCinemaBorder",
              "description": "Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control.",
              "snippet": "showCinemaBorder ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCommandingMenu",
              "description": "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.\nIf commanding menu has \"expression\" set up, the expression will receive the following arguments when user activated the menu item:\nLocal variable  _target: Object - Target under the cursor. This works in both 3D and 2D (when cursor is over the unit icon on the map).\nLocal variable _pos: Array - Cursor position.\nLocal variable _is3D: Boolean - false if cursor is over the map, otherwise true.",
              "snippet": "showCommandingMenu ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCompass",
              "description": "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true)",
              "snippet": "showCompass ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCuratorCompass",
              "description": "Hides or shows compass in curator interface.",
              "snippet": "showCuratorCompass ${1:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showGPS",
              "description": "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false)",
              "snippet": "showGPS ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showHUD",
              "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.\n\u24d8Appearance of HUD can also be controlled with showHUD[] param in Description.ext.\nSince Arma 3 v1.49.131879 there is a Description.ext's showHUD[] array param that is identical in format to the extended showHUD command. When present, it will disable showHUD command entirely, allowing mission makers to permanently alter visibility of some HUD elements.",
              "snippet": "showHUD ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showHUD",
              "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.\n\u24d8Appearance of HUD can also be controlled with showHUD[] param in Description.ext.\nSince Arma 3 v1.49.131879 there is a Description.ext's showHUD[] array param that is identical in format to the extended showHUD command. When present, it will disable showHUD command entirely, allowing mission makers to permanently alter visibility of some HUD elements.",
              "snippet": "showHUD ${1:[${2:hud}, ${3:info}, ${4:radar}, ${5:compass}, ${6:direction}, ${7:menu}, ${8:group}, ${9:cursors}, ${10:panels}, ${11:kills}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showLegend",
              "description": "Show/hide map legend. \n\u24d8Some Old Editor Command",
              "snippet": "showLegend ${2:bool}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showMap",
              "description": "Enable Map (default true)",
              "snippet": "showMap ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownArtilleryComputer",
              "description": "Checks whether the player has the artillery computer currently open.",
              "text": "shownArtilleryComputer"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownChat",
              "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.",
              "text": "shownChat"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownCompass",
              "description": "Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command.",
              "text": "shownCompass"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownCuratorCompass",
              "description": "Returns true if compass is shown.",
              "text": "shownCuratorCompass"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Any Value) = map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showNewEditorObject",
              "description": "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.  \n\u24d8Some Old Editor Command",
              "snippet": "showNewEditorObject ${2:[type,class,side,position]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownGPS",
              "description": "Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command.",
              "text": "shownGPS"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownHUD",
              "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).",
              "text": "shownHUD"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownMap",
              "description": "Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command.",
              "text": "shownMap"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownPad",
              "description": "Checks if client has Notepad enabled.",
              "text": "shownPad"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownRadio",
              "description": "Check if player has Radio enabled.",
              "text": "shownRadio"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownScoretable",
              "description": "Returns the state of the score table set with showScoretable command. \n\u26a0Since Arma 3 v1.63.137869, the previous functionality of this command (score table visibility check) is moved to visibleScoretable command. Please update your scripts and sorry for any inconvinience.",
              "text": "shownScoretable"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownUAVFeed",
              "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed.",
              "text": "shownUAVFeed"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownWarrant",
              "description": "Check if player has ID card enabled. Obsolete command.",
              "text": "shownWarrant"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownWatch",
              "description": "Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.",
              "text": "shownWatch"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showPad",
              "description": "Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2.",
              "snippet": "showPad ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showRadio",
              "description": "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true)",
              "snippet": "showRadio ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showScoretable",
              "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be  closed manually, when it is force closed, it cannot be opened manually.",
              "snippet": "showScoretable ${1:force}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showSubtitles",
              "description": "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.",
              "snippet": "showSubtitles ${1:enable}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showUAVFeed",
              "description": "Shows/hides video feed transmitted from UAV in its custom info panel.",
              "snippet": "showUAVFeed ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWarrant",
              "description": "Enable ID card. \u26a0Obsolete command",
              "snippet": "showWarrant ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWatch",
              "description": "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true)",
              "snippet": "showWatch ${1:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWaypoint",
              "description": "Sets the condition determining if the given waypoint is shown on the map view (for 3D HUD visibility see setWaypointVisible). Possible values are:\n\"NEVER\" - never show it\n\"EASY\" - show only if showCadetWP is enabled in global  difficulty.\n\"ALWAYS\" - always show it",
              "snippet": "showWaypoint ${2:show}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWaypoints",
              "description": "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.",
              "snippet": "showWaypoints ${1:enabled}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/side",
              "description": "Returns the side of a unit, vehicle, object or location.\nside of a renegade soldier is sideEnemy\nside of an empty vehicle is civilian\nside of a crewed vehicle is, if present, commander's > gunner's > driver's or > cargo's side, in this order\nside of a captive or dead unit is civilian. Use side group _unit to get the underlying side (see Example 2)\nyou can use playerSide to know the real player's side\n\n\u24d8Converting a side to string will not always return the side command text: e.g str resistance //\u00a0returns \"GUER\".\nSee Side page to see the return value of all side commands.",
              "snippet": "side ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideAmbientLife",
              "description": "Returns side of ambient life, for example ambient life placed in Eden Editor.",
              "text": "sideAmbientLife"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideChat",
              "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "sideChat ${2:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[side, identity] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideChat",
              "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "sideChat ${4:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideEmpty",
              "description": "Returns empty side, for example static buildings in Eden Editor.",
              "text": "sideEmpty"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideEnemy",
              "description": "The enemy side (used for renegades). Unit of this side is enemy to everyone.\nTo become one, you can attack members of your own side or use addRating.\nWhen below a rating of -2000 units switch automatically to this side.",
              "text": "sideEnemy"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideFriendly",
              "description": "The Friendly side - friendly to all, see Side relations.",
              "text": "sideFriendly"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideLogic",
              "description": "The Logic side.\nSide of Game Logics and Modules.",
              "text": "sideLogic"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideRadio",
              "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "sideRadio ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "[side, identity] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideRadio",
              "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "sideRadio ${4:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideUnknown",
              "description": "The unknown side.\nUsed when the side of a unit is unknown, e.g. for spotted targets with insufficient information.",
              "text": "sideUnknown"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simpleTasks",
              "description": "Return all simple tasks assigned to given person.",
              "snippet": "simpleTasks ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulationEnabled",
              "description": "Check if the entity has enabled simulation. \n\n\u26a0The entity could be local or remote but the result returned by this command will be for the entity simulation set up locally on the client that executed the command. See enableSimulation for more info.",
              "snippet": "simulationEnabled ${1:entity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulCloudDensity",
              "description": "Returns density of clouds at given position.",
              "snippet": "simulCloudDensity ${1:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulCloudOcclusion",
              "description": "Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds).",
              "snippet": "simulCloudOcclusion ${1:[${2:pos1},${3:pos2}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulInClouds",
              "description": "Returns if given position is in clouds.",
              "snippet": "simulInClouds ${1:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulSetHumidity",
              "description": "Sets simul cloud cover. This command does not affect overcast value. \n\nThis command has now been removed",
              "snippet": "simulSetHumidity ${1:humidity}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulWeatherSync",
              "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.",
              "text": "simulWeatherSync"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sin",
              "description": "Sine of x, argument in Degrees.",
              "snippet": "sin ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/size",
              "description": "Returns a location's size.",
              "snippet": "size ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sizeOf",
              "description": "Returns the diameter of bounding sphere of the object of given classname in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use boundingBox or boundingBoxReal.\n\n\u26a0At least one object of the given classname has to be present in the current mission otherwise zero will be returned",
              "snippet": "sizeOf ${1:classname}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skill",
              "description": "Returns current level of ability of a unit, in range between 0 and 1, 1 being the highest level of skill.",
              "snippet": "skill ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skill",
              "description": "Returns current level of ability of a unit, in range between 0 and 1, 1 being the highest level of skill.",
              "snippet": "skill ${2:skillName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skillFinal",
              "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).",
              "snippet": "skillFinal ${2:skillName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skipTime",
              "description": "Jumps the specified number of hours forward or backward.The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.",
              "snippet": "skipTime ${1:duration}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sleep",
              "description": "Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a script executed by execVM or spawn.\nNotes\nthis command only guarantees that the code will be suspended \"at least\" the given amount of time, however it often is more and on occasion is a lot more if script scheduler is particular busy\nthis command will suspend the script indefinitely if game simulation is paused in SP. To avoid this, use uiSleep.",
              "snippet": "sleep ${1:delay}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderPosition",
              "description": "Returns current thumb position of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderPosition ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderPosition",
              "description": "Returns current thumb position of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderPosition ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderRange",
              "description": "Returns limits, as an Array [min, max] of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderRange ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderRange",
              "description": "Returns limits, as an Array [min, max] of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderRange ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetPosition",
              "description": "Sets current thumb position of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderSetPosition ${1:[${2:idc}, ${3:pos}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetPosition",
              "description": "Sets current thumb position of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderSetPosition ${2:pos}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetRange",
              "description": "Sets limits of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderSetRange ${1:[${2:idc}, ${3:min}, ${4:max}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetRange",
              "description": "Sets limits of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog.",
              "snippet": "sliderSetRange ${2:[${3:min}, ${4:max}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetSpeed",
              "description": "Sets speed of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog. \nClick to arrow - move by line\nClick to scale outside thumb - move by page.",
              "snippet": "sliderSetSpeed ${1:[${2:idc},${3:line},${4:page}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetSpeed",
              "description": "Sets speed of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog. \nClick to arrow - move by line\nClick to scale outside thumb - move by page.",
              "snippet": "sliderSetSpeed ${2:[${3:line}, ${4:page}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSpeed",
              "description": "Returns speed, as an Array [min, max] of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog",
              "snippet": "sliderSpeed ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSpeed",
              "description": "Returns speed, as an Array [min, max] of CT_SLIDER or CT_XSLIDER with given idc of topmost user dialog",
              "snippet": "sliderSpeed ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/slingLoadAssistantShown",
              "description": "Returns true if Sling Load Assistant is open.",
              "text": "slingLoadAssistantShown"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/soldierMagazines",
              "description": "Get array with all magazines of the given unit.",
              "snippet": "soldierMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/someAmmo",
              "description": "Check if unit has some ammo.",
              "snippet": "someAmmo ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "array ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sort",
              "description": "Attempts to sort given array either in ascending (true) or descending (false) order. All array elements should be one of the following types:\nString - array of strings ([\"a\",\"b\",\"c\"...])\nNumber - array of numbers ([1,2,3...])\nArray - array of subarrays ([[\"a\",1,2],[\"b\",3,4],[\"c\",5,6]...]). Subarrays should be of the same structure. Subarray elements other than String or Number will be ignored during sorting.\nMixed arrays ([\"a\",1,[true]...]) are not supported and results are undefined.",
              "snippet": "sort ${2:order}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/soundVolume",
              "description": "Returns the current sound volume (set by fadeSound).",
              "text": "soundVolume"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Script) = arguments ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/spawn",
              "description": "Adds given set of compiled instructions to the scheduler. Exactly when the code will be executed is unknown, it depends on how busy is the engine and how filled up is the scheduler. Therefore spawn does not wait for the supplied code to finish, instead, spawn returns a Script handle to the scheduler task. scriptDone command can be used to check the code completion. Additional arguments are passed to the code in local variable _this. Since Arma 3 v1.55 the script handle also exists inside the code in _thisScript variable. To see what spawned scripts are currently in the scheduler, use diag_activeSQFScripts command.\n\u26a0When multiple Code is spawned in an order, there is no guarantee that the spawned Code will also execute in the same order. If you need such guarantee, use BIS_fnc_spawnOrdered function",
              "snippet": "spawn ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speaker",
              "description": "Returns the speaker of a person.",
              "snippet": "speaker ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speed",
              "description": "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:3.6 * (velocityModelSpace _obj select 1)",
              "snippet": "speed ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speedMode",
              "description": "Returns speed mode of the group, which can be any of the following: \n\"LIMITED\"\n\"NORMAL\"\n\"FULL\"",
              "snippet": "speedMode ${1:groupName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = str ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/splitString",
              "description": "An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters. In addition, if empty string \"\" is used for delimiters, str is split by each character.",
              "snippet": "splitString ${2:delimiters}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sqrt",
              "description": "Returns square root of x.",
              "snippet": "sqrt ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/squadParams",
              "description": "Returns data about squad of given unit loaded from squad.xml.\nAll items in returned array are String.",
              "snippet": "squadParams ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stance",
              "description": "Returns the stance of the given unit. It can be one of: \n\"STAND\"\n\"CROUCH\"\n\"PRONE\"\n\"UNDEFINED\" (for example, swimming)\n\"\" (on non-person object)",
              "snippet": "stance ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/startLoadingScreen",
              "description": "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for Scheduled Scripts).\n\u26a0The loading screen does not end by itself and absolutely needs a call to endLoadingScreen command.\n\u26a0The game simulation is disabled during Loading Screen operation (at least in SP), therefore any use of sleep command will pause the game indefinitely. If you have to \"sleep\", use uiSleep.\nBy default (if custom resource is not provided) startLoadingScreen will use \"RscDisplayNotFreeze\" resource. If you are using a custom resource (that can be defined in Description.ext), the following resource's controls are supported by the engine:\n\nidc = 101; - text (type = 0;) or picture (type = 48;). The text will be set to the text provided by the command param.\nidc = 103; - progress (type = 8;) or animated texture (type = 45;). This control indicates global hardcoded mission loading progress and is useless after mission is loaded.\nidc = 104; - progress (type = 8;). This control's progress is initially set to 0 and can be manipulated with progressLoadingScreen command.",
              "snippet": "startLoadingScreen [${1:text}, ${2:resource}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(For Type) = for ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/step",
              "description": "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.",
              "snippet": "step ${2:stepSize}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unitName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stop",
              "description": "Stop AI unit.Stopped unit will not be able to move, fire, or change its orientation to follow a watched object.It may still change the stance if deemed appropriate (e.g. under fire).Use disableAI to disable specific AI capabilities.",
              "snippet": "stop ${2:toggle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stopEngineRTD",
              "description": "Instant engines stop. \nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "snippet": "stopEngineRTD ${1:heli}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stopped",
              "description": "Check if unit is stopped by stop command.",
              "snippet": "stopped ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/str",
              "description": "Converts any value into a string by placing \" and \" around the argument. Since Arma 3 v1.63.137891 this command will correctly escape all \" inside a string:\n\n// Before the fix:\nhint str \"string \"\" string\"; // \"string \" string\" <- invalid string\ncall compile str \"string \"\" string\"; // ERROR\n// After the fix:\nhint str \"string \"\" string\"; // \"string \"\" string\" <- valid string\ncall compile str \"string \"\" string\"; // OK\n\n\nWhen used on object, object debug name is returned.",
              "snippet": "str ${1:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sunOrMoon",
              "description": "12:00 - 1\n(...) - 1\n18:39 - 0.911201\n18:42 - 0.576303\n18:45 - 0.240862\n18:48 - 0\n(...) - 0\n06:00 - 0.0695308\n06:03 - 0.404731\n06:06 - 0.739519\n06:09 - 1\n(...) - 1\nReturns the sun to moon transition state in range 0..1.\nThe return value is either 0 or 1 most of the time, the in-between values only returned during a few minutes in the morning and in the evening, depending on the date, and could be similar to shown here:\n\n\n  Sunrise in Arma 3 VR\n  Sunset in Arma 3 VR",
              "text": "sunOrMoon"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/supportInfo",
              "description": "Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:\n't' - type\n'n' - nullar operator\n'u' - unary operator\n'b' - binary operator.\n\n'name' is the operator or type name (in case operator, type of input operands is included). \nmask parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type x may be replaced with *, meaning all types. For the mask partial match may be used, like abc*, meaning any operators starting with 'abc' are reported, for example: \n\"\" - list all types and commands\n\"t:*\" - list all types\n\"*:<command>*\" - list all entries for script <command>\n\"i:<command>\" - (since Arma 3 v1.99.146528) extended information about script <command> in format: \u00a0\u00a0[[commandType, lowerCaseName, camelCaseName, description, example, exampleResult, returnType, leftArgType, rightArgType],...]",
              "snippet": "supportInfo ${1:mask}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/suppressFor",
              "description": "Force suppressive fire from the unit.",
              "snippet": "suppressFor ${2:duration}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceIsWater",
              "description": "Returns whether water is at given position.",
              "snippet": "surfaceIsWater ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceNormal",
              "description": "Returns surface normal on given position.",
              "snippet": "surfaceNormal ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceTexture",
              "description": "Same as surfaceType, but returns texture path to ground texture as string. \n\u24d8The texture returned is of the ground, even if there is a road at that position. To get road texture use getRoadInfo command",
              "snippet": "surfaceTexture ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceType",
              "description": "Returns what surface type is at the given position. For surface texture see surfaceTexture command.\n\n\u24d8The command returns surface type of the ground, even underneath objects such as buildings and roads\nShow surface types (ArmA)\n\n\n#GRASSSOUTH\n#GRASSGENERAL\n#SANDGENERAL\n\n\n\n\n\nShow surface types (Arma 2)\n\n\n#UTGRASS - for natural surfaces\n#UTCONCRETE - for urban surfaces\n\n\n\n\n\nShow surface types (Arma 3)\n\n\n\nDefault\nWater\nSurfRoadDirt\nSurfRoadConcrete\nSurfRoadTarmac\nSurfWood\nSurfMetal\nSurfRoofTin\nSurfRoofTiles\nSurfIntWood\nSurfIntConcrete\nSurfIntTiles\nSurfIntMetal\nSurfWater\nTEST_SurfNormal\nGdtStratisConcrete\nGdtStratisBeach\nGdtStratisDirt\nGdtStratisSeabedCluttered\nGdtStratisSeabed\nGdtStratisDryGrass\nGdtStratisGreenGrass\nGdtStratisRocky\nGdtStratisThistles\nGdtStratisForestPine\nGdtRubble\nGdtForestPine\nGdtConcrete\nGdtSoil\nGdtBeach\nGdtRock\nGdtDead\nGdtDirt\nGdtDesert\nGdtGrassGreen\nGdtGrassDry\nGdtGrassWild\nGdtWeed\nGdtWildField\nGdtThorn\nGdtStony\nGdtStonyThistle\nGdtMud\nGdtMarsh\nGdtSeabed\nconcrete\nconcrete_out\nconcrete_inside\ndirtrunway\nroad\nfloor\nfloor_inside\ncarpet_inside\ncarpet\nmud\nconcrete_hall\nstones\ncardboard\nlino\nsteel\ntrash\nparquet\nsand\nmetalPlate\nwoodenFloor\nplanks\nplanks_inside\ngrid\nrubble\nBuildingRubble\ntiling\nwavyMetal\nGdtVRsurface01\nsurf_metal\nsurf_roadconcrete\nsurf_roaddirt\nsurf_roadtarmac\nsurf_rooftiles\nsurf_rooftin\nsurf_wood\nsurfint_concrete\nsurfint_metal\nsurfint_tiles\nsurfint_wood\nroad_exp\nsand_exp\nSurfRoadDirt_exp\nSurfRoadConcrete_exp\nSurfRoadTarmac_exp\nSurfTrailDirt_exp\nconcrete_exp\nconcrete_in_exp\nconcrete_hall_exp\nfloor_exp\nfloor_in_exp\nstones_exp\nplanks_in_exp\nplanks_exp\nsoftwood_in_exp\nsteel_exp\nmetalPlate_exp\nmetalPlatePressed_exp\nmetalPlate_in_exp\ngrid_exp\nwavyMetal_exp\ncarpet_exp\ncarpet_in_exp\nmat_in_exp\nmud_exp\nstraw_exp\ncardboard_exp\nlino_in_exp\nlino_exp\nroof_tiles_exp\ntrash_exp\nrubble_exp\nBuildingRubble_exp\nGdtForestMalden\nGdtGrassShort\nGdtGrassTall\nGdtGrassLong\nGdtVolcanoBeach\nGdtSeabedExp\nGdtRedDirt\nGdtAsphalt\nGdtField\nGdtForest\nGdtVolcano\nGdtCliff\nSurfRoadDirt_Enoch\nSurfRoadTarmac1_Enoch\nSurfRoadTarmac2_Enoch\nSurfRoadTarmac3_Enoch\nSurfTrailDirt_Enoch\nGdtKLDirt\nGdtKLGrass1\nGdtKLGrass2\nGdtKLForestCon\nGdtKLForestDec\nGdtKlSoil\nGdtKlTarmac\nGdtKlWeatheredTarmac\nGdtKLCobblestone\nGdtKlField\nGdtKlStubble",
              "snippet": "surfaceType ${1:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/swimInDepth",
              "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.",
              "snippet": "swimInDepth ${2:value}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchableUnits",
              "description": "Returns a list of playable units available for switching to.\nCommand is relative to the client on which it is executed and will only show playable units for the same side as player's group + player himself,\nunless in singleplayer where playable units from all sides will be accessible via this command.\nDead and player-controlled units are automatically removed from the resulting array.\n\u24d8In Multiplayer, switchableUnits are only available when respawn type is set to SIDE or GROUP, the mission contains units marked playable and player is able to switch to any of those units.\nIn order to get all playable units regardless of their side, see the playableUnits command.",
              "text": "switchableUnits"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchAction",
              "description": "When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.",
              "snippet": "switchAction ${2:action}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "target ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchCamera",
              "description": "Switch camera to given vehicle / camera. Mode is one of:\n\"INTERNAL\": 1st person\n\"GUNNER\": optics / sights\n\"EXTERNAL\": 3rd person\n\"GROUP\": group\n\"CARGO\": same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret.\n\u24d8Control over the unit is not given to the player. Use selectPlayer or a combination of switchCamera and remoteControl to achieve this.",
              "snippet": "switchCamera ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchCamera",
              "description": "Switch camera to given vehicle / camera. Mode is one of:\n\"INTERNAL\": 1st person\n\"GUNNER\": optics / sights\n\"EXTERNAL\": 3rd person\n\"GROUP\": group\n\"CARGO\": same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret.\n\u24d8Control over the unit is not given to the player. Use selectPlayer or a combination of switchCamera and remoteControl to achieve this.",
              "snippet": "switchCamera ${1:target}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchGesture",
              "description": "When used on a person,the given move is started immediately (without transition).",
              "snippet": "switchGesture ${2:moveName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "lamp ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchLight",
              "description": "Controls whether a lamp is lit or not.\nThis command was originally designed to only work with CfgNonAIVehicles class \"StreetLamp\" only;\nsince Arma 3 v1.92 this command was extended to work with street lights.",
              "snippet": "switchLight ${2:mode}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "person ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchMove",
              "description": "Applies given animation to a unit. When used on a person, the given move is started immediately (there is no transition). Use _unit switchMove \"\"; to reset animation. For a smooth transition use playMove.\n\u24d8see Category:Moves for respective games animations.",
              "snippet": "switchMove ${2:moveName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedObjects",
              "description": "Return the list of objects synchronized with the given unit.",
              "snippet": "synchronizedObjects ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedTriggers",
              "description": "Returns the list of triggers synchronized with a given waypoint.",
              "snippet": "synchronizedTriggers ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedWaypoints",
              "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.",
              "snippet": "synchronizedWaypoints ${1:obj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeObjectsAdd",
              "description": "Add given objects to the unit's list of synchronized objects.",
              "snippet": "synchronizeObjectsAdd ${2:objects}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeObjectsRemove",
              "description": "Remove given objects from the unit's list of synchronized objects.",
              "snippet": "synchronizeObjectsRemove ${2:objects}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeTrigger",
              "description": "Synchronizes the trigger with zero or more waypoints.",
              "snippet": "synchronizeTrigger ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeWaypoint",
              "description": "Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index].",
              "snippet": "synchronizeWaypoint ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "trigger ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeWaypoint%20trigger",
              "description": "Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index].",
              "snippet": "synchronizeWaypoint ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemChat",
              "description": "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "snippet": "systemChat ${1:text}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemOfUnits",
              "description": "Returns the currently selected system of units.\n0: Metric\n1: Mixed (ground vehicles use Metric / air vehicles use Imperial)\n2: Imperial",
              "text": "systemOfUnits"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemTime",
              "description": "Returns system time.",
              "text": "systemTime"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemTimeUTC",
              "description": "Returns systemTime according to Universal Time Coordinated time scale.",
              "text": "systemTimeUTC"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tan",
              "description": "Tangent of x, argument in Degrees.",
              "snippet": "tan ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targets",
              "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.",
              "snippet": "targets ${2:[${3:enemyOnly}, ${4:maxDistance}, ${5:sides}, ${6:maxAge}, ${7:alternateCenter}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = [speaker, side, unit, place, time] ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetsAggregate",
              "description": "Aggregate candidates.",
              "snippet": "targetsAggregate ${2:candidates}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Side, Position, Number, Object, String) = enquirer ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetsQuery",
              "description": "Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.",
              "snippet": "targetsQuery ${2:[${3:targetIgnore}, ${4:targetSide}, ${5:targetType}, ${6:targetPosition}, ${7:targetMaxAge}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskAlwaysVisible",
              "description": "Returns true if the task is flagged to be always visible or false if not.",
              "snippet": "taskAlwaysVisible ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskChildren",
              "description": "Return the child tasks of the specified task.",
              "snippet": "taskChildren ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskCompleted",
              "description": "Return if task is completed. (state Succeeded, Failed or Canceled)",
              "snippet": "taskCompleted ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskCustomData",
              "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.",
              "snippet": "taskCustomData ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskDescription",
              "description": "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].",
              "snippet": "taskDescription ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Nothing) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskDestination",
              "description": "Returns the position of the task (as specified by destination parameter in config).",
              "snippet": "taskDestination ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskHint",
              "description": "Shows info about new, changed or failed task. The text can contain several lines. \\n is used to set a line return.\nIt is recommended to use BIS_fnc_showNotification in order to maintain Arma 3's visual style.",
              "snippet": "taskHint ${1:[${2:text}, ${3:colour}, ${4:icon}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskMarkerOffset",
              "description": "Returns model space position for the task marker",
              "snippet": "taskMarkerOffset ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskNull",
              "description": "A non-existing Task. To compare non-existent tasks use isNull or isEqualTo:\ntaskNull == taskNull; // false\nisNull taskNull; // true\ntaskNull isEqualTo taskNull; // true",
              "text": "taskNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskParent",
              "description": "Returns the parent task of the specified task.",
              "snippet": "taskParent ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Task) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskResult",
              "description": "Send a result of the task to the task sender.",
              "snippet": "taskResult ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskState",
              "description": "Returns the current state of a task. \n\nPossible return values are:\nNone\nCreated\nAssigned\nSucceeded\nFailed\nCanceled",
              "snippet": "taskState ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskType",
              "description": "Returns the type of the given task",
              "snippet": "taskType ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Team Member) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamMember",
              "description": "Return an agent for given person.",
              "snippet": "teamMember ${1:person}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Team Member) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamMemberNull",
              "description": "A non-existent Team Member. To compare non-existent team members use isNull or isEqualTo:\nteamMemberNull == teamMemberNull; //\u00a0false\nisNull teamMemberNull; //\u00a0true\nteamMemberNull isEqualTo teamMemberNull; //\u00a0true",
              "text": "teamMemberNull"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamName",
              "description": "Return a name of given team.",
              "snippet": "teamName ${1:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teams",
              "description": "Return a list of teams in the current mission.",
              "text": "teams"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamSwitch",
              "description": "Invoke the Team Switch dialog (force it even when conditions are not met).\nThere has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in description.ext should be 5 (SIDE).\n\u24d8When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it _unit enableAI \"TeamSwitch\" so that the unit continues with waypoints.",
              "text": "teamSwitch"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamSwitchEnabled",
              "description": "Check if Team Switch is currently enabled.\n\nTeam Switch is enabled by default.",
              "text": "teamSwitchEnabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamType",
              "description": "Returns a type of given team.",
              "snippet": "teamType ${1:team}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terminate",
              "description": "Terminates (aborts) spawned or execVMed script.\n\u26a0The given script will not terminate immediately upon terminate command execution, it will do so the next time the script is processed by the scheduler",
              "snippet": "terminate ${1:scriptHandle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersect",
              "description": "Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain. For ASL variant see terrainIntersectASL",
              "snippet": "terrainIntersect ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersectASL",
              "description": "Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain.\nFor AGL variant, see terrainIntersect.",
              "snippet": "terrainIntersectASL ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersectAtASL",
              "description": "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL, only returns intersect position instead of Boolean",
              "snippet": "terrainIntersectAtASL ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Structured Text) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/text",
              "description": "Creates a structured text containing the given plain text if argument is String. Use setAttributes to set additional  attributes on the text. If the argument is location, returns location's text value (see Alt Syntax).",
              "snippet": "text ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/text",
              "description": "Creates a structured text containing the given plain text if argument is String. Use setAttributes to set additional  attributes on the text. If the argument is location, returns location's text value (see Alt Syntax).",
              "snippet": "text ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/textLog",
              "description": "Dump argument value to debugging output. \n\u26a0This command is non-functional in the retail version",
              "snippet": "textLog ${1:anything}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/textLogFormat",
              "description": "Debugging output. \n\u26a0This command is non-functional in the retail version",
              "snippet": "textLogFormat [${1:format}, ${2:arg1}, ${3:arg2}, ...]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tg",
              "description": "Identical to tan",
              "snippet": "tg ${1:x}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = if ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/then",
              "description": "First or second element of array is executed depending on result of if condition. Result of the expression executed is returned as a result (result may be Nothing).",
              "snippet": "then ${2:else}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throttleRTD",
              "description": "Return the current throttle level for all engines of a helicopter.",
              "snippet": "throttleRTD ${1:helicopterRTD}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throw",
              "description": "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.\n\n\u26a0Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the if statement before it, as shown in Example 3.",
              "snippet": "throw ${1:expression}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(condition) ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throw",
              "description": "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.\n\n\u26a0Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the if statement before it, as shown in Example 3.",
              "snippet": "throw ${2:exception}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/time",
              "description": "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime.",
              "text": "time"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/timeMultiplier",
              "description": "Returns the value set with setTimeMultiplier.",
              "text": "timeMultiplier"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleCut",
              "description": "This command is identical to cutText",
              "snippet": "titleCut ${1:[${2:text}, ${3:type}, ${4:speed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleFadeOut",
              "description": "Terminate the title effect and set duration of the fade out phase to the given time. Same as cutFadeOut but for the title layer.",
              "snippet": "titleFadeOut ${1:duration}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleObj",
              "description": "Shows object defined in global config in CfgTitles",
              "snippet": "titleObj ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleRsc",
              "description": "Display a resource defined in RscTitles. Also see cutRsc, with these two commands you can show two different resources at once.",
              "snippet": "titleRsc [${2:text}, ${3:type}, ${4:speed}, ${5:showInMap}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleText",
              "description": "Displays text across the screen. If used along with cutText two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using \"\\n\" new line characters:\ntitleText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.",
              "snippet": "titleText [${2:text}, ${3:type}, ${4:speed},  ${5:showInMap}, ${6:isStructuredText}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(For Type) = forType ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/to",
              "description": "Continue sequence of for construct. It sets the end value of the index variable",
              "snippet": "to ${2:b}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toArray",
              "description": "Converts the supplied String into an Array of Numbers. \nThe numbers in the created array are the decimal Unicode representations of characters.",
              "snippet": "toArray ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = number ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toFixed",
              "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()\nNOTE: Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 significant figures, whereas with this command it is possible to preserve some extra precision.\nstr (pi/100000); //\"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation\nstr pi; //\"3.14159\" - 6 significant figures (default)\npi toFixed 6; //\"3.141593\" - forced to 7 significant figures\npi toFixed 7; //\"3.1415927\" - forced to 8 significant figures\n\nSince Arma 3 v1.71.141859 an alternative syntax is added, which takes no number and returns Nothing. Instead it acts as keyword and switches engine Number to String global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For example:\nsystemChat str position player;\ncall\n{\n\ttoFixed 6; \n\tsystemChat str position player;\n}; \nsystemChat str position player;\ntoFixed -1;\nsystemChat str position player;\nThe result is:\n[11580.3,11797.7,0.00146675]\n[11580.341797,11797.737305,0.001467]\n[11580.341797,11797.737305,0.001467]\n[11580.3,11797.7,0.00146675]\nIdeal to be used when saving data to a database when more precise positioning is required.",
              "snippet": "toFixed ${2:decimals}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toFixed",
              "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()\nNOTE: Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 significant figures, whereas with this command it is possible to preserve some extra precision.\nstr (pi/100000); //\"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation\nstr pi; //\"3.14159\" - 6 significant figures (default)\npi toFixed 6; //\"3.141593\" - forced to 7 significant figures\npi toFixed 7; //\"3.1415927\" - forced to 8 significant figures\n\nSince Arma 3 v1.71.141859 an alternative syntax is added, which takes no number and returns Nothing. Instead it acts as keyword and switches engine Number to String global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For example:\nsystemChat str position player;\ncall\n{\n\ttoFixed 6; \n\tsystemChat str position player;\n}; \nsystemChat str position player;\ntoFixed -1;\nsystemChat str position player;\nThe result is:\n[11580.3,11797.7,0.00146675]\n[11580.341797,11797.737305,0.001467]\n[11580.341797,11797.737305,0.001467]\n[11580.3,11797.7,0.00146675]\nIdeal to be used when saving data to a database when more precise positioning is required.",
              "snippet": "toFixed ${1:decimals}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toLower",
              "description": "Converts the supplied Unicode string to all lowercase characters. If the string doesn't have characters with  codes > 255, you could benefit from faster conversion using toLowerANSI",
              "snippet": "toLower ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toLowerANSI",
              "description": "ISO-8859-1Converts the supplied string to all lower case characters fast (could be 3x faster than toLower). ANSI in this case refers to ISO-8859-1 code page. The command is primary designed to convert characters with  codes 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see toLower.",
              "snippet": "toLowerANSI ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toString",
              "description": "Converts the supplied Array of Numbers into a String. \nThe numbers in the array to be converted are the decimal Unicode representations of characters.",
              "snippet": "toString ${1:array}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toUpper",
              "description": "Converts the supplied Unicode string to all uppercase characters. If the string doesn't have characters with  codes > 255, you could benefit from faster conversion using toUpperANSI",
              "snippet": "toUpper ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toUpperANSI",
              "description": "ISO-8859-1Converts the supplied string to all upper case characters fast (could be 3x faster than toUpper). ANSI in this case refers to ISO-8859-1 code page. The command is primary designed to convert characters with  codes 0...127 however will also convert other characters in 128...255 range as long as they are present in ISO-8859-1 codepage. For Unicode alternative see toUpper.",
              "snippet": "toUpperANSI ${1:string}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerActivated",
              "description": "Returns true if the trigger has been activated.\n\n\u24d8The engine does not provide precise way of detecting which player activated the trigger. The trigger has a default triggerInterval or 0.5 sec, so every 0.5 second it checks if there is anyone in the zone. There could be 100 people in the zone on the next scan, which one was the first? There is simply no data for this. You can make an imprecise guess by taking 1st person from thisList or list. Also you should do it on server only trigger. This will still not guarantee that person first on the list is the one who was first to activate trigger, but on balance will probably be the one.\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger activated status on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerActivated ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerActivation",
              "description": "Returns trigger activation in the form [by, type, repeating]. \n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger activation set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerActivation ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAmmo",
              "description": "Triggers a munition such as shells, bullets, missiles, rockets and bombs (shotSubmunition/shotShell/shotBullet/shotMissile/shotRocket) as if it did hit. If ammo uses submunition, then creation of submunition will be triggered.",
              "snippet": "triggerAmmo ${1:munition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerArea",
              "description": "Returns currently monitored trigger area. Since Arma 3 v1.59.135137, the command returns 3rd dimension for the monitored area. If height is not set, the value for it would be -1;\n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger area set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerArea ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachedVehicle",
              "description": "Returns vehicle attached to the trigger (for example using triggerAttachVehicle).\n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the vehicle attached locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerAttachedVehicle ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "triggerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachObject",
              "description": "Assigns a static object to the trigger. The activation source is changed to \"STATIC\".",
              "snippet": "triggerAttachObject ${2:objectId}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "triggerName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachVehicle",
              "description": "Specifies the entity which will activate the selected trigger.\nIf [] is given, the trigger is decoupled from the assigned vehicle (example 2).\nIf the activation source is \"VEHICLE\", \"GROUP\", \"LEADER\" or \"MEMBER\", it is changed to \"NONE\".\nIf [vehicle] is given, the trigger is coupled to the vehicle or its group.\nWhen the source is \"GROUP\", \"LEADER\" or \"MEMBER\", it is coupled to the group, otherwise it is coupled to the vehicle and the source is changed to \"VEHICLE\".",
              "snippet": "triggerAttachVehicle ${2:objects}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerDynamicSimulation",
              "description": "Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation. If false dynamically disabled entities will not be activated by unit presence",
              "snippet": "triggerDynamicSimulation ${2:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerInterval",
              "description": "Returns trigger condition check frequency in seconds.  \n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger interval set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerInterval ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerStatements",
              "description": "Returns trigger statements.",
              "snippet": "triggerStatements ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerText",
              "description": "Returns trigger text.\n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger text set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerText ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerTimeout",
              "description": "Returns trigger timeout in the form [min, mid, max, interruptable].\n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger timeout set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerTimeout ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerTimeoutCurrent",
              "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress. \n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the current trigger timeout local to the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerTimeoutCurrent ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerType",
              "description": "Returns trigger type (see setTriggerType). \n\n\u26a0The trigger could be local or remote but the result returned by this command will be for the trigger type set up locally on the client that executed the command. See createTrigger for more info.",
              "snippet": "triggerType ${1:trigger}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/true",
              "description": "Always true",
              "text": "true"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/try",
              "description": "",
              "text": "Defines"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "args ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/try",
              "description": "",
              "snippet": "try ${2:code}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean, Nothing) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretLocal",
              "description": "Checks if a turret is local.  \nSome info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle.",
              "snippet": "turretLocal ${2:turretPath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretOwner",
              "description": "Returns id of the owner of the turret. Server only. Returns 0 on non-server and SP. \nSome info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle. A vehicle can have one owner while turrets have different owners.",
              "snippet": "turretOwner ${2:turretPath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretUnit",
              "description": "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57.135045. To find turret path of known unit see unitTurret",
              "snippet": "turretUnit ${2:turretpath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvAdd",
              "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.",
              "snippet": "tvAdd [${1:idc}, ${2:pathParent}, ${3:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvAdd",
              "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.",
              "snippet": "tvAdd [${2:pathParent}, ${3:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvClear",
              "description": "Removes all items from Tree View with given idc.",
              "snippet": "tvClear ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvClear",
              "description": "Removes all items from Tree View with given idc.",
              "snippet": "tvClear ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapse",
              "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
              "snippet": "tvCollapse ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapse",
              "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
              "snippet": "tvCollapse ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapseAll",
              "description": "Collapses all tree items for the given Tree View.",
              "snippet": "tvCollapseAll ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapseAll",
              "description": "Collapses all tree items for the given Tree View.",
              "snippet": "tvCollapseAll ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCount",
              "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.",
              "snippet": "tvCount [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCount",
              "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.",
              "snippet": "tvCount ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCurSel",
              "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
              "snippet": "tvCurSel ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCurSel",
              "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
              "snippet": "tvCurSel ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvData",
              "description": "Returns string data from item on given path. IDC means id of parent Tree View.",
              "snippet": "tvData ${1:[${2:idc}, ${3:[path]}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvData",
              "description": "Returns string data from item on given path. IDC means id of parent Tree View.",
              "snippet": "tvData ${2:[path]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvDelete",
              "description": "Removes an item with given Tree View Path from Tree View.\n\u26a0The paths of other items on the same branch after delete operation are updated accordingly and may change. Therefore, when deleting multiple entries, start with the one with the highest index and proceed in reverse order.",
              "snippet": "tvDelete ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvDelete",
              "description": "Removes an item with given Tree View Path from Tree View.\n\u26a0The paths of other items on the same branch after delete operation are updated accordingly and may change. Therefore, when deleting multiple entries, start with the one with the highest index and proceed in reverse order.",
              "snippet": "tvDelete ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpand",
              "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
              "snippet": "tvExpand [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpand",
              "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
              "snippet": "tvExpand ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpandAll",
              "description": "Expands all tree items for the given Tree View.",
              "snippet": "tvExpandAll ${1:idc}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpandAll",
              "description": "Expands all tree items for the given Tree View.",
              "snippet": "tvExpandAll ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvIsSelected",
              "description": "Returns true if given treeview item is selected.",
              "snippet": "tvIsSelected ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvPicture",
              "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
              "snippet": "tvPicture [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvPicture",
              "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
              "snippet": "tvPicture ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSelection",
              "description": "Returns array of paths to selected items.",
              "snippet": "tvSelection ${1:control}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetColor",
              "description": "Sets text color on given Tree View Item",
              "snippet": "tvSetColor [${1:idc}, ${2:path}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetColor",
              "description": "Sets text color on given Tree View Item",
              "snippet": "tvSetColor [${2:path}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetCurSel",
              "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)",
              "snippet": "tvSetCurSel [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetCurSel",
              "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)",
              "snippet": "tvSetCurSel ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetData",
              "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
              "snippet": "tvSetData [${1:idc}, ${2:path}, ${3:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetData",
              "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
              "snippet": "tvSetData [${2:path}, ${3:data}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPicture",
              "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
              "snippet": "tvSetPicture [${1:idc}, ${2:path}, ${3:name}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPicture",
              "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
              "snippet": "tvSetPicture [${2:path}, ${3:name}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColor",
              "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.",
              "snippet": "tvSetPictureColor [${1:idc}, ${2:path}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColor",
              "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.",
              "snippet": "tvSetPictureColor [${2:path}, ${3:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColorDisabled",
              "description": "Sets the color of left picture of a tree item defined by path when item is disabled",
              "snippet": "tvSetPictureColorDisabled ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColorSelected",
              "description": "Sets the color of the left picture of a tree item defined by path when item is selected",
              "snippet": "tvSetPictureColorSelected ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRight",
              "description": "Sets right picture on the tree view item defined by path",
              "snippet": "tvSetPictureRight [${1:idc}, ${2:path}, ${3:name}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRight",
              "description": "Sets right picture on the tree view item defined by path",
              "snippet": "tvSetPictureRight [${2:path}, ${3:name}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColor",
              "description": "Sets color of the right picture on the tree view item defined by path",
              "snippet": "tvSetPictureRightColor [idc, ${3:path}, ${4:color}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColor",
              "description": "Sets color of the right picture on the tree view item defined by path",
              "snippet": "tvSetPictureRightColor ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColorDisabled",
              "description": "Sets the color of the right picture of a tree item defined by path when item is disabled",
              "snippet": "tvSetPictureRightColorDisabled ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColorSelected",
              "description": "Sets the color of the right picture of a tree item defined by path when item is selected",
              "snippet": "tvSetPictureRightColorSelected ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetSelected",
              "description": "Sets the selection state of given treeview item in multi-select control.",
              "snippet": "tvSetSelected [${2:path}, ${3:selected}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetText",
              "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
              "snippet": "tvSetText [${1:idc}, ${2:path}, ${3:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetText",
              "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
              "snippet": "tvSetText [${2:path}, ${3:text}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetTooltip",
              "description": "Sets the tooltip text associated with the specified tree view path.",
              "snippet": "tvSetTooltip ${1:[${2:idc}, ${3:path}, ${4:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetTooltip",
              "description": "Sets the tooltip text associated with the specified tree view path.",
              "snippet": "tvSetTooltip ${2:[${3:path}, ${4:text}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetValue",
              "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
              "snippet": "tvSetValue [idc, ${2:path}, ${3:val}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetValue",
              "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
              "snippet": "tvSetValue [${2:path}, ${3:val}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSort",
              "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.\n\nParam reversed is optional.",
              "snippet": "tvSort ${2:[${3:path}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSort",
              "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.\n\nParam reversed is optional.",
              "snippet": "tvSort ${1:[${2:idc}, ${3:path}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSortByValue",
              "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.",
              "snippet": "tvSortByValue ${2:[${3:path}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSortByValue",
              "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.",
              "snippet": "tvSortByValue ${1:[${2:idc}, ${3:path}, ${4:reversed}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvText",
              "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
              "snippet": "tvText ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = control ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvText",
              "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
              "snippet": "tvText ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvTooltip",
              "description": "Gets the tooltip text associated with the specified tree view path.",
              "snippet": "tvTooltip ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvTooltip",
              "description": "Gets the tooltip text associated with the specified tree view path.",
              "snippet": "tvTooltip ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvValue",
              "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
              "snippet": "tvValue [${1:idc}, ${2:path}]$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ctrl ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvValue",
              "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
              "snippet": "tvValue ${2:path}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/type",
              "description": "Returns a string of a Location's class name or Task's type.",
              "snippet": "type ${1:location}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/type",
              "description": "Returns a string of a Location's class name or Task's type.",
              "snippet": "type ${1:task}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/typeName",
              "description": "Returns the data type of an expression. \n\nThe type is returned as on of the following all-uppercase strings:\n\"ARRAY\"\n\"BOOL\"\n\"CODE\"\n\"CONFIG\"\n\"CONTROL\"\n\"DISPLAY\"\n\"GROUP\"\n\"LOCATION\"\n\"OBJECT\"\n\"SCALAR\"\n\"SCRIPT\"\n\"SIDE\"\n\"STRING\"\n\"TEXT\"\n\"TEAM_MEMBER\"\n\"NAMESPACE\"\n\"DIARY_RECORD\"\n\"TASK\"\nThey represent the available data types in Arma.\n\u24d8For comparing types, use isEqualType command instead in Arma 3",
              "snippet": "typeName ${1:anything}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/typeOf",
              "description": "Returns the config class name of given object or \"\" if object does not have a config class.",
              "snippet": "typeOf ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/UAVControl",
              "description": "Returns array with current operator of UAV and his vehicle role in UAV. If nobody is controlling the UAV, the command tries to find any person with connected terminal to this UAV, in which case the vehicle role is an empty string. If command cannot find anyone, output is [objNull, \"\"].\n\nSince Arma 3 v1.95.146028 this command returns both driver and gunner units if the UAV is controlled by 2 players. Here is the list of all expected outputs:\n[player1, \"DRIVER\"] - player1 is controlling the UAV and is the pilot\n[player2, \"GUNNER\"] - player2 is controlling the UAV and is the gunner\n[player1, \"DRIVER\", player2, \"GUNNER\"] - player1 is controlling the UAV and is the pilot, player2 is controlling UAV and is the gunner\n[player3, \"\"] - no one is controlling the UAV, player3 is connected to the UAV via terminal, but not controlling it yet\n[objNull, \"\"] - nobody is controlling or connected to the UAV\n\n\u24d8This command works only for vehicles, to get a unit remote controlling a unit, see Example 3 on the remoteControl page.",
              "snippet": "UAVControl ${1:uav}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Namespace) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uiNamespace",
              "description": "Returns the global namespace attached to user interface.",
              "text": "uiNamespace"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uiSleep",
              "description": "Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.",
              "snippet": "uiSleep ${1:delay}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignCurator",
              "description": "Unassign curator (will destroy both sides of connection).",
              "snippet": "unassignCurator ${1:curatorObj}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignItem",
              "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.",
              "snippet": "unassignItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignTeam",
              "description": "Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam \"MAIN\".",
              "snippet": "unassignTeam ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignVehicle",
              "description": "Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit.\nIf the unit is currently in that vehicle, the group leader will issue an order to disembark.\n\nNotes:\nImportant is to understand the basic system first:\naddVehicle creates a vehicle pool for the AI group to use.\nleaveVehicle removes a vehicle from the pool (and makes AI disembark when in that vehicle).\nHowever there is also assignedVehicle. This is about the current vehicle in use essentially. The assignment happens via the various assignAsXXX/moveInXXX commands, or player/AI GL getIn radio commands, getIn waypoint, or when units start in vehicles or get moved in to a vehicle by Zeus/via Eden.\nSo the idea of unassignVehicle is to remove the current vehicle in use.\nHowever as long as the vehicle is still part of the vehicle pool of the group the AI GL may order the AI to re-enter the vehicle immediately.\nTo stop this from happening, one can use orderGetIn/allowGetIn false to (temporarily) disallow the AI from entering any vehicle.\nIf you use leaveVehicle on an AI group not in the vehicle, only the AI GL will get the vehicle removed from assignedVehicle. However when you now apply unassignVehicle on the whole group, it will stick/the AI GL not order to re-enter immediately - as the AI GL no longer has the vehicle in his pool for the group.\nFor player GL lead AI, the command removes the assignment. However it won't make the AI disembark the vehicle.",
              "snippet": "unassignVehicle ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/underwater",
              "description": "Returns whether the object is fully underwater\n\u24d8This command works well with Arma 3 mini-submarines, which was the primary design goal most likely",
              "snippet": "underwater ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniform",
              "description": "Returns name of uniform.",
              "snippet": "uniform ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformContainer",
              "description": "Returns a cargo container of a unit's uniform.",
              "snippet": "uniformContainer ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformItems",
              "description": "Get array with all items (of any kind, even weapons) from uniform.",
              "snippet": "uniformItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformMagazines",
              "description": "Get array with all magazines from uniform of the given unit.",
              "snippet": "uniformMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAddons",
              "description": "Returns list with addons the unit belongs to.",
              "snippet": "unitAddons ${1:className}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAimPosition",
              "description": "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.",
              "snippet": "unitAimPosition ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAimPositionVisual",
              "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.",
              "snippet": "unitAimPositionVisual ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitBackpack",
              "description": "Returns unit's backpack",
              "snippet": "unitBackpack ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitCombatMode",
              "description": "Gets unit's combat mode",
              "snippet": "unitCombatMode ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitIsUAV",
              "description": "Returns true if the unit type is UAV - coresponding to transport param \"isUAV\"",
              "snippet": "unitIsUAV ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitPos",
              "description": "Return the unit position rules.\n\nThe return value is always \"Auto\" unless the unit has gotten a setUnitPos command. In that case the value is the last stance the unit was ordered to.\nAvailable modes are listed at setUnitPos.",
              "snippet": "unitPos ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitReady",
              "description": "Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished.",
              "snippet": "unitReady ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitRecoilCoefficient",
              "description": "Returns recoil coefficient of a soldier.",
              "snippet": "unitRecoilCoefficient ${1:soldier}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/units",
              "description": "Returns an array with all the units in the group or group of the unit.\nFor a destroyed object an empty array is returned.",
              "snippet": "units ${1:groupOrUnit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = units ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitsBelowHeight",
              "description": "Returns units in group/array below given Above Terrain Level (ATL) height.\n\u24d8unit's ATL height can be found with _height = (getPosATL _unit) select 2;",
              "snippet": "unitsBelowHeight ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Object) = group ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitsBelowHeight",
              "description": "Returns units in group/array below given Above Terrain Level (ATL) height.\n\u24d8unit's ATL height can be found with _height = (getPosATL _unit) select 2;",
              "snippet": "unitsBelowHeight ${2:height}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitTurret",
              "description": "Returns the turret path the given vehicle's gunner is in. [-1] is returned if gunner is driver. When unit is not in any of vehicle's turret, empty array [] is returned. To get unit in turret see turretUnit",
              "snippet": "unitTurret ${2:gunner}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unlinkItem",
              "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.",
              "snippet": "unlinkItem ${2:item}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unlockAchievement",
              "description": "Unlocks the given achievement. The achievements are listed in CfgAchievements, however none of the currently listed achievements is used in Arma 3, hence the command always returns false.\n\n\u26a0This command is obsolete and was used in the experimental (unreleased) Arma 2 Xbox 360 version as stated\nhere.\nTo unlock a Steam Achievement for Arma 3, see setStatValue.",
              "snippet": "unlockAchievement ${1:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = teamMember ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unregisterTask",
              "description": "Unregisters a task type from given agent. The task type is the name given in CfgTasks classes in name property. Also available from registeredTasks array.",
              "snippet": "unregisterTask ${2:name}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateDrawIcon",
              "description": "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.\n\u24d8Some Old Editor Command",
              "snippet": "updateDrawIcon ${2:[object,string identifier,color,offset,width,height,maintain size?,angle,shadow]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "map ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateMenuItem",
              "description": "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.\n\u24d8Some Old Editor Command",
              "snippet": "updateMenuItem ${2:[menu item index,text,command]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateObjectTree",
              "description": "Update the editor object tree.\n\u24d8Some Old Editor Command",
              "snippet": "updateObjectTree ${1:map}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/useAIOperMapObstructionTest",
              "description": "Toggle secondary obstruction test on road paths. \u24d8This command is most likely only available for arma3diag_x64.exe.",
              "snippet": "useAIOperMapObstructionTest ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/useAISteeringComponent",
              "description": "Enable the new AI driving, used to test the old and new AI driving.",
              "snippet": "useAISteeringComponent ${1:state}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "soldier ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/useAudioTimeForMoves",
              "description": "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.",
              "snippet": "useAudioTimeForMoves ${2:toggle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/userInputDisabled",
              "description": "Returns true if user input is disabled",
              "text": "userInputDisabled"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorAdd",
              "description": "Adds two 3D vectors. Replaces BIS_fnc_vectorAdd.",
              "snippet": "vectorAdd ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorCos",
              "description": "Cosine of angle between two 3D vectors.",
              "snippet": "vectorCos ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorCrossProduct",
              "description": "Cross product of two 3D vectors. \nIn layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain surfaceNormal). To invert direction of the normal, swap arguments around.",
              "snippet": "vectorCrossProduct ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDiff",
              "description": "Subtracts one 3D vector from another. (vector1 - vector2)",
              "snippet": "vectorDiff ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDir",
              "description": "Returns object's normalized direction vector in world space ([x,y,z]). \nA unit facing North would return [0,1,0]\nA unit facing East would return [1,0,0]\nA unit facing South would return [0,-1,0]\nA unit facing West would return [-1,0,0]",
              "snippet": "vectorDir ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDirVisual",
              "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope. \nA unit facing North would return [0,1,0]\nA unit facing East would return [1,0,0]\nA unit facing South would return [0,-1,0]\nA unit facing West would return [-1,0,0]",
              "snippet": "vectorDirVisual ${1:objectName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDistance",
              "description": "Returns Euclidean distance between two 3D vectors or two 3D positions.",
              "snippet": "vectorDistance ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDistanceSqr",
              "description": "Squared distance between two 3D vectors.",
              "snippet": "vectorDistanceSqr ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDotProduct",
              "description": "Dot product of two 3D vectors.",
              "snippet": "vectorDotProduct ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vector1 ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorFromTo",
              "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces  normalised vector between given 2 points. To get a normal vector use vectorDiff.",
              "snippet": "vectorFromTo ${2:vector2}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorLinearConversion",
              "description": "Interpolates vector between the given \"vectorFrom\" and \"vectorTo\" value according to the given range value",
              "snippet": "vectorLinearConversion ${1:[${2:rangeFrom}, ${3:rangeTo}, ${4:rangeValue}, ${5:vectorFrom}, ${6:vectorTo}, ${7:clip}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMagnitude",
              "description": "Magnitude of a 3D vector.",
              "snippet": "vectorMagnitude ${1:vector}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMagnitudeSqr",
              "description": "Squared magnitude of a 3D vector.",
              "snippet": "vectorMagnitudeSqr ${1:vector}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorModelToWorld",
              "description": "Converts vector direction from model to world space.",
              "snippet": "vectorModelToWorld ${2:modelDir}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorModelToWorldVisual",
              "description": "Converts vector from model to world space in render time scope.",
              "snippet": "vectorModelToWorldVisual ${2:modelDir}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = vector ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMultiply",
              "description": "Multiplies 3D vector by a scalar.",
              "snippet": "vectorMultiply ${2:scalar}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorNormalized",
              "description": "Returns normalized vector (unit vector, vectorMagnitude == 1) of given vector. If given vector is 0 result is a 0 vector as well.",
              "snippet": "vectorNormalized ${1:vector}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorUp",
              "description": "Returns up vector of the given object in format Vector3D.",
              "snippet": "vectorUp ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorUpVisual",
              "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.",
              "snippet": "vectorUpVisual ${1:objectName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorWorldToModel",
              "description": "Converts vector direction from world to model space.",
              "snippet": "vectorWorldToModel ${2:worldDir}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorWorldToModelVisual",
              "description": "Converts vector direction from world to model space in render time scope.",
              "snippet": "vectorWorldToModelVisual ${2:worldDir}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicle",
              "description": "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use objectParent",
              "snippet": "vehicle ${1:unitName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleCargoEnabled",
              "description": "Check if the vehicle has enabled transporting other vehicles or not.",
              "snippet": "vehicleCargoEnabled ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleChat",
              "description": "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)\n\nNote: Object parameter must be a vehicle, not a player.\nNote: If you are in a crew seat (i.e. driver, gunner or commander), then it will include that role in the chat name output (Eg: Driver (you_name): \"Message\").",
              "snippet": "vehicleChat ${2:chatText}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleMoveInfo",
              "description": "Returns current vehicle move/turn info (a getter for sendSimpleCommand) in format [moveInfo, turnInfo]. Possible values:\nmoveInfo\n\"FORMATION\" - vehicle is stationary\n\"FORWARD\"  - vehicle is moving forward\n\"FAST\" - vehicle is slow moving forward\n\"SLOW\" - vehicle is fast moving forward\n\"STOP\" - vehicle is stationary\n\"BACK\" - vehicle is reversing\n\"DirectByCommander\" - keyboard pilot is used, i.e. player is in the vehicle and is the effectiveCommander pressing any driving key (WASD or arrows).\n\nturnInfo\n\"LEFT\" - vehicle is turning left (use  \"STOPTURNING\" to cancel)\n\"RIGHT\" - vehicle is turning right (use  \"STOPTURNING\" to cancel)\n\"NONE\" - vehicle is not turning (when script command is used)\n\"ABS\" - vehicle is not turning (when keyboard pilot is used)",
              "snippet": "vehicleMoveInfo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleRadio",
              "description": "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "snippet": "vehicleRadio ${2:radioName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReceiveRemoteTargets",
              "description": "Gets whether the vehicle can acquire targets via datalink from the Side center.",
              "snippet": "vehicleReceiveRemoteTargets ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReportOwnPosition",
              "description": "Gets whether the vehicle shares its own position via datalink with the Side center.",
              "snippet": "vehicleReportOwnPosition ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReportRemoteTargets",
              "description": "Gets whether the vehicle shares acquired targets via datalink with the Side center.",
              "snippet": "vehicleReportRemoteTargets ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicles",
              "description": "Returns an array of all vehicles available to current client. This command returns both empty and crewed vehicles but not soldiers. It will also return \"WeaponHolderSimulated\" of dead bodies (weapon on the ground). Vehicles created with createVehicleLocal will only be returned on the client that created them.",
              "text": "vehicles"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleVarName",
              "description": "Returns the name of the variable which contains a primary editor reference to this object. This is the variable given in the Insert Unit dialog / name field, in the editor. It can be changed using setVehicleVarName. \nIf object refers to a vehicle that wasn't given a name in the editor, the return value is an empty string, \"\".\nSince it is possible to setVehicleVarName individually on each PC, the value of vehicleVarName returned will be local to the PC on which command is executed.",
              "snippet": "vehicleVarName ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/velocity",
              "description": "Return velocity (speed vector) of Unit as an array with format [x, y, z].\n\u26a0Units are in metres per second.",
              "snippet": "velocity ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/velocityModelSpace",
              "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.",
              "snippet": "velocityModelSpace ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/verifySignature",
              "description": "Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server.",
              "snippet": "verifySignature ${1:filename}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vest",
              "description": "Returns name of vest.",
              "snippet": "vest ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestContainer",
              "description": "Returns a cargo container of a unit's vest.",
              "snippet": "vestContainer ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestItems",
              "description": "Get array with all items (of any kind, even weapons) from vest.",
              "snippet": "vestItems ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestMagazines",
              "description": "Get array with all magazines from vest of the given unit.",
              "snippet": "vestMagazines ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/viewDistance",
              "description": "Returns the rendering distance.",
              "text": "viewDistance"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleCompass",
              "description": "Checks if the player has compass opened and visible",
              "text": "visibleCompass"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleGPS",
              "description": "Checks if the player has GPS receiver opened and visible",
              "text": "visibleGPS"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleMap",
              "description": "Return true if the main map is shown (active).",
              "text": "visibleMap"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visiblePosition",
              "description": "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual",
              "snippet": "visiblePosition ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visiblePositionASL",
              "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope.",
              "snippet": "visiblePositionASL ${1:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleScoretable",
              "description": "Checks whether the score table is visible.",
              "text": "visibleScoretable"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleWatch",
              "description": "Checks if the player has watch opened and visible",
              "text": "visibleWatch"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Anything) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waitUntil",
              "description": "Suspends execution of  scheduled script until the given condition satisfied. This command will loop and call the code inside {} mostly every frame (depends on complexity of condition and overall engine load) until the code returns true. The execution of the rest of the script therefore will be suspended until waitUntil completes. \nIf the very first execution of the code returns true the command will exit immediately, therefore it will not produce any \"Suspending not allowed in this context\" error when used inside non-scheduled script. For all other uses it must be executed in environment that allows suspension (canSuspend), such as spawned or execVMed code.\n\u26a0Since Arma 3 v1.93.145618, a condition returning anything other than true or false will result in an appropriate type error.",
              "snippet": "waitUntil ${1:condition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waves",
              "description": "Return waves value.",
              "text": "waves"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachedObject",
              "description": "Gets the object attached to the waypoint.",
              "snippet": "waypointAttachedObject ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Object) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachedVehicle",
              "description": "Gets the vehicle attached to the waypoint.\nA vehicle can be attached to a waypoint by\ncreating the waypoint on top of the vehicle (in the editor)\nusing waypointAttachVehicle",
              "snippet": "waypointAttachedVehicle ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachObject",
              "description": "Attaches a static object via it is numeric ID to the given waypoint.\n\n\u26a0\nThe main syntax doesn't work in Arma 3 anymore.\nThe alternative syntax is (at least) available since Arma 2.",
              "snippet": "waypointAttachObject ${2:objectID}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachObject",
              "description": "Attaches a static object via it is numeric ID to the given waypoint.\n\n\u26a0\nThe main syntax doesn't work in Arma 3 anymore.\nThe alternative syntax is (at least) available since Arma 2.",
              "snippet": "waypointAttachObject ${2:object}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "waypoint ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachVehicle",
              "description": "Attaches a vehicle Object to the given Waypoint.\n\n\u26a0Use this command to associate a transport with \"GETIN\" waypoint, other types of waypoints might work or might not. If you have different type of waypoint to start with, make it a \"GETIN\" type with setWaypointType",
              "snippet": "waypointAttachVehicle ${2:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointBehaviour",
              "description": "Gets the waypoint behavior.",
              "snippet": "waypointBehaviour ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointCombatMode",
              "description": "Gets the waypoint combat mode.",
              "snippet": "waypointCombatMode ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointCompletionRadius",
              "description": "Gets the radius around the waypoint where the waypoint is completed.",
              "snippet": "waypointCompletionRadius ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointDescription",
              "description": "Gets the waypoint description.",
              "snippet": "waypointDescription ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointForceBehaviour",
              "description": "Returns true if the waypoint behavior is forced.",
              "snippet": "waypointForceBehaviour ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointFormation",
              "description": "Gets the waypoint formation.\n\nPossible values are: \n\"NO CHANGE\"\n\"COLUMN\"\n\"STAG COLUMN\"\n\"WEDGE\"\n\"ECH LEFT\"\n\"ECH RIGHT\"\n\"VEE\"\n\"LINE\"\n\"FILE\"\n\"DIAMOND\"",
              "snippet": "waypointFormation ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointHousePosition",
              "description": "Returns buildingPos index assigned to the waypoint.",
              "snippet": "waypointHousePosition ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointLoiterAltitude",
              "description": "Gets the waypoint loiter altitude. Waypoint uses format Waypoint.",
              "snippet": "waypointLoiterAltitude ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointLoiterRadius",
              "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.",
              "snippet": "waypointLoiterRadius ${1:Waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointLoiterType",
              "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.",
              "snippet": "waypointLoiterType ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointName",
              "description": "Gets the waypoint name.",
              "snippet": "waypointName ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointPosition",
              "description": "Returns Position of the given waypoint. \n\u24d8This command is identical to getWPPos",
              "snippet": "waypointPosition ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypoints",
              "description": "Returns an array of waypoints for the specified unit/group.",
              "snippet": "waypoints ${1:groupName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointScript",
              "description": "Gets the waypoint script.",
              "snippet": "waypointScript ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointsEnabledUAV",
              "description": "Checks if the UAV has waypoints enabled.",
              "snippet": "waypointsEnabledUAV ${1:uav}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointShow",
              "description": "A getter for showWaypoint command. Possible values are:\n\"NEVER\" - never show it\n\"EASY\" - show only in cadet mode\n\"ALWAYS\" - always show it\n\"ERROR\" - when set to any different string",
              "snippet": "waypointShow ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointSpeed",
              "description": "Gets the waypoint speed.\n\nPossible values are:\n\"UNCHANGED\"\n\"LIMITED\"\n\"NORMAL\"\n\"FULL\"",
              "snippet": "waypointSpeed ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointStatements",
              "description": "Gets the waypoint statements.",
              "snippet": "waypointStatements ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointTimeout",
              "description": "Gets the waypoint timeout values.",
              "snippet": "waypointTimeout ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointTimeoutCurrent",
              "description": "Gets the current timeout for currentWaypoint of a group or -1 if countdown is not in progress.",
              "snippet": "waypointTimeoutCurrent ${1:group}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointType",
              "description": "Gets the waypoint type.\n\nType can be:\n\"MOVE\"\n\"DESTROY\"\n\"GETIN\"\n\"SAD\"\n\"JOIN\"\n\"LEADER\"\n\"GETOUT\"\n\"CYCLE\"\n\"LOAD\"\n\"UNLOAD\"\n\"TR UNLOAD\"\n\"HOLD\"\n\"SENTRY\"\n\"GUARD\"\n\"TALK\"\n\"SCRIPTED\"\n\"SUPPORT\"\n\"GETIN NEAREST\"\n\"DISMISS\"\n\"AND\"\n\"OR\"\n\nMore details at Waypoint types.",
              "snippet": "waypointType ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointVisible",
              "description": "A getter for setWaypointVisible command.\n\n\u26a0Returns 0 (Number) instead of Booleanean for an invalid waypoint",
              "snippet": "waypointVisible ${1:waypoint}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = unit ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponAccessories",
              "description": "Get array with all items linked to a given weapon.\n\u26a0This command does not return loaded magazines, see weaponsItems",
              "snippet": "weaponAccessories ${2:weapon}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = container ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponAccessoriesCargo",
              "description": "Returns array with all items assigned to the given weapon in given cargo container.\n\u26a0This is unofficial documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
              "snippet": "weaponAccessoriesCargo ${2:[${3:weaponId}, ${4:creatorId}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponCargo",
              "description": "Get array with weapons from ammo box (or any general weapon holder container).",
              "snippet": "weaponCargo ${1:box}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Vector) = vehicleName ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponDirection",
              "description": "Returns the direction that the vehicle weapon is aiming in. For addons the weapon name must be an entry in CfgWeapons.\n\n\u24d8Alternatively, you can get turret and gun angle in degrees using animationSourcePhase or animationPhase commands",
              "snippet": "weaponDirection ${2:weaponName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponInertia",
              "description": "Returns current rate of how much the weapon view is distorted because of quick aiming",
              "snippet": "weaponInertia ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Boolean) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponLowered",
              "description": "Returns true if given soldier's weapon is lowered. \n\u26a0This command will always return false if player is sprinting, even without a weapon. Alternatively, the weapon raised state could be obtained via animationState command ...slow... vs ...sras...",
              "snippet": "weaponLowered ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weapons",
              "description": "Returns array of names of all Unit's weapons.",
              "snippet": "weapons ${1:vehicleName}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsItems",
              "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons. \n\u24d8This command will return weapon magazines as well in format [magazineName, ammoCount], or empty array [] if weapon has no magazine\nSince Arma 3 v1.21.124406 it is possible to query weapon holders and ammo crates with this command. If the argument is a vehicle, the command will return vehicle's weapons. If the argument is a container, the command will act identical to weaponsItemsCargo.\nSince Arma 3 v1.95.145811 the returned array always contains secondary muzzle magazine info and consistent with getUnitLoadout format for weapon items.\nSince Arma 3 v2.01.146668 the returned array can contains binocular weapon items.",
              "snippet": "weaponsItems ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsItemsCargo",
              "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info. If the argument is a vehicle with weapons, vehicles cargo is searched, unlike with weaponsItems command, which will return vehicle's weapons instead. \nSince Arma 3 v1.95.145811 the returned array always contains secondary muzzle magazine info and consistent with getUnitLoadout format for weapon items.",
              "snippet": "weaponsItemsCargo ${1:vehicle}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponState",
              "description": "Returns the currently selected weapon state for unit or vehicle.\nSince Arma 3 v1.69.140397 this command has been improved and extended:\nA vehicle's weapon query doesn't need a weapon operator provided the weapon or muzzle is specified in optional param.(keep in mind that by default a vehicle has no weapons selected)\nDriver turret can now be accessed as well with turret path [-1].\nMuzzle name is supported as well as weapon name. The command searches for weapon first, then if not found, muzzle is searched for.",
              "snippet": "weaponState ${1:unit}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String, Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponState",
              "description": "Returns the currently selected weapon state for unit or vehicle.\nSince Arma 3 v1.69.140397 this command has been improved and extended:\nA vehicle's weapon query doesn't need a weapon operator provided the weapon or muzzle is specified in optional param.(keep in mind that by default a vehicle has no weapons selected)\nDriver turret can now be accessed as well with turret path [-1].\nMuzzle name is supported as well as weapon name. The command searches for weapon first, then if not found, muzzle is searched for.",
              "snippet": "weaponState ${1:[${2:vehicle}, ${3:turretPath}, ${4:${6:weapon}}]}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, String) = vehicle ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsTurret",
              "description": "Returns all weapons of given turret. Use turret path [-1] for driver's turret.",
              "snippet": "weaponsTurret ${2:turretPath}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weightRTD",
              "description": "For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.\nReturns weight of RTD helicopter.",
              "snippet": "weightRTD ${1:helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Side) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/west",
              "description": "West side.",
              "text": "west"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/WFSideText",
              "description": "Returns the unlocalized text value of an object's side / a group's side or a side as:\n\neast, opfor - \"East\"\nwest, blufor - \"West\"\nresistance, independent - \"Resistance\"\ncivilian - \"Civilian\"\nsideUnknown - \"Unknown\"\nsideEnemy - \"Unknown\"\nsideFriendly - \"Unknown\"\nsideLogic - \"Unknown\"\nsideEmpty - \"Unknown\"\nsideAmbientLife - \"Unknown\"",
              "snippet": "WFSideText ${1:param}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(While Type) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/while",
              "description": "Repeats Code while condition is true. A part of while do construct.",
              "snippet": "while ${1:condition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/wind",
              "description": "Returns the current wind vector (in m/s) as array [x, y, z].\nNOTE: the last value (z, \"up-down\") always returns 0 \u2013 wind being only horizontal.",
              "text": "wind"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/windDir",
              "description": "Returns the current wind azimuth.",
              "text": "windDir"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/windRTD",
              "description": "Returns wind strength and direction.\nFor this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.",
              "text": "windRTD"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/windStr",
              "description": "Returns the current wind strength.",
              "text": "windStr"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/wingsForcesRTD",
              "description": "For this command to have any effect, the Arma 3 Advanced Helicopter Flight Model (AFM) has to be enabled. If AFM is enabled can be checked with difficultyEnabledRTD.\nReturns force produced by wings.",
              "snippet": "wingsForcesRTD ${1:RTD_helicopter}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/with",
              "description": "Creates a With Type that is used inside a do construct in order to execute code inside a given namespace. \n\u26a0when used in a do-construct in scripts with allowed suspension, an unexpected namespace switch could happen (see note below)\nNOTE for the reasons unknown, namespace switching might unexpectedly occur inside some scopes (for, if, try, call) started in scheduled scripts (canSuspend true) after small suspension if with was not the main scope. For example: \n[] spawn\n{\n\twith uiNamespace do \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [false, true] <-- switching\n\t\t};\n\t};\n};\nHowever if with used in parent scope, everything works correctly:\nwith uiNamespace do\n{\n\t[] spawn \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false] <-- NO switching\n\t\t};\n\t};\n};\nTo eliminate possibility of error you can also use setVariable or getVariable with desired Namespace, which is also scheduled environment safe.",
              "snippet": "with ${1:namespace}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(String) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldName",
              "description": "Return the name of the currently loaded world.",
              "text": "worldName"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Number) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldSize",
              "description": "Returns the engine calculated size (terrain side length) of the current world (BIS_fnc_mapSize may return the same value, but is just a simple look up in  config).",
              "text": "worldSize"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = model ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToModel",
              "description": "Converts position from world space to object model space.",
              "snippet": "worldToModel ${2:position}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array, Position) = object ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToModelVisual",
              "description": "Converts position from world space to object model space in render time scope.",
              "snippet": "worldToModelVisual ${2:worldPosition}$0"
            },
            {
              "rightLabel": "SQF Command",
              "type": "function",
              "leftLabel": "(Array) = ",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToScreen",
              "description": "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.",
              "snippet": "worldToScreen ${1:position}$0"
            }
          ]
        }
      }
    }
  }
}