{
  ".source.sqf": {
    "autocomplete": {
      "symbols": {
        "builtin": {
          "suggestions": [
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a negation of Boolean expression. That means true becomes false and vice versa.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/%21%20a",
              "snippet": "! ${1:a}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unary minus: zero minus a",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/-%20a",
              "snippet": "- ${1:a}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns whether one value is not equal to another.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%21%3D%20b",
              "snippet": "!= ${3:b}$0"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remainder of a divided by b.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%25%20b",
              "snippet": "% ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).\n\nIdentical to: a and b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%26%26%20b",
              "snippet": "&& ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "a",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).\n\nIdentical to: a and b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%26%26%20b"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the value of a multiplied by b.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%2A%20b",
              "snippet": "* ${2:b}$0"
            },
            {
              "leftLabel": "(Number, Array) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Subtracts b from a. a and b need to be of the same type, both Numbers or both Arrays. In Arma 3 it is possible to subtract nested arrays.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20-%20b",
              "snippet": "- ${2:b}$0"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "a divided by b. Division by 0 throws \"Division by zero\" error, however script doesn't stop and the result of such division is assumed to be 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20/%20b",
              "snippet": "/ ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = valuea ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if one value is equal to another.\n\nBoth values need to be of the same type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%3D%3D%20b",
              "snippet": "== ${3:valueb}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if a is greater than b, else returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20greater%20b",
              "snippet": "> ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if a is greater than or equal to b, else returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20greater%3D%20b",
              "snippet": ">= ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if a is less than b, else returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20less%20b",
              "snippet": "< ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if a is less than or equal to b, else returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20less%3D%20b",
              "snippet": "<= ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a or b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20or%20b",
              "snippet": "|| ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "a",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a or b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20or%20b"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "b added to a.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20plus%20b",
              "snippet": "+ ${2:b}$0"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "a raised to the power of b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%20%5E%20b",
              "snippet": "^ ${2:b}$0"
            },
            {
              "leftLabel": "a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "See switch do",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/a%3Ab",
              "snippet": ": ${2:b}$0"
            },
            {
              "leftLabel": "(Config) = config ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns subentry of config entry with given name, (alias for >>).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/config%20/%20name",
              "snippet": "/ ${2:name}$0"
            },
            {
              "leftLabel": "(Config) = config ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns subentry of config entry with given name. Identical to config/name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/config%20greater%20greater%20name",
              "snippet": ">> ${2:name}$0"
            },
            {
              "leftLabel": "(Number, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unary plus - returns a copy of valuea.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/plus%20a",
              "snippet": "+ ${1:valuea}$0"
            },
            {
              "leftLabel": "(String, Array) = valuea ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "valuea and valueb are concatenated",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/valuea%20plus%20valueb",
              "snippet": "+ ${2:valueb}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Absolute value of a real number",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/abs",
              "snippet": "abs ${1:n}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "accTime",
              "description": "Returns the current time acceleration factor",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/accTime"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "ArcCosine of a number, result in Degrees",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/acos",
              "snippet": "acos ${1:x}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax. \n\n \nNOTES: \n While this command should be executed where unit is local, it is not always the case. Actions such as \"Eject\", \"GetOut\", \"GetInXXXX\", \"MoveToXXXX\", etc can be executed on remote units. \n In SP, when user Alt+Tabs the simulation is paused and so the action will also halt until user returns to the game. For example, player action [\"GetInDriver\", car] executed while user is Alt+Tabbed will result in user seeing the action happening when he returns to the game screen. This doesn't happen in MP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/action",
              "snippet": "action ${2:actionArray}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionIDs",
              "snippet": "actionIDs ${1:entity}$0"
            },
            {
              "leftLabel": "(Array, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Array containing dikCodes of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or user action names or user profile, for example:\nkeyWatch[]={24};\nTo retrieve the value, use the property name without 'key':\nactionKeys \"Watch\"; // 24\nIn addition, some of the actions are also listed in here: inputAction/actions",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeys",
              "snippet": "actionKeys ${1:userAction}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysImages",
              "snippet": "actionKeysImages ${1:userAction}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysImages",
              "snippet": "actionKeysImages ${1:[${2:userAction}, ${3:maxKeys}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "snippet": "actionKeysNames ${1:userAction}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "snippet": "actionKeysNames ${1:[${2:userAction}, ${3:maxKeys}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNames",
              "snippet": "actionKeysNames ${1:[${2:userAction}, ${3:maxKeys}, ${4:inputDevicePriority}]}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "snippet": "actionKeysNamesArray ${1:userAction}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "snippet": "actionKeysNamesArray ${1:[${2:userAction}, ${3:maxKeys}]}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionKeysNamesArray",
              "snippet": "actionKeysNamesArray ${1:[${2:userAction}, ${3:maxKeys}, ${4:inputDevicePriority}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns localized name of action.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionName",
              "snippet": "actionName ${1:action}$0"
            },
            {
              "leftLabel": "(Array, Nothing) = entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Array with params for given user action id (similar to addAction param array). The output array is of the following format: \n[title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection],  where:\n title: String - action title text\n script: String - script file or script expression assigned to the action\n arguments: Anything or nil - arguments passed to the action\n priority: Number - action priority on the action menu\n showWindow: Boolean - whether the action is shown in the center of the screen too\n hideOnUse: Boolean - whether the action menu should close after selecting the action \n shortcut: String - action bindings to some existing engine action if any\n condition: String - expression returning true or nil for action to appear on the action menu\n radius: Number - max distance to entity at which action becomes available. -1 means it is engine default (~15m)\n unconscious: Boolean - whether the action is available to unconscious person\n textWindowBackground: String - same as textWindowBackground in setUserActionText\n textWindowForeground: String - same as textWindowForeground in setUserActionText\n selection: String - named selection in Geometry LOD to which the action is attached\nNew array element selection is available since Arma 3 v1.69.140846",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/actionParams",
              "snippet": "actionParams ${2:id}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates the listed addons. The list of active addons is initialized during this function.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activateAddons",
              "snippet": "activateAddons ${1:[addon1, ...]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "activatedAddons",
              "description": "Returns a list of all activated addons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activatedAddons"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/activateKey",
              "snippet": "activateKey ${1:keyname}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Connect entities together.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENConnection",
              "snippet": "add3DENConnection [${1:type}, ${2:from}, ${3:to}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add code to be run when a Eden Editor event is triggered.\n\nSee the list of all Eden Editor Event Handlers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENEventHandler",
              "snippet": "add3DENEventHandler [${1:type},${2:code}]$0"
            },
            {
              "leftLabel": "(Number) = parentLayerID ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add an editing layer in Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/add3DENLayer",
              "snippet": "add3DENLayer ${2:name}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command syntax is for Arma 3 only. For TKOH and older versions see addAction TKOH\n\nAdds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (eg: building). Adding an action to the player obviously makes that action available to the player at all times. The appearance of onscreen text could be further tweaked with setUserActionText. For event handling of user interaction see inGameUISetEventHandler\nThis command has local effect. Created action is only available on the computer where command was executed. To make action available to all players, command must be executed on all connected clients (see remoteExec). addAction is also ignored on dedicated server, because of no user interface. In Arma 3 addAction does not work on animals. This is intended behavior.  \nSince Arma 3 v1.63.136787, two new params are available: radius and unconscious.\nSince Arma 3 v1.69.140846, new param is available: selection.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addAction",
              "snippet": "addAction ${2:[${3:title}, ${4:script}, ${9:arguments}, ${10:priority}, ${11:showWindow}, ${12:hideOnUse}, ${13:shortcut}, ${14:condition}, ${15:radius}, ${16:unconscious}, ${17:selection}]}$0"
            },
            {
              "leftLabel": "(Number) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (eg: building). Adding an action to the player obviously makes that action available to the player at all times. \n\nThis command has local effect. Created action is only available on the computer where command was executed. To make action available to all players, command must be executed on all connected clients.\n\nNote: addAction will be ignored on dedicated server, probably because no UI.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addAction%20TKOH",
              "snippet": "addAction [${2:title}, ${3:script}, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip]$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit.\nClassname list of available backpacks\u00a0:\nArma 2 OA backpacks\nArma 3 backpacks - objects starting with \"B_\", starts with \"B_AssaultPack_khk\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpack",
              "snippet": "addBackpack ${2:packClassName}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here.\n\n\n\n\n\n \n\n In Arma 3, arguments for this command must be local (). For global variant see addBackpackCargoGlobal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackCargo",
              "snippet": "addBackpackCargo ${1:[${3:packClassName},${4:count}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackCargoGlobal",
              "snippet": "addBackpackCargoGlobal [${2:packClassName}, ${3:count}]$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a backpack to a unit (even non-local)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addBackpackGlobal",
              "snippet": "addBackpackGlobal ${2:backpack}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates the camera shaking effect, like when you are near an explosion",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCamShake",
              "snippet": "addCamShake [${1:power}, ${2:duration}, ${3:frequency}]$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allow curator use of given addon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorAddons",
              "snippet": "addCuratorAddons ${2:addons}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds or changes curator camera area (depends on if ID is already used).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorCameraArea",
              "snippet": "addCuratorCameraArea ${1:[${3:cameraAreaID},${4:position},${5:radius}]}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Register objects which can be edited by a curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorEditableObjects",
              "snippet": "addCuratorEditableObjects ${1:[${3:objects},${4:addCrew}]}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds or changes curator edit area (depends on if ID is already used).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorEditingArea",
              "snippet": "addCuratorEditingArea ${1:[${3:editAreaID},${4:position},${5:radius}]}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds or removes curator points. Points can be only in range from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addCuratorPoints",
              "snippet": "addCuratorPoints ${2:points}$0"
            },
            {
              "leftLabel": "(String) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addEditorObject",
              "snippet": "addEditorObject ${2:[type,[name1,value1,...],subtype class]}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.For more information about event handlers and their types check the scripting topic Event handlers in this reference. You may add as many event handlers of any type as you like to every unit. For instance, if you add an event handler of type \"killed\" and one already exists, the old one doesn't get overwritten. Use removeEventHandler to delete event handlers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addEventHandler",
              "snippet": "addEventHandler ${2:[${3:type}, ${4:command}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space. If you need to define force in model space, use vectorModelToWorld or vectorModelToWorldVisual commands first. The force applied as impulse. For more information see NVIDIA docs",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addForce",
              "snippet": "addForce ${2:[${3:force}, ${4:position}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addGoggles",
              "snippet": "addGoggles ${2:type}$0"
            },
            {
              "leftLabel": "(Number) = group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add icon to a group. Returns icon ID",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addGroupIcon",
              "snippet": "addGroupIcon ${2:properties}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.\nAs of Arma 3 DEV 1.37, this command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addHandgunItem",
              "snippet": "addHandgunItem ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addHeadgear",
              "snippet": "addHeadgear ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItem",
              "snippet": "addItem ${2:item}$0"
            },
            {
              "leftLabel": "box ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see addItemCargoGlobal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemCargo",
              "snippet": "addItemCargo ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "box ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates new items and stores them in the given container. Works with items, weapons and magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemCargoGlobal",
              "snippet": "addItemCargoGlobal ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemPool",
              "snippet": "addItemPool ${1:[${2:\"itemName\"}, ${3:count}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToBackpack",
              "snippet": "addItemToBackpack ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToUniform",
              "snippet": "addItemToUniform ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addItemToVest",
              "snippet": "addItemToVest ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addLiveStats",
              "snippet": "addLiveStats ${2:score}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled, any further addMagazine commands are ignored.\n\nNote: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded. \n\n\n\n\n\n \n\n In Arma 3, the alternative variant of this command (addMagazine ARRAY) accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazine",
              "snippet": "addMagazine ${2:magazineName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled, any further addMagazine commands are ignored.\n\nNote: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded. \n\n\n\n\n\n \n\n In Arma 3, the alternative variant of this command (addMagazine ARRAY) accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazine",
              "snippet": "addMagazine ${2:[${3:magazineName}, ${4:ammoCount}]}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a magazine to a person with said ammunition count.\n\nNote: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded. \n\n\n\n\n\n \n\n In Arma 3 this command accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazine%20array",
              "snippet": "addMagazine [${2:magazineName}, ${3:ammoCount}]$0"
            },
            {
              "leftLabel": "cargospace ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineAmmoCargo",
              "snippet": "addMagazineAmmoCargo ${2:[${3:magazine}, ${4:quantity}, ${5:ammocount}]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored. \n\n\n\n\n\n \n\n In Arma 3, arguments for this command must be local (). For global variant see addMagazineCargoGlobal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineCargo",
              "snippet": "addMagazineCargo ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units.\n\nMP Synchronized",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineCargoGlobal",
              "snippet": "addMagazineCargoGlobal ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a magazine to the unit. \n\nNote: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows. When doing so, application behaviour is undefined.\n\n\n\n\n\n \n\n This command is broken in MP as it dupes inventory items. Use addMagazine <array> for now, it takes global argument and has global effect too.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineGlobal",
              "snippet": "addMagazineGlobal ${2:magazineName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazinePool",
              "snippet": "addMagazinePool ${1:[${2:magazineName}, ${3:count}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazines",
              "snippet": "addMagazines ${2:[${3:magazineName}, ${4:count}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a magazine to the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3  v1.55.133817 it is possible to set custom ammo count in added magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMagazineTurret",
              "snippet": "addMagazineTurret [${3:magazineName}, ${4:turretPath}, ${5:ammoCount}]$0"
            },
            {
              "leftLabel": "(Number) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a new menu button. Priority is optional.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMenu",
              "snippet": "addMenu ${2:[text,priority]}$0"
            },
            {
              "leftLabel": "(Number) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first). \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMenuItem",
              "snippet": "addMenuItem ${2:[menu or index,text,command,priority]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.For the list of available mission event handlers see: Arma_3:_Event_Handlers/addMissionEventHandler",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMissionEventHandler",
              "snippet": "addMissionEventHandler ${1:[${2:type}, ${3:command}]}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds MP event handler (EH) to the given object and returns EH handle. MP event handlers are added globally to every client on network in multiplayer and will fire on every client too upon event. If EH has some data to return upon event (e.g. the \"MPKilled\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution. For more information see: Arma_3:_Event_Handlers#addMPEventHandler",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMPEventHandler",
              "snippet": "addMPEventHandler ${2:[${3:type}, ${4:expression}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Just like addMissionEventHandler, music EH is also attached to the mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addMusicEventHandler",
              "snippet": "addMusicEventHandler ${1:[${2:type}, ${3:function}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets ownership over a remotely detonatable mine to the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addOwnedMine",
              "snippet": "addOwnedMine ${2:mine}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "MP server only: Adds player score.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPlayerScores",
              "snippet": "addPlayerScores ${2:values}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.\nAs of Arma 3 DEV 1.37, this command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPrimaryWeaponItem",
              "snippet": "addPrimaryWeaponItem ${2:item}$0"
            },
            {
              "leftLabel": "varName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:\n\n_this select 0: String - broadcast variable name (same variable name EH is attached to)\n_this select 1: Anything - broadcast variable value \n_this select 2: Object, Group - target the variable got set on with setVariable  (see: alternative syntax)\n\nPlease note:\n* EH works only in Multiplayer environment.\n* EH will not fire on the machine that executed broadcast command, only on the machines that receive the broadcast.\n* The value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable.\n\n\n\n\n\n \n\n  Alt syntax of this command doesn't work as intended",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPublicVariableEventHandler",
              "snippet": "addPublicVariableEventHandler ${2:code}$0"
            },
            {
              "leftLabel": "varName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:\n\n_this select 0: String - broadcast variable name (same variable name EH is attached to)\n_this select 1: Anything - broadcast variable value \n_this select 2: Object, Group - target the variable got set on with setVariable  (see: alternative syntax)\n\nPlease note:\n* EH works only in Multiplayer environment.\n* EH will not fire on the machine that executed broadcast command, only on the machines that receive the broadcast.\n* The value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable.\n\n\n\n\n\n \n\n  Alt syntax of this command doesn't work as intended",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addPublicVariableEventHandler",
              "snippet": "addPublicVariableEventHandler ${2:[${3:target}, ${4:code}]}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a number to the rating of a unit - negative values can be used to reduce the rating.\nThis command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies. \n\nWhen the rating gets below -2000, the unit's side switches to \"ENEMY\" (sideEnemy) and the unit is attacked by everyone.(see Rating Values)\n\nSee also: Arma_3:_Event_Handlers#HandleRating",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addRating",
              "snippet": "addRating ${2:rating}$0"
            },
            {
              "leftLabel": "teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds resources to a team member.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addResources",
              "snippet": "addResources [${2:resource1}, ${3:resource2}, ...]$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a number to the score of a unit. This score is shown in multiplayer in the \"I\" (\"P\" in Arma 3) screen. Negative values will remove from the score. Server execution only. \nSee also: Arma_3:_Event_Handlers#HandleScore",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addScore",
              "snippet": "addScore ${2:score}$0"
            },
            {
              "leftLabel": "side ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addScoreSide",
              "snippet": "addScoreSide ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.\nAs of Arma 3 DEV 1.37, this command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addSecondaryWeaponItem",
              "snippet": "addSecondaryWeaponItem ${2:item}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a unit into the list of units available for Team Switch. Units marked as playable in editor are automatically switchable. This command allows to add non-playable unit into array of switchableUnits and make them available for teamSwitch. SP only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addSwitchableUnit",
              "snippet": "addSwitchableUnit ${1:unitName}$0"
            },
            {
              "leftLabel": "team ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n The same Team Member can be member of several different teams at the same time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addTeamMember",
              "snippet": "addTeamMember ${2:member}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addToRemainsCollector",
              "snippet": "addToRemainsCollector ${1:remains}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Applies torque (rotation momentum) to the  center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by vectorModelToWorld or vectorModelToWorldVisual command. The torque applied as impulse. Diagram below explain which way the object would rotate.  For more information see NVIDIA docs",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addTorque",
              "snippet": "addTorque ${2:torque}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use isUniformAllowed and to force add incompatible uniform use forceAddUniform",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addUniform",
              "snippet": "addUniform ${2:type}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a specified vehicle for use by a specified AI led group taking into account vehicle's cost. The vehicle will be considered as an available vehicle for use by this group. \nWhen vehicle is added in this way, it can appear as a target for the enemy even if the vehicle is currently free of the crew. Vehicles with crew, which are placed in the editor, get automatically added to the group. To remove vehicle from a group, use leaveVehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addVehicle",
              "snippet": "addVehicle ${2:vehicleName}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new vest and try to link it into vest slot.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addVest",
              "snippet": "addVest ${2:type}$0"
            },
            {
              "leftLabel": "(Array, Array, Group) = groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds (or inserts when index is given) a new waypoint to a group.\n\nThe waypoint is placed randomly within a circle with the given center and radius.\n\nThe function returns a waypoint with format [group, index].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWaypoint",
              "snippet": "addWaypoint [${2:center}, ${3:radius}, index, name]$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a weapon to a unit. The unit must be local to the computer where command is executed. For a global version of this command see addWeaponGlobal.\n\nInfantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeapon",
              "snippet": "addWeapon ${2:weapon}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.\n\n\n\n\n\n \n\n In Arma 3, arguments for this command must be local (). For global variant see addWeaponCargoGlobal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponCargo",
              "snippet": "addWeaponCargo ${2:[${3:weaponName}, ${4:count}]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. \n\nMP Synchronized",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponCargoGlobal",
              "snippet": "addWeaponCargoGlobal ${2:[${3:weaponName}, ${4:count}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot.\n\nTo make sure the added weapon is loaded and ready, add the magazine first.\n\n\n\n\n \n\n  This command is broken when used on dedicated server",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponGlobal",
              "snippet": "addWeaponGlobal ${2:weapon}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponItem",
              "snippet": "addWeaponItem ${2:[${3:weaponName}, ${4:itemName}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponItem",
              "snippet": "addWeaponItem [${3:weaponName}, ${4:[${5:itemName}, ${6:ammoCount}, ${7:muzzleName}]}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponPool",
              "snippet": "addWeaponPool ${1:[${2:weaponName}, ${3:count}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/addWeaponTurret",
              "snippet": "addWeaponTurret ${2:[${3:weaponName}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id. Possible results are:\n 1 - client is admin that is voted in\n 2 - client is admin that is logged in\nIn all other cases it returns 0. To self check the admin state of a local client, use BIS_fnc_admin.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/admin",
              "snippet": "admin ${1:ownerID}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return a person for a given agent.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/agent",
              "snippet": "agent ${1:teamMember}$0"
            },
            {
              "leftLabel": "(Array, Team Member) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "agents",
              "description": "Return a list of agents in the current mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/agents"
            },
            {
              "leftLabel": "(Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from PositionAGL to PositionASL",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/AGLToASL",
              "snippet": "AGLToASL ${1:posAGL}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns how good the weapon of the vehicle is aimed at the target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/aimedAtTarget",
              "snippet": "aimedAtTarget ${2:[${3:target}, ${4:weapon}]}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of the object other units can aim to.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/aimPos",
              "snippet": "aimPos ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns air density in given altitude",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airDensityRTD",
              "snippet": "airDensityRTD ${1:altitude}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns throttle position. Works only on player's vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airplaneThrottle",
              "snippet": "airplaneThrottle ${1:airplane}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks a side of the airport. ID is the number to identify which airport on the island you want to check. \n\nPossible values for sara are:\n\n 0 - Paraiso\n 1 - Rahmadi\n 2 - Pita\n 3 - Antigua",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airportSide",
              "snippet": "airportSide ${1:id}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks a side of the airport. ID is the number to identify which airport on the island you want to check. \n\nPossible values for sara are:\n\n 0 - Paraiso\n 1 - Rahmadi\n 2 - Pita\n 3 - Antigua",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/airportSide",
              "snippet": "airportSide ${1:target}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/AISFinishHeal",
              "snippet": "AISFinishHeal ${1:[${2:unit}, ${3:healer}, ${4:healercanheal}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if given vehicle/person/building is alive (i.e. not dead or destroyed). alive objNull returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/alive",
              "snippet": "alive ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "all3DENEntities",
              "description": "Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers in following format:\n [objects, groups, triggers, systems, waypoints, markers, layers, comments]\n objects: Array of Objects\n groups: Array of Groups\n triggers: Array of Objects\n systems: Array of Objects\n waypoints: Array of Arrays in Waypoint format\n markers: Array of Strings\n layers: Array of Numbers\n comments: Array of Numbers",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/all3DENEntities"
            },
            {
              "leftLabel": "(Array, Number, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allAirports",
              "description": "Returns all map airports, both static and dynamic",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allAirports"
            },
            {
              "leftLabel": "(Array, Control) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from control groups",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allControls",
              "snippet": "allControls ${1:display}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allCurators",
              "description": "Returns list of all curators.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allCurators"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allCutLayers",
              "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so: _layerNum = \"myLayerName\" cutFadeOut 0;. The index of the layer name in the array corresponds to the layer number the cut effect will be displayed on. If no layers were defined, the return is [\"\"], because 0 layer is reserved for usage in cut commands without layer param or when name of the layer given is empty \"\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allCutLayers"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allDead",
              "description": "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDead"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allDeadMen",
              "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDeadMen"
            },
            {
              "leftLabel": "(Array, Display) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allDisplays",
              "description": "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via uiNamespace variable, which is updated every time display is opened or closed. For example, to access IGUI displays:\nuiNamespace getVariable [\"IGUI_displays\", []];. Other display variables:\n 3DENDisplays_displays\n 3DENDisplaysTemp_displays\n GUI_displays\n IGUI_displays\n Loading_displays\n CuratorDisplays_displays\n BootcampDisplays_displays\n CuratorTitles_displays\n BootcampTitles_displays\n KartDisplays_displays",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allDisplays"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allGroups",
              "description": "Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allGroups"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allMapMarkers",
              "description": "Return all markers in map including user placed markers (_USER_DEFINED #). \nSince Arma 3 v1.57.134377 User defined markers have the following name format: _USER_DEFINED #<PlayerID>/<MarkerID>/<ChannelID> where:\n <PlayerID> - unique network id of the player (same as _id in onPlayerConnected)\n <MarkerID> - a marker counter id\n <ChannelID> - id of the chat channel on which marker was placed (see currentChannel)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMapMarkers"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allMines",
              "description": "Returns an array of all mines in the mission",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMines"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all mission objects (created by or during a mission) with given type (or its subtype). In some cases allMissionObjects could be substituted with entities, which would be much much faster alternative. Some of the unusual mission objects that can be detected with this command (as well as with nearestObject):\n \"#slop\" - blood drop\n \"#mark\" - unit footprints\n \"#track\" - vehicle tracks\n \"#crater\" - explosion crater on the ground\n \"#crateronvehicle\" - bullet marks on vehicle\n \"#explosion\" - an explosion\n \"#objectdestructed\" - building, tree or bush destruction\n \"#soundonvehicle\" - sound created with say3D for example\n \"#dynamicsound\" - sound source created using createSoundSource",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allMissionObjects",
              "snippet": "allMissionObjects ${1:type}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allow/dissallow 3D mode., \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allow3DMode",
              "snippet": "allow3DMode ${2:bool}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "If true, units can be in a vehicle with broken tracks/wheels.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowCrewInImmobile",
              "snippet": "allowCrewInImmobile ${2:bool}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allows curator placing and working with modules outside of edit areas.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowCuratorLogicIgnoreAreas",
              "snippet": "allowCuratorLogicIgnoreAreas ${2:allow}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage. To check if damage is allowed at current locality, see isDamageAllowed.\n\n\n\n\n\n\u00a0!\n\n This command has to be executed where object is local and as long as object does not change locality the effect of this command will be global. If object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowDamage",
              "snippet": "allowDamage ${2:allow}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. A complete solution for being able to tell whether or not an object can be damaged at current locality looks like this:\n_canBeDamaged = local _obj && isDamageAllowed _obj;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDamageAllowed",
              "snippet": "isDamageAllowed ${1:object}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage.\n\nThe command does not prevent object from taking scripted damage such as setDamage or setHit.\n\n\n\n\n\n\u00a0!\n\n Command has to be executed where object is local and as long as object does not change locality the effect of this command will be global.\nIf object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowDammage",
              "snippet": "allowDammage ${2:allow}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allow/dissallow file ops (load/save etc).\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowFileOperations",
              "snippet": "allowFileOperations ${2:bool}$0"
            },
            {
              "leftLabel": "name ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the cowardice level (the lack of courage or bravery) of a group or unit.\n\nThe more cowardice a Group or Object has, the sooner it will start fleeing.\n\n0 means maximum courage, while 1 means always fleeing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowFleeing",
              "snippet": "allowFleeing ${2:cowardice}$0"
            },
            {
              "leftLabel": "unitArray ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set if the units given in the list are allowed to enter vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowGetIn",
              "snippet": "allowGetIn ${2:allow}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force player to run/jog if set to false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allowSprint",
              "snippet": "allowSprint ${2:state}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allPlayers",
              "description": "Returns a list of all human players including dead players. The command also returns all connected headless clients. To filter headless clients out:\n_justPlayers = allPlayers - entities \"HeadlessClient_F\";\n\nNOTES: \n In player hosted game, the complete array of allPlayers may get delayed at the start. Use BIS_fnc_listPlayers if you need it earlier\n The order of players in the return array may differ from server to clients",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allPlayers"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.NOTE: There is no inheritance in simple objects, so only exact class match is allowed. className is not case sensitive.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allSimpleObjects",
              "snippet": "allSimpleObjects ${1:[className1, className2,...classNameN]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allSites",
              "description": "Return all sites in map.\n\n\n\n\n \n\n  This command is considered deprecated and is no longer supported",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allSites"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of available turret paths from vehicle object. To look up turrets from config, use BIS_fnc_allTurrets",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allTurrets",
              "snippet": "allTurrets ${1:vehicle}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of available turret paths from vehicle object. To look up turrets from config, use BIS_fnc_allTurrets",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allTurrets",
              "snippet": "allTurrets ${1:[${2:vehicle}, ${3:personTurrets}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allUnits",
              "description": "Return a list of all units (all persons except agents) created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. Dead units and units awaiting for respawn are also excluded.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allUnits"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "allUnitsUAV",
              "description": "Return a list of all UAV vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allUnitsUAV"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of all variables from desired namespace. Namespaces supported:\n Control\n Team_Member\n Namespace\n Object\n Group\n Task\n Location",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/allVariables",
              "snippet": "allVariables ${1:namespace}$0"
            },
            {
              "leftLabel": "(Number) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55.133505 the command also returns ammo for units in vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ammo",
              "snippet": "ammo ${2:muzzle}$0"
            },
            {
              "leftLabel": "(Number, Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ammo count on given pylon.\nReturns false (Bool) on failure.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ammoOnPylon",
              "snippet": "ammoOnPylon ${2:pylon}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/and",
              "snippet": "and ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/and",
              "snippet": "and ${2:b}$0"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates given object animation. Animation is defined in CfgModels Animations class of model.cfg or another model config. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.\n\nTo animate door of the house from example below: house animate [\"Door_1_rot\", 1];\nclass Animations\n{\n\tclass Door_1_rot\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_source;\n\t\tselection = Door_1;\n\t\taxis = Door_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0.1;\n\t\tmaxValue = 1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad 110);\n\t};\n\tclass Door_Handle_1_rot_1\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_handle_source;\n\t\tselection = Door_Handle_1;\n\t\taxis = Door_Handle_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0;\n\t\tmaxValue = 0.1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad -50);\n\t};\n};\nSince model.cfg is not always available for reference, most animation names could also be obtained from animationNames command. Class names listed in CfgVehicles AnimationSources bound to \"Proxy\" controller can also be animated with animate command (see createVehicle/vehicles): offroad animate [\"HideBackpacks\", 0];\n\n\n\n\n\n \n\n  It is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimised for MP\n\n\n\n\n\n \n\n  Mixing animateSource command with animate command to animate the same part may produce some undefined behaviour",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animate",
              "snippet": "animate ${2:[${3:animationName}, ${4:phase}, ${5:speed}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateBay",
              "snippet": "animateBay [pylon name/index, anim phase]$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles ->  AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];\nclass AnimationSources\n{\n\tclass CargoRamp_Open\n\t{\n\t\tsource = \"user\";\n\t\tanimPeriod = 5;\n\t\tinitPhase = 0;\n\t};\n\tclass Door_L\n\t{\n\t\tsource = \"door\";\n\t\tanimPeriod = 1.6;\n\t};\n};\nTo animate doors or other sources that have \"user\" controller, use animate command, or even better, animateSource (recommended). Sources with \"hit\" controller can be animated with setHitPointDamage command applied to the name contained in hitpoint property. For availability of animation sources and their controller types see: createVehicle/vehicles",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateDoor",
              "snippet": "animateDoor ${2:[${3:doorname}, ${4:phase}, ${5:instant}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state =1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animatePylon",
              "snippet": "animatePylon [pylon name/index, anim phase]$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property. This allows to use just one command on a bunch of animations related to the same source simultaneously. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.\n\nA class with the same source name should also be present in main config in CfgVehicles AnimationSources and have to be bound to the \"user\" controller for the command to work. If in order to animate door in example below using animate command it would require 2 calls:\n\nhouse animate [\"Door_1_rot\", 1];\n\nhouse animate [\"Door_Handle_1_rot\", 1];\n\nWith animateSource this would require only 1 (provided everything is configured correctly):\n\nhouse animateSource [\"Door_1_sound_source\", 1];\n\n// model.cfg\n....\nclass Animations\n{\n\tclass Door_1_rot\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_sound_source;\n\t\tselection = Door_1;\n\t\taxis = Door_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0.1;\n\t\tmaxValue = 1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad 110);\n\t};\n\tclass Door_Handle_1_rot\n\t{\n\t\ttype = rotation;\n\t\tsource = Door_1_noSound_source;\n\t\tselection = Door_Handle_1;\n\t\taxis = Door_Handle_1_axis;\n\t\tmemory = 1;\n\t\tminValue = 0;\n\t\tmaxValue = 0.1;\n\t\tangle0 = 0;\n\t\tangle1 = (rad -50);\n\t};\n};\n...\n\u00a0\n// config.cpp\n...\nclass AnimationSources\n{\n        class Door_1_sound_source\n        {\n\t        source = \"user\";\n\t        initPhase = 0;\n\t        animPeriod = 1;\n\t        sound = \"GenericDoorsSound\";\n\t        soundPosition = \"Door_1_trigger\";\n        };\n};\n... \nIf you don't know much about model config you can use this page createVehicle/vehicles for reference. Some of the AnimationSources are listed with the class names of the available assets in Arma 3. If it says \"user\", the chances are it could work with animateSource (see example 2).\n\n\n\n\n\n \n\n  It is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimized for MP\n\n\n\n\n\n \n\n  Mixing animateSource command with animate command to animate the same part can lead to unexpected behavior",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animateSource",
              "snippet": "animateSource ${2:[${3:source}, ${4:phase}, ${5:speed}]}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationNames",
              "snippet": "animationNames ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven. Animation names for an object could be found out with animationNames command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use deg command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationPhase",
              "snippet": "animationPhase ${2:animationName}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationSourcePhase",
              "snippet": "animationSourcePhase ${2:source}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/animationState",
              "snippet": "animationState ${1:unitName}$0"
            },
            {
              "leftLabel": "array1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Appends array2 to the back of array1 modifying array1. \nNOTE: append does not return array, it modifies existing array. If you need to return a copy, use \"+\": \narray3 = array1 + array2;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/append",
              "snippet": "append ${2:array2}$0"
            },
            {
              "leftLabel": "(Array) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable _x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/apply",
              "snippet": "apply ${2:code}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "armoryPoints",
              "description": "Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/armoryPoints"
            },
            {
              "leftLabel": "(Array) = array1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/arrayIntersect",
              "snippet": "arrayIntersect ${2:array2}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Arcsine of a number, result in Degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/asin",
              "snippet": "asin ${1:x}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from PositionASL to PositionAGL",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ASLToAGL",
              "snippet": "ASLToAGL ${1:posASL}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts a position from PositionASL to PositionATL",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ASLToATL",
              "snippet": "ASLToATL ${1:pos}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.\n\nIf script was pre-processed with preprocessFileLineNumbers, it will also show/log the error line number and the file name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assert",
              "snippet": "assert ${1:condition}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCargo",
              "snippet": "assignAsCargo ${2:vehicleName}$0"
            },
            {
              "leftLabel": "(Boolean) = character ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assigns the character to a specific cargo / passenger index of the given vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCargoIndex",
              "snippet": "assignAsCargoIndex [${2:vehicle}, ${3:index}]$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsCommander",
              "snippet": "assignAsCommander ${2:vehicleName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsDriver",
              "snippet": "assignAsDriver ${2:vehicleName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsGunner",
              "snippet": "assignAsGunner ${2:vehicleName}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assigns the soldier to turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignAsTurret",
              "snippet": "assignAsTurret [${3:vehicle}, ${4:[turretPath]}]$0"
            },
            {
              "leftLabel": "player ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign player as curator. Two players cannot act as one curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignCurator",
              "snippet": "assignCurator ${2:curatorObj}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the list of soldiers assigned to the given vehicle as a cargo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedCargo",
              "snippet": "assignedCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the soldier assigned to the given vehicle as a commander.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedCommander",
              "snippet": "assignedCommander ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the soldier assigned to the given vehicle as a driver.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedDriver",
              "snippet": "assignedDriver ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the soldier assigned to the given vehicle as a gunner.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedGunner",
              "snippet": "assignedGunner ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all assigned items.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedItems",
              "snippet": "assignedItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the target assigned to the vehicle/unit. To unassign the target use doWatch objNull or commandWatch objNull.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedTarget",
              "snippet": "assignedTarget ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(String, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the team the unit belongs to. Possible values:\n\n MAIN (default and white)\n RED\n GREEN\n BLUE\n YELLOW\n\n\n\n\n\n \n\n This command will return nil if given unit is objNull, remoteControling another unit or is not local",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedTeam",
              "snippet": "assignedTeam ${1:unitName}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the vehicle a unit is assigned to. If no vehicle is assigned objNull is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedVehicle",
              "snippet": "assignedVehicle ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the role a unit is assigned to within its assigned vehicle.\n\nThe array which is returned contains:\n [] - Not assigned to any vehicle\n [\"Driver\"] - Assigned as driver\n [\"Cargo\"] (or [\"Cargo\", [turret path]] since Arma 3 1.31.127272) - Assigned as cargo\n [\"Turret\", [turret path]] - Assigned to a turret\n\nIf no vehicle role is assigned, an empty array is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignedVehicleRole",
              "snippet": "assignedVehicleRole ${1:unitName}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignItem",
              "snippet": "assignItem ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:\n The command requires player to be fully initialised\n The unit getting assigned must be either player himself or a unit in player's group\n Units in player's group as well as player himself can all have different teams assigned\n The colour of the assigned team for a unit is seen on the group management UI as well as squad radar\nThe possible team values (colours) are: \n \"MAIN\" - (white)\n \"RED\" - (red)\n \"GREEN\" - (green)\n \"BLUE\" - (blue)\n \"YELLOW\"  - (yellow)\nNOTE: In older version of the game the effect of this command is local",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignTeam",
              "snippet": "assignTeam ${2:team}$0"
            },
            {
              "leftLabel": "plane ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Not correctly implemented yet, currently it does the same as landAt. As the implementation may get fixed sometime, please do not use this command until then.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignToAirport",
              "snippet": "assignToAirport ${2:id}$0"
            },
            {
              "leftLabel": "plane ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Not correctly implemented yet, currently it does the same as landAt. As the implementation may get fixed sometime, please do not use this command until then.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/assignToAirport",
              "snippet": "assignToAirport ${2:target}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "ArcTangent of a number, result in Degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atan",
              "snippet": "atan ${1:x}$0"
            },
            {
              "leftLabel": "(Number) = x ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180.\n\nNote that this command can handle y being 0, unlike when using atan, and will return 90",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atan2",
              "snippet": "atan2 ${2:y}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Equivalent to atan",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/atg",
              "snippet": "atg ${1:x}$0"
            },
            {
              "leftLabel": "(Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts a position from PositionATL to PositionASL",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ATLToASL",
              "snippet": "ATLToASL ${1:pos}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object a location is attached to. If the location is unattached, then objNull is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedObject",
              "snippet": "attachedObject ${1:location}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of attached objects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedObjects",
              "snippet": "attachedObjects ${1:obj}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object it is attached to.\nReturns objNull if not attached to anything.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachedTo",
              "snippet": "attachedTo ${1:object}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches a location to the specified object. To detach a location, attach it to objNull.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachObject",
              "snippet": "attachObject ${2:object}$0"
            },
            {
              "leftLabel": "object1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches an object to another object. The offset is applied to the object center unless a memory point is provided. If no offset is specified, the offset used will be the current relative positioning of objects against each other.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attachTo",
              "snippet": "attachTo ${2:[${3:object2}, offset, memPoint]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return whether a group's leader can issue attack commands to soldiers under his command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/attackEnabled",
              "snippet": "attackEnabled ${1:name}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a class of a backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpack",
              "snippet": "backpack ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with backpacks from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackCargo",
              "snippet": "backpackCargo ${1:box}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a cargo container of a unit's backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackContainer",
              "snippet": "backpackContainer ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackItems",
              "snippet": "backpackItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all magazines from backpack of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackMagazines",
              "snippet": "backpackMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = backpack ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns how much space is in backpack for given weapon or magazine",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/backpackSpaceFor",
              "snippet": "backpackSpaceFor ${2:weaponName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current charge of a helicopter's batteries.\n 0: empty\n 1: fully charged",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/batteryChargeRTD",
              "snippet": "batteryChargeRTD ${1:helicopterRTD}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the behaviour of a unit. For Arma 3 behaviour explanation see Arma_3_AI_Behavior",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/behaviour",
              "snippet": "behaviour ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "benchmark",
              "description": "Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/benchmark"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns class name of currently used binocular weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/binocular",
              "snippet": "binocular ${1:unit}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "blufor",
              "description": "Pre-defined variable for the blufor side.\nAlias for west.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/blufor"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a bounding box of given object in model coordinate space. This command is rather generous on the size estimation, for more precise coordinates use boundingBoxReal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBox",
              "snippet": "boundingBox ${1:model}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingBoxReal",
              "snippet": "boundingBoxReal ${1:obj}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of original (loaded) center of object in model coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/boundingCenter",
              "snippet": "boundingCenter ${1:object}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.\n\n\nSince Arma 3 v1.47, breakOut can be used to return a value. It is the closest SQF comes to having \"return\" like operation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakOut",
              "snippet": "breakOut ${1:name}$0"
            },
            {
              "leftLabel": "(Anything) = value ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.\n\n\nSince Arma 3 v1.47, breakOut can be used to return a value. It is the closest SQF comes to having \"return\" like operation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakOut",
              "snippet": "breakOut ${2:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Breaks block to scope named name. Nil is returned.\n\nScope name can be assigned using scopeName command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/breakTo",
              "snippet": "breakTo ${1:name}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "briefingName",
              "description": "Returns the name of the current briefing/scenario name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/briefingName"
            },
            {
              "leftLabel": "(Array, Position) = building ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the given indexed exit in a building. The returned value is in format Position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buildingExit",
              "snippet": "buildingExit ${2:index}$0"
            },
            {
              "leftLabel": "(Array, Array) = building ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent. \nSince Arma 3 v.155.133934 if index -1 is supplied, the command will return array with all available positions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buildingPos",
              "snippet": "buildingPos ${2:index}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Generates new roads. Working only in buldozer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buldozer%20LoadNewRoads",
              "snippet": "buldozer_LoadNewRoads ${1:path}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "buldozer_reloadOperMap",
              "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buldozer%20reloadOperMap"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonAction",
              "snippet": "buttonAction ${1:idc}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonAction",
              "snippet": "buttonAction ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. Works with:\n CT_BUTTON\n CT_XBUTTON\n CT_ACTIVETEXT\n CT_SHORTCUTBUTTON\n\n\n\n\n \n\n  The action code is expected to be in SQS format",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonSetAction",
              "snippet": "buttonSetAction ${1:[${2:idc}, ${3:action}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. Works with:\n CT_BUTTON\n CT_XBUTTON\n CT_ACTIVETEXT\n CT_SHORTCUTBUTTON\n\n\n\n\n \n\n  The action code is expected to be in SQS format",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/buttonSetAction",
              "snippet": "buttonSetAction ${2:action}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cadetMode",
              "description": "Returns if the player is currently playing in cadet or veteran mode.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cadetMode"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes given set of compiled instructions with an option to pass arguments to the executed Code. In OFP this command used to accept String for the code.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/call",
              "snippet": "call ${1:code}$0"
            },
            {
              "leftLabel": "(Anything) = args ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes given set of compiled instructions with an option to pass arguments to the executed Code. In OFP this command used to accept String for the code.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/call",
              "snippet": "call ${2:code}$0"
            },
            {
              "leftLabel": "(String) = extension ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like Booleans, Strings, Numbers and Arrays of all of the above. There is currently a limit on how many arguments can be sent and it is 1024. However an argument could be an Array itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n\nPossible error codes:\n 101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n 102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n 201: PARAMS_ERROR_TOO_MANY_ARGS\n 301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.\n\nSince Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .rpt file like so:\n19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]\n\nFor more information see Extensions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/callExtension",
              "snippet": "callExtension ${2:function}$0"
            },
            {
              "leftLabel": "(Array, Code, String, Number) = extension ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.\n\nThis command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.\n\nCurrently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.\n\nSince Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like Booleans, Strings, Numbers and Arrays of all of the above. There is currently a limit on how many arguments can be sent and it is 1024. However an argument could be an Array itself, in this case extension maker will have to provide additional methods for parsing such arguments.\n\nPossible error codes:\n 101: SYNTAX_ERROR_WRONG_PARAMS_SIZE\n 102: SYNTAX_ERROR_WRONG_PARAMS_TYPE\n 201: PARAMS_ERROR_TOO_MANY_ARGS\n 301: EXECUTION_WARNING_TAKES_TOO_LONG\nEach error will have entry in .rpt file with more details.\n\nSince Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .rpt file like so:\n19:06:36 CallExtension loaded: test_extension (.\\test_extension.dll) [1.0.0.1]\n\nFor more information see Extensions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/callExtension",
              "snippet": "callExtension ${2:[${3:function}, ${4:arguments}]}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes a command on the given camera / actor object. Known commands for:\n\n All camera types - \"manual on\", \"manual off\"\n \"camera\" - \"inertia on\", \"inertia off\"\n \"seagull\" - \"landed\", \"airborne\"\n\nWhen you execute camCommand \"landed\" on a flying seagull, it will land and sit on the floor until you call camCommand \"airborne\". The camCommand changes are conducted immediately, the command doesn't wait for camCommit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommand",
              "snippet": "camCommand ${2:command}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommit",
              "snippet": "camCommit ${2:time}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommitPrepared",
              "snippet": "camCommitPrepared ${2:time}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if the conduction of the last camCommit call already finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCommitted",
              "snippet": "camCommitted ${1:camera}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets construction camera parameters. To work with \"camconstruct\" object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camConstuctionSetParams",
              "snippet": "camConstuctionSetParams ${2:[${3:[x,y,z]}, ${4:radius}, ${5:maxAboveLand}]}$0"
            },
            {
              "leftLabel": "(Object) = type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a camera or a seagull object on the given position. Also other objects can be created this way, but vehicles created with camCreate cannot be entered. Any units created with camCreate will remain static. Differently to createVehicle, objects are created without consideration of the collision detection with surrounding objects, thus the objects are spawned exactly at the given position. camCreate is conducted immediately, the command doesn't wait for camCommit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camCreate",
              "snippet": "camCreate ${2:position}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroy an object created with camCreate. camDestroy is conducted immediately, the command doesn't wait for camCommit. \nNOTE: Destroying camera object does not terminate camera effect automatically.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camDestroy",
              "snippet": "camDestroy ${1:object}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need camCommit.\n\nSince Arma 3 v1.73.142217, it is possible to terminate individual r2t source. For example: cam cameraEffect [\"terminate\", \"back\", \"rtt1\"]; // would terminate \"rtt1\" r2t source\ncam cameraEffect [\"terminate\", \"back\"]; // would terminate all r2t sources",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraEffect",
              "snippet": "cameraEffect ${2:[${3:effectName}, ${4:effectPosition}, ${5:r2tName}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable showing of in-game UI during currently active camera effect.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraEffectEnableHUD",
              "snippet": "cameraEffectEnableHUD ${1:enable}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return camera interest for given entity, as set by setCameraInterest, or as autodetected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraInterest",
              "snippet": "cameraInterest ${1:entity}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cameraOn",
              "description": "Returns the vehicle to which the camera is attached.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraOn"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cameraView",
              "description": "Returns mode of active camera view. Mode is one of: \n \"INTERNAL\" (1st person)\n \"EXTERNAL\" (3rd person)\n \"GUNNER\" (optics / sights)\n \"GROUP\" (commander view)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cameraView"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "campaignConfigFile",
              "description": "Return root of campaign description.ext entries hierarchy.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/campaignConfigFile"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Preload the scene for the prepared camera. Time gives timeout, zero means no (infinite) timeout.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreload",
              "snippet": "camPreload ${2:time}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the camera has finished preloading.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreloaded",
              "snippet": "camPreloaded ${1:camera}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera bank angle.\n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareBank",
              "snippet": "camPrepareBank ${2:bank}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera heading. \n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareDir",
              "snippet": "camPrepareDir ${2:direction}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera dive angle. \n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareDive",
              "snippet": "camPrepareDive ${2:dive}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "focusRange is in format [distance,blur]. Prepares the camera focus blur.\n\n[-1,1] will reset default values (auto focusing), [-1,-1] will disable postprocessing (all is focused).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFocus",
              "snippet": "camPrepareFocus ${2:focusRange}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommitPrepared to be conducted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFov",
              "snippet": "camPrepareFov ${2:fieldOfView}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera field of view range for auto zooming. \n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareFovRange",
              "snippet": "camPrepareFovRange ${2:fovRange}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera position (format Position).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPreparePos",
              "snippet": "camPreparePos ${2:position}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera position relative to the current position of the currect target (see camPrepareTarget).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareRelPos",
              "snippet": "camPrepareRelPos ${2:position}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera target to a position or to a target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareTarget",
              "snippet": "camPrepareTarget ${2:position}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Prepares the camera target to a position or to a target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camPrepareTarget",
              "snippet": "camPrepareTarget ${2:target}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets camera bank angle. Does not commit changes.\n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetBank",
              "snippet": "camSetBank ${2:bank}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the orientation of the given camera in the direction of the given vector. Needs camCommit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetDir",
              "snippet": "camSetDir ${2:direction}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets camera dive angle. Does not commit changes. \n\n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetDive",
              "snippet": "camSetDive ${2:dive}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see camCommit). Use [-1, -1] to disable focus completely.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFocus",
              "snippet": "camSetFocus ${2:focusRange}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the zoom level (Field Of View) of the given camera.\n\nThe zoom level is from 0.01 for the nearest and 2 for the furthest zoom value, with a default zoom level of 0.75\n\nThe angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFov",
              "snippet": "camSetFov ${2:level}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the zoom level (Field Of View) start and end values for automatical zooming. \n\nThe default zoom level is 0.7 where 0 is the nearest and 1 is the most far zoom value.\n \n\n\n\n \n\n This command is non-functional!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetFovRange",
              "snippet": "camSetFovRange ${2:fovRange}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the position of the given camera or seagull (see camCreate). It is worth mentioning that camera position can also be set with setPos, in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with camCommit, which is required in this case.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetPos",
              "snippet": "camSetPos ${2:position}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the position of the given camera relative to its target, set with camSetTarget. Needs a call to camCommit to be conducted.Note, that since it sets relative position to the target, the camSetTarget command should be executed already, before camSetRelPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetRelPos",
              "snippet": "camSetRelPos ${2:position}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetTarget",
              "snippet": "camSetTarget ${2:target}$0"
            },
            {
              "leftLabel": "camera ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camSetTarget",
              "snippet": "camSetTarget ${2:position}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns camera's target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camTarget",
              "snippet": "camTarget ${1:camera}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set / clear using of night vision during cutscenes. This command only works with camCreate created camera that is currently the main camera for the player (see example).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/camUseNVG",
              "snippet": "camUseNVG ${1:set}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAdd",
              "snippet": "canAdd ${2:item}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAdd",
              "snippet": "canAdd ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToBackpack",
              "snippet": "canAddItemToBackpack ${2:item}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToBackpack",
              "snippet": "canAddItemToBackpack ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToUniform",
              "snippet": "canAddItemToUniform ${2:item}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToUniform",
              "snippet": "canAddItemToUniform ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToVest",
              "snippet": "canAddItemToVest ${2:item}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given object can be stored into soldier's vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canAddItemToVest",
              "snippet": "canAddItemToVest ${2:[${3:item}, ${4:count}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cancels a simple task destination.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cancelSimpleTaskDestination",
              "snippet": "cancelSimpleTaskDestination ${1:task}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the given vehicle is still able to fire. For the command to return true, vehicle must be alive, have weapon operator and the weapon cannot be damaged >= 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or setVehicleAmmo 0 command is executed on the vehicle, then canFire will always report false for it.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canFire",
              "snippet": "canFire ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if the given vehicle is still able to move. This command checks only the damage value, not the amount of fuel!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canMove",
              "snippet": "canMove ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if it is possible to sling load cargo",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canSlingLoad",
              "snippet": "canSlingLoad ${2:cargo}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if the given soldier is able to stand up.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canStand",
              "snippet": "canStand ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "canSuspend",
              "description": "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.\n\nNote: The definition of scheduled and unscheduled environment is not the same as whether or not the script execution can or cannot be suspended. For example while .sqs and .fsm scripts are scheduled (i.e. added to the scheduler: diag_activeSQSScripts, diag_activeMissionFSMs), they cannot use sleep or be suspended like execVM or spawn scripts can, therefore canSuspend for these types of scripts will return false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canSuspend"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for triggerDynamicSimulation",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canTriggerDynamicSimulation",
              "snippet": "canTriggerDynamicSimulation ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if cargo of this vehicle want to get out when in combat.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canUnloadInCombat",
              "snippet": "canUnloadInCombat ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/canVehicleCargo",
              "snippet": "canVehicleCargo ${2:cargo}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if the given unit is captive. \"captive\" means that enemies will not shoot at the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/captive",
              "snippet": "captive ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.\n\nIf a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/captiveNum",
              "snippet": "captiveNum ${1:unit}$0"
            },
            {
              "leftLabel": "(Switch Type) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command is used inside a switch do construct. Although the syntax below states that this operator takes only one argument, that is most likely not true. It seems like it needs two arguments of which the left one is some sort of hidden variable that gets defined inside a switch do construct. That is the reason why this operator can not be used outside a switch do construct. (see https://foxhound.international/arma-3-sqf-grammar.html for further explaination)\nAlso note that it is not possible to store the returned Switch Type in a variable and use that variable in another switch do construct. It will never lead to an execution of the corresponding code block.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/case",
              "snippet": "case ${1:b}$0"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/catch",
              "snippet": "catch ${1:code}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cbChecked",
              "snippet": "cbChecked ${1:control}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cbSetChecked",
              "snippet": "cbSetChecked ${2:state}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The ceil value of x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ceil",
              "snippet": "ceil ${1:x}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true or false depending on whether the given channel is enabled or disabled. For more information about enabling/disabling of chat channels see enableChannel. Channel / Number correspondence: \n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct\n 6-15 = Custom Radio (Is not supported by channelEnabled)\n\n\n\n\n \n\n Please note that since Arma 3 v1.59.135661 the output of this command was changed from Boolean to Array in format [Boolean, Boolean]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/channelEnabled",
              "snippet": "channelEnabled ${1:channel}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cheatsEnabled",
              "description": "Checks whether cheats are enabled (whether the designers' version is running).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cheatsEnabled"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if given AI feature is currently enabled. Feature may be one of:\n\n\"AwareFormationSoft\", \"CombatFormationSoft\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/checkAIFeature",
              "snippet": "checkAIFeature ${1:feature}$0"
            },
            {
              "leftLabel": "(Number) = [ignore, LOD, ignore2] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/checkVisibility",
              "snippet": "checkVisibility ${5:[${6:beg}, ${7:end}]}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "civilian",
              "description": "Pre-defined variable for the civilian side.\n\nWhen used in a format statement (hint format[\"%1\",civilian]), the string returned is \"CIV\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/civilian"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns short name of location.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/className",
              "snippet": "className ${1:loc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from the backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearAllItemsFromBackpack",
              "snippet": "clearAllItemsFromBackpack ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all backpacks from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearBackpackCargo",
              "snippet": "clearBackpackCargo ${1:box}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all backpacks from the vehicle cargo space. MP synchronized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearBackpackCargoGlobal",
              "snippet": "clearBackpackCargoGlobal ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all icon from group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearGroupIcons",
              "snippet": "clearGroupIcons ${1:group}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemCargo",
              "snippet": "clearItemCargo ${1:box}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemCargoGlobal",
              "snippet": "clearItemCargoGlobal ${1:box}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from ammo box (or any general weapon holder container)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearItemPool",
              "snippet": "clearItemPool ${1:box}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all magazines from the given vehicle's magazine cargo space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazineCargo",
              "snippet": "clearMagazineCargo ${1:vehicleName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all magazines from the vehicle cargo space. MP synchronized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazineCargoGlobal",
              "snippet": "clearMagazineCargoGlobal ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "clearMagazinePool",
              "description": "Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearMagazinePool"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clear the current overlay.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearOverlay",
              "snippet": "clearOverlay ${1:map}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "clearRadio",
              "description": "Clean up the content of radio protocol history.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearRadio"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clear the object's init.\n\n\n\n\n\n \n\n For security reasons, the command was disabled in Arma 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearVehicleInit",
              "snippet": "clearVehicleInit ${1:objectName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all weapons from the given vehicle's weapon cargo space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponCargo",
              "snippet": "clearWeaponCargo ${1:vehicleName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all weapons from the vehicle cargo space. MP synchronized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponCargoGlobal",
              "snippet": "clearWeaponCargoGlobal ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "clearWeaponPool",
              "description": "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clearWeaponPool"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "clientOwner",
              "description": "Returns the client's owner id",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/clientOwner"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Close the currently active user dialog with exit code. Most common exit codes are:\n#define IDC_OK            1 //emulate \"Ok\" button\n#define IDC_CANCEL        2 //emulate \"Cancel\" button",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeDialog",
              "snippet": "closeDialog ${1:exitcode}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Close given display with exit code. Most common exit codes are:\n#define IDC_OK            1 //emulate \"Ok\" button\n#define IDC_CANCEL        2 //emulate \"Cancel\" button",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeDisplay",
              "snippet": "closeDisplay ${2:exitcode}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Closes the current overlay without committing. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/closeOverlay",
              "snippet": "closeOverlay ${1:map}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapse the object tree.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collapseObjectTree",
              "snippet": "collapseObjectTree ${1:map}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collect3DENHistory",
              "snippet": "collect3DENHistory ${1:code}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current position of a helicopter's collective pitch control.\n 0: fully lowered\n 1: fully raised",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/collectiveRTD",
              "snippet": "collectiveRTD ${1:helicopterRTD}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the combat mode of the given unit. See setCombatMode for more information about combat modes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/combatMode",
              "snippet": "combatMode ${1:grp}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders a unit to reload defined magazine commence fire burst on the given position (via the radio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandArtilleryFire",
              "snippet": "commandArtilleryFire ${2:[${3:position}, ${4:type}, ${5:rounds}]}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandChat",
              "snippet": "commandChat ${2:chatText}$0"
            },
            {
              "leftLabel": "[side, identity] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandChat",
              "snippet": "commandChat ${4:chatText}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commander",
              "snippet": "commander ${1:vehicleName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit to fire on the given target (via the radio).\nIf the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFire",
              "snippet": "commandFire ${2:target}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit to follow the given other unit (via the radio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFollow",
              "snippet": "commandFollow ${2:followedunit}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders a unit to process command defined by FSM file (via the radio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandFSM",
              "snippet": "commandFSM ${2:[fsm name, position, target]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders the unit to get out from the vehicle (via the radio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandGetOut",
              "snippet": "commandGetOut ${1:unitName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "commandingMenu",
              "description": "Return the name of the player actual topmost commanding menu.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandingMenu"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandMove",
              "snippet": "commandMove ${2:position}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandRadio",
              "snippet": "commandRadio ${2:radioName}$0"
            },
            {
              "leftLabel": "[side, identity] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandRadio",
              "snippet": "commandRadio ${4:radioName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to stop (via the radio). A stop command will never finish, the unit will never be ready.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandStop",
              "snippet": "commandStop ${1:unitName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit to suppress a given position or target (via the radio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandSuppressiveFire",
              "snippet": "commandSuppressiveFire ${2:target}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandTarget",
              "snippet": "commandTarget ${2:target}$0"
            },
            {
              "leftLabel": "unitName(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandWatch",
              "snippet": "commandWatch ${2:position}$0"
            },
            {
              "leftLabel": "unitName(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commandWatch",
              "snippet": "commandWatch ${2:target}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Define a comment. \n\nMainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/comment",
              "snippet": "comment ${1:commentMsg}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Commit the current overlay. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/commitOverlay",
              "snippet": "commitOverlay ${1:map}$0"
            },
            {
              "leftLabel": "(Code) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compile expression.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/compile",
              "snippet": "compile ${1:expression}$0"
            },
            {
              "leftLabel": "(Code) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compile expression and makes it final, preventing it from:\n repeated compile or compileFinal\n removal by nil\n remote rewrite using publicVariable, publicVariableClient and publicVariableServer",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/compileFinal",
              "snippet": "compileFinal ${1:expression}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether the given FSM completes.\n\nThe FSM handle is the number returned by the execFSM command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/completedFSM",
              "snippet": "completedFSM ${1:fsmHandle}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text by joining the given structured or plain texts.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/composeText",
              "snippet": "composeText ${1:[text1, text2, ...]}$0"
            },
            {
              "leftLabel": "(Array, Config) = condition ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. Slightly faster than configProperties, but doesn't account for config properties or inherited entries.\n\n\n\n\n \n\n  The condition code passed to configClasses should only be used for simple filter expressions and nothing more",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configClasses",
              "snippet": "configClasses ${2:config}$0"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "configFile",
              "description": "Return root of config entries hierarchy.\nSee AllInOne Config for a full config extract as example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configFile"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configHierarchy",
              "snippet": "configHierarchy ${1:configClass}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of config entry.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configName",
              "snippet": "configName ${1:config}$0"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "configNull",
              "description": "A non-existing Config.\n configNull == configNull; // true\n isNull configNull; // true\n configNull isEqualTo configNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configNull"
            },
            {
              "leftLabel": "(Array, Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entires.\n\n\n\n\n \n\n  The condition code passed to configProperties should only be used for simple filter expressions and nothing more",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configProperties",
              "snippet": "configProperties ${1:[${2:config}, ${3:condition}, ${4:inherit}]}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of addons (CfgPatches) in which the given config class is defined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceAddonList",
              "snippet": "configSourceAddonList ${1:config}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns modDir of the mod that given config class was loaded from.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceMod",
              "snippet": "configSourceMod ${1:config}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of mods (CfgMods) in which the given config class is defined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/configSourceModList",
              "snippet": "configSourceModList ${1:config}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets for which Side the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/confirmSensorTarget",
              "snippet": "confirmSensorTarget ${2:[${3:side}, ${4:isConfirmed}]}$0"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/connectTerminalToUAV",
              "snippet": "connectTerminalToUAV ${2:uav}$0"
            },
            {
              "leftLabel": "(Control) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "controlNull",
              "description": "A non-existing Control. To compare non-existent objects use isNull or isEqualTo:\n controlNull == controlNull; // false\n isNull controlNull; // true\n controlNull isEqualTo controlNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/controlNull"
            },
            {
              "leftLabel": "(Control) = ctrlgrp ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a child control with specified idc from a controls group",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/controlsGroupCtrl",
              "snippet": "controlsGroupCtrl ${2:idc}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "copyFromClipboard",
              "description": "Return the content of the (text) clipboard. \n\n\n\n\n \n\n Disabled in Multiplayer for security reasons",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyFromClipboard"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Copy text string to the clipboard. \n\n\n\n\n \n\n In MP available only on the client that is server",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyToClipboard",
              "snippet": "copyToClipboard ${1:text}$0"
            },
            {
              "leftLabel": "groupTo ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/copyWaypoints",
              "snippet": "copyWaypoints ${2:groupFrom}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cosine of a number, argument in degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cos",
              "snippet": "cos ${1:x}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Can be used to count:\n the number of elements in array\n the number of elements in array with condition\n the number of sub-entries in a config object\n the number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "snippet": "count ${1:array}$0"
            },
            {
              "leftLabel": "(Number) = condition ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Can be used to count:\n the number of elements in array\n the number of elements in array with condition\n the number of sub-entries in a config object\n the number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "snippet": "count ${2:array}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Can be used to count:\n the number of elements in array\n the number of elements in array with condition\n the number of sub-entries in a config object\n the number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "snippet": "count ${1:configname}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Can be used to count:\n the number of elements in array\n the number of elements in array with condition\n the number of sub-entries in a config object\n the number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/count",
              "snippet": "count ${1:string}$0"
            },
            {
              "leftLabel": "(Number) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Count how many units in the array are considered enemy to the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countEnemy",
              "snippet": "countEnemy ${2:arrayName}$0"
            },
            {
              "leftLabel": "(Number) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Count how many units in the array are considered friendly to the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countFriendly",
              "snippet": "countFriendly ${2:arrayName}$0"
            },
            {
              "leftLabel": "(Number) = side ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countSide",
              "snippet": "countSide ${2:arrayName}$0"
            },
            {
              "leftLabel": "(Number) = type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see Classes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countType",
              "snippet": "countType ${2:objects}$0"
            },
            {
              "leftLabel": "(Number) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Count how many units in the array are unknown to the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/countUnknown",
              "snippet": "countUnknown ${2:arrayName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new Composition. To create individual entities, use create3DENEntity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENComposition",
              "snippet": "create3DENComposition [${1:configPath},  ${2:position}]$0"
            },
            {
              "leftLabel": "(Eden Entity) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.\n\nThis is the only way how to add new editable entities to Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity won't be editable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENEntity",
              "snippet": "create3DENEntity [${1:mode}, ${2:class}, ${3:position}, (${4:isEmpty})]$0"
            },
            {
              "leftLabel": "(Eden Entity) = group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.\n\nThis is the only way how to add new editable entities to Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity won't be editable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/create3DENEntity",
              "snippet": "create3DENEntity [${2:mode}, ${3:class}, ${4:position}, (${5:isEmpty})]$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). An agent does not have a group or leader or the standard soldier FSM associated with it -- for instance, an enemy soldier spawned as an agent has limited AI and will stand stupidly when fired upon -- which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\". If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.\n\nPlayers assigned to an agent using setPlayable will be able to control the agent, operate weapons and other actions, but will not be able to access their inventory using the gear screen.\n\nSpecial properties can be: \"NONE\", \"CAN_COLLIDE\" and \"FORM\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createAgent",
              "snippet": "createAgent ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}, ${6:special}]}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "In a nutshell, this command creates game Side. Without side it is not possible to create Groups. So if center for particular side is undefined, no groups can be created for this side. A Unit needs a group to be able to spawn in. So if no center for particular side exists, no groups for this side can be created and therefore no units for this side can be spawned. In Arma 3, the centers for all sides are created for you. An attempt to create center for existing side is ignored. Center can only be created for: east, west, resistance, civilian and sideLogic. These are the only sides groups can be created for. \n\nOld description: Creates a new AI HQ for the given side. An 'HQ ' is something each side needs to have to be able to communicate. By default, all centers for units which are present in the mission are created before the mission is started. This command can be used to initialize a side which has no units present in the Mission.sqm, so that you can spawn groups and units for it.\n\nFor the available sides see Side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createCenter",
              "snippet": "createCenter ${1:side}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDialog",
              "snippet": "createDialog ${1:dialogName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryLink",
              "snippet": "createDiaryLink ${1:[subject,object,text]}$0"
            },
            {
              "leftLabel": "(String) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "creates a diary entry.\n\nSupported tags and their parameters:\n <All>\n image: String - path to image. When present, any element with it will be displayed as image.\n width: Number - image width in pixels.\n height: Number - image height in pixels.\n font\n color: String - HTML color in format #aarrggbb or #rrggbb\n size: Number - font height in pixels.\n face: String - font type (class from CfgFontFamilies)\n br\n marker\n name: String - marker name\n execute\n expression: String - executed code\n executeClose\n expression: String - executed code, diary is closed afterwards\n log\n subject: String - subject name.\n record: String - record name (e.g. \"Record6\" or \"Unit1059524\")\n gear\n unit: Number - unit ID\n teamSwitch\n unit: Number - unit ID\n kick\n id: Number - player ID\n ban\n id: Number - player ID\n mute\n id: Number - player ID\n currentTask\n id: Number - task ID",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryRecord",
              "snippet": "createDiaryRecord ${2:[${3:subject}, ${4:text}, task, state]}$0"
            },
            {
              "leftLabel": "(String) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "creates a diary entry.\n\nSupported tags and their parameters:\n <All>\n image: String - path to image. When present, any element with it will be displayed as image.\n width: Number - image width in pixels.\n height: Number - image height in pixels.\n font\n color: String - HTML color in format #aarrggbb or #rrggbb\n size: Number - font height in pixels.\n face: String - font type (class from CfgFontFamilies)\n br\n marker\n name: String - marker name\n execute\n expression: String - executed code\n executeClose\n expression: String - executed code, diary is closed afterwards\n log\n subject: String - subject name.\n record: String - record name (e.g. \"Record6\" or \"Unit1059524\")\n gear\n unit: Number - unit ID\n teamSwitch\n unit: Number - unit ID\n kick\n id: Number - player ID\n ban\n id: Number - player ID\n mute\n id: Number - player ID\n currentTask\n id: Number - task ID",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiaryRecord",
              "snippet": "createDiaryRecord ${2:[${3:subject}, ${4:[${5:title}, ${6:text}]}, task, state]}$0"
            },
            {
              "leftLabel": "(Number) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new subject page in a log.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDiarySubject",
              "snippet": "createDiarySubject ${2:[${3:subject}, ${4:displayName}, picture]}$0"
            },
            {
              "leftLabel": "(Nothing, Display) = parent ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates child display of given display and loads from \"resourceName\". The notable difference between createDisplay and createDialog is that with createDisplay the player would be able to move whilst having control of the mouse pointer.\nSince Arma 3 v1.49.131653 createDisplay returns Display and will first look in description.ext for resourceName config, if not found, it will then look in main config.\nDisplays created with both createDisplay and createDialog will take control of the mouse pointer and will close when user presses Esc. \n_emptyDisplay = findDisplay 46 createDisplay \"RscDisplayEmpty\";\nIf display is needed which exists independently, it can be created in IGUI layer with cutRsc command. \n\"someLayer\" cutRsc [\"RscTitleDisplayEmpty\", \"PLAIN\"];\n_emptyDisplay = uiNamespace getVariable \"RscTitleDisplayEmpty\";\nSuch display can be closed with closeDisplay command or by overwriting the same cut layer with another output. Note that \"Unload\" EH for some reason does not work with such display.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createDisplay",
              "snippet": "createDisplay ${2:resourceName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Opens gear dialog for given unit. Alternatively use action command:\nplayer action [\"Gear\", player];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGearDialog",
              "snippet": "createGearDialog ${1:[${2:unit}, ${3:resource}]}$0"
            },
            {
              "leftLabel": "(Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side. \n\nNOTES \n The default limit of groups created per side was 144. Since Arma 3 v1.67 it is increased to 288.\n Since Arma 3 v 1.67 it is possible to mark created group for automatic deletion when the group becomes empty (see Alt Syntax). When group is set to be automatically deleted when empty, when group becomes empty it may take up to a minute for it to get deleted.\n\n\n\n\n\n \n\n In Arma 3 when last unit leaves its group, the group usually gets immediately auto deleted, regardless of whether or not if it was set for auto deletion manually",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGroup",
              "snippet": "createGroup ${1:side}$0"
            },
            {
              "leftLabel": "(Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side. \n\nNOTES \n The default limit of groups created per side was 144. Since Arma 3 v1.67 it is increased to 288.\n Since Arma 3 v 1.67 it is possible to mark created group for automatic deletion when the group becomes empty (see Alt Syntax). When group is set to be automatically deleted when empty, when group becomes empty it may take up to a minute for it to get deleted.\n\n\n\n\n\n \n\n In Arma 3 when last unit leaves its group, the group usually gets immediately auto deleted, regardless of whether or not if it was set for auto deletion manually",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGroup",
              "snippet": "createGroup ${1:[${2:side}, ${3:deleteWhenEmpty}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a point guarded by the given side (scripted way of adding equivalent of \"GUARDED BY\" trigger in Editor). A closest AI group in the given side with assigned \"GUARD\" waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:\n Given \"position\" is always considered. It could be Object, Group, Position2D or Position3D. In every case, z coordinate will be ignored and point will be placed on nearest surface.\n If \"objectMapID\" is not negative, the position of the object with the given ID is used (Overrides \"position\"). -1 to ignore this argument. z of the object position will be intact.\n If the given \"vehicle\" is valid, the position of the vehicle is extracted and guarded (Overrides both \"position\" and \"objectMapID\"). objNull to ignore. z of the vehicle position will be intact.\nFor use with \"GUARD\" waypoint. How does \"GUARD\" waypoint work: Waypoint:Guard",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createGuardedPoint",
              "snippet": "createGuardedPoint [${2:side}, ${3:position}, ${4:objectMapID}, ${5:vehicle}]$0"
            },
            {
              "leftLabel": "(Location) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createLocation",
              "snippet": "createLocation ${1:[${2:className}, ${3:position}, ${4:sizeX}, ${5:sizeY}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a new marker at the given position. The marker name has to be unique.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMarker",
              "snippet": "createMarker ${1:[${2:name}, ${3:${4:position}}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a local marker at the given position. Marker exists only on PC that created it. The marker name has to be unique.\n\nNOTE: Local markers have own set of local commands \"XXXXLocal\" to work with. If you use global marker command on a local marker, the local marker will become global marker.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMarkerLocal",
              "snippet": "createMarkerLocal ${1:[${2:name}, ${3:position}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a previously added menu.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMenu",
              "snippet": "createMenu ${2:index}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMine",
              "snippet": "createMine ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}]}$0"
            },
            {
              "leftLabel": "(Display) = display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMissionDisplay",
              "snippet": "createMissionDisplay ${2:string}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; in example, configFile/\"CfgMissions\"/\"MPMissions\"/\"Apex\"/\nIf the class doesn't exist or isn't a mission collection, the display will be created empty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createMPCampaignDisplay",
              "snippet": "createMPCampaignDisplay ${1:class}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: createSimpleObject/objects \n\nGuide: https://community.bistudio.com/wiki/Arma_3_Simple_Objects\n\n\n\n\n One cannot attach actions to a simple object via addAction.\n\nNOTES: \n\n Objects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction. \n Objects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle.\nSince Arma 3 v1.67 simple objects support setVariable and getVariable",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleObject",
              "snippet": "createSimpleObject ${1:[${2:shapeName}, ${3:positionWorld}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.\n\nGiven the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: createSimpleObject/objects \n\nGuide: https://community.bistudio.com/wiki/Arma_3_Simple_Objects\n\n\n\n\n One cannot attach actions to a simple object via addAction.\n\nNOTES: \n\n Objects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction. \n Objects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle.\nSince Arma 3 v1.67 simple objects support setVariable and getVariable",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleObject",
              "snippet": "createSimpleObject ${1:[${2:className}, ${3:positionASL}]}$0"
            },
            {
              "leftLabel": "(Task) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a new Task. The task effect is local, it will only exist on PC it was added.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSimpleTask",
              "snippet": "createSimpleTask ${2:[${3:name}, ${4:parentTask}]}$0"
            },
            {
              "leftLabel": "(Object) = type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new site. \n\n\n\n\n \n\n  This command is considered deprecated and is no longer supported",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSite",
              "snippet": "createSite ${2:pos}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in Arma 3:\n \"Sound_Alarm\"\n \"Sound_Alarm2\"\n \"Sound_BattlefieldExplosions\"\n \"Sound_BattlefieldFirefight\"\n \"Sound_Fire\"\n \"Sound_SmokeWreck1\"\n \"Sound_SparklesWreck1\"\n \"Sound_SparklesWreck2\"\n \"Sound_Stream\"\nSince Arma 3 v1.69.141183 it is possible to define sounds for use with createSoundSource in mission config. As mentioned earlier, the sounds needed for this command should be defined inside CfgVehicles class, which itself references CfgSFX class. If given class searched in main config and is not found, the search will continue in description.ext. Here is an example of suitable mission config definition:\n\n// description.ext\n\u00a0\nclass CfgSFX\n{\n\tclass MyOwl\n\t{\n\t\tsound0[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl1\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound1[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl2\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsound2[] = {\"@A3\\Sounds_F\\environment\\animals\\birds\\owl3\", db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound\n\t\tsounds[] = {sound0, sound1, sound2};\n\t\tempty[] = {\"\", 0, 0, 0, 0, 0, 0, 0};\n\t};\n};\n\u00a0\nclass CfgVehicles\n{\n\tclass MyOwlSound // class name to be used with createSoundSource\n\t{\n\t\tsound = \"MyOwl\"; // reference to CfgSFX class\n\t};\n};\n_owl = createSoundSource [\"MyOwlSound\", position player, [], 0];\nNote that the sound created by createSoundSource will always be looping. Also when CfgSFX sound definition contains more than 1 sound, there is no guarantee that the sound played will be the same on every PC in Multiplayer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createSoundSource",
              "snippet": "createSoundSource ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}]}$0"
            },
            {
              "leftLabel": "(Target) = obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a target. Not yet implemented.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTarget",
              "snippet": "createTarget ${2:[${3:type}, ${4:position}, ${5:typeAccuracy}, ${6:posAccuracy}]}$0"
            },
            {
              "leftLabel": "(Task) = teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTask",
              "snippet": "createTask ${2:[${3:[${4:type}, parentTask]}, ${6:priority}, ${7:name1}, ${8:value1}...nameN, valueN]}$0"
            },
            {
              "leftLabel": "(Team Member) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a team and name it.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTeam",
              "snippet": "createTeam ${1:[${2:type}, ${3:name}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a sensor (trigger) of the given type and at the given position. The type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector. An array containing all units that have activated the trigger is available via list triggerobj. Created triggers can be deleted using deleteVehicle.\n\nNOTE1: Since Arma 3 v1.43.129935 triggers can be created locally on clients setting optional param makeGlobal to false\nNOTE2: Since Arma 3 v1.53.132440 triggers can be disabled/enabled using enableSimulation command\n\nTriggers are created with default params, which are:\n a: 50.0\n b: 50.0\n c: -1\n angle: 0\n rectangular: false\n activationBy: None\n activationType: Present\n repeating: false\n timeoutMin: 0\n timeoutMid: 0\n timeoutMax: 0\n interruptable: true\n type: None\n text: \"\"\n name: \"\"\n expCond: \"this\"\n expActiv: \"\"\n expDesactiv: \"\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createTrigger",
              "snippet": "createTrigger ${1:[${2:type}, ${3:position}, ${4:makeGlobal}]}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create unit of a class that's defined in CfgVehicles.\n\nThe Group parameter MUST be an existing group or the unit won't be created.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createUnit",
              "snippet": "createUnit ${2:[${3:type}, ${4:position}, ${5:markers}, ${6:placement}, ${7:special}]}$0"
            },
            {
              "leftLabel": "type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create unit of a class that's defined in CfgVehicles.\n\nThe Group parameter MUST be an existing group or the unit won't be created.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createUnit",
              "snippet": "createUnit ${2:[${3:position}, ${4:group}, ${5:init}, ${6:skill}, ${7:rank}]}$0"
            },
            {
              "leftLabel": "(Object) = type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)\nFor a class reference from older games see Classes.\nSome special 'Scripted' vehicle classes:\n DemoCharge_Remote_Ammo_Scripted - same as DemoCharge_Remote_Ammo but will explode when destroyed or setDamage 1;\n SatchelCharge_Remote_Ammo_Scripted - same as SatchelCharge_Remote_Ammo but will explode when destroyed or setDamage 1;\n ClaymoreDirectionalMine_Remote_Ammo_Scripted -  same as ClaymoreDirectionalMine_Remote_Ammo but will explode when destroyed or setDamage 1;\n GroundWeaponHolder_Scripted - same as GroundWeaponHolder but will not be auto-deleted when empty\n WeaponHolderSimulated_Scripted - same as WeaponHolderSimulated but will not be auto-deleted when empty\n\nRandomization:\nIn Arma 3 many vehicles will get randomized in appearance by default in order to add some variety to the game. It is possible to override this default behavior by setting BIS_enableRandomization variable to false in the vehicle namespace:\n_veh = \"C_Offroad_01_F\" createVehicle position player;\n_veh setVariable [\"BIS_enableRandomization\", false];\nor\nthis setVariable [\"BIS_enableRandomization\", false];\nif done in mission editor init field.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicle",
              "snippet": "createVehicle ${2:position}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)\nFor a class reference from older games see Classes.\nSome special 'Scripted' vehicle classes:\n DemoCharge_Remote_Ammo_Scripted - same as DemoCharge_Remote_Ammo but will explode when destroyed or setDamage 1;\n SatchelCharge_Remote_Ammo_Scripted - same as SatchelCharge_Remote_Ammo but will explode when destroyed or setDamage 1;\n ClaymoreDirectionalMine_Remote_Ammo_Scripted -  same as ClaymoreDirectionalMine_Remote_Ammo but will explode when destroyed or setDamage 1;\n GroundWeaponHolder_Scripted - same as GroundWeaponHolder but will not be auto-deleted when empty\n WeaponHolderSimulated_Scripted - same as WeaponHolderSimulated but will not be auto-deleted when empty\n\nRandomization:\nIn Arma 3 many vehicles will get randomized in appearance by default in order to add some variety to the game. It is possible to override this default behavior by setting BIS_enableRandomization variable to false in the vehicle namespace:\n_veh = \"C_Offroad_01_F\" createVehicle position player;\n_veh setVariable [\"BIS_enableRandomization\", false];\nor\nthis setVariable [\"BIS_enableRandomization\", false];\nif done in mission editor init field.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicle",
              "snippet": "createVehicle ${1:[${2:type}, ${3:position}, ${4:markers}, ${5:placement}, ${6:special}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction. This command does not addVehicle to the created crew in the same way this normally happens when crewed vehicle created in the editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicleCrew",
              "snippet": "createVehicleCrew ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Object) = type ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates an object of the given type. Created object is not transferred through network in MP games. netId of such vehicle in multiplayer will be \"0:0\". To disable local vehicle creation, use CfgDisabledCommands to blacklist this command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/createVehicleLocal",
              "snippet": "createVehicleLocal ${2:position}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the crew (both dead and alive) of the given vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/crew",
              "snippet": "crew ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in a format [<headerIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctAddHeader",
              "snippet": "ctAddHeader ${1:Control}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].\n\nNote that rows and headers are indexed separately.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctAddRow",
              "snippet": "ctAddRow ${1:Control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all the lines from the RscControlsTable. Returns Nothing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctClear",
              "snippet": "ctClear ${1:Control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns index of the selected row. Will take only rows, but not headers into account.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctCurSel",
              "snippet": "ctCurSel ${1:Control}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns metadata (string) associated with a particular row of RscControlsTable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctData",
              "snippet": "ctData ${1:Control}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctFindHeaderRows"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctFindRowHeader"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Returns array of controls on the header with the given index.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctHeaderControls"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number of headers (rows not included) in the RscControlsTable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctHeaderCount",
              "snippet": "ctHeaderCount ${1:Control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRemoveHeaders"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRemoveRows"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Launch actions attached to given (button based) control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlActivate",
              "snippet": "ctrlActivate ${1:controlName}$0"
            },
            {
              "leftLabel": "(Number) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed.\nNOTE: Control EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAddEventHandler",
              "snippet": "ctrlAddEventHandler ${2:[${3:handler},${4:function}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets rotation info of an ST_PICTURE control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAngle",
              "snippet": "ctrlAngle ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present. \n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollDelay",
              "snippet": "ctrlAutoScrollDelay ${1:control}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if auto-scroll should move back to start after it reaches the end.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollRewind",
              "snippet": "ctrlAutoScrollRewind ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present. \n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlAutoScrollSpeed",
              "snippet": "ctrlAutoScrollSpeed ${1:control}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes. \nNote: The \"onCheckBoxesSelChanged\" control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlChecked",
              "snippet": "ctrlChecked ${1:control}$0"
            },
            {
              "leftLabel": "(Boolean) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes. \nNote: The \"onCheckBoxesSelChanged\" control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlChecked",
              "snippet": "ctrlChecked ${2:index}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display itself:\n_className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlClassName",
              "snippet": "ctrlClassName ${1:control}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Commit control animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCommit",
              "snippet": "ctrlCommit ${2:time}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if the control animation is finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCommitted",
              "snippet": "ctrlCommitted ${1:controlName}$0"
            },
            {
              "leftLabel": "(Control) = display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates new control in given display. Some of the common controls that can be used with this command:\n RscText - simple text box\n RscTextMulti - simple multiline text box\n RscPicture - simple picture box\n RscPictureKeepAspect - picture box that doesn't stretch picture\n RscEdit - input box\n RscEditMulti - multiline input box\n RscTree - tree view control\n RscTreeSearch - searchable tree view control (see Example 4)\n RscVideo - picture control with autostart for video texture (see BIS_fnc_playVideo)\n RscVideoKeepAspect - picture control for video to keep original video aspect ratio\n\nNOTE: Since Arma 3 v1.69.141213 ctrlCreate will also search for control class in mission config, if search in the main config failed. This means one can now define classes in mission config and use them with ctrlCreate",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlCreate",
              "snippet": "ctrlCreate ${2:[${3:class}, ${4:idc}, ${5:controlsGroup}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deletes given control.\nReturns whether the deletion was successful.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlDelete",
              "snippet": "ctrlDelete ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnable",
              "snippet": "ctrlEnable ${1:[${2:idc}, ${3:enable}]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnable",
              "snippet": "ctrlEnable ${2:enable}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnabled",
              "snippet": "ctrlEnabled ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlEnabled",
              "snippet": "ctrlEnabled ${1:controlName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current fade factor of control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlFade",
              "snippet": "ctrlFade ${1:controlName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true when HTML content was successfully loaded.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlHTMLLoaded",
              "snippet": "ctrlHTMLLoaded ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns control IDC.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlIDC",
              "snippet": "ctrlIDC ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns display IDD.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlIDD",
              "snippet": "ctrlIDD ${1:display}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds the next frame to the map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimAdd",
              "snippet": "ctrlMapAnimAdd ${2:[${3:time}, ${4:zoom}, ${5:position}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clears the map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimClear",
              "snippet": "ctrlMapAnimClear ${1:controlName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays the map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimCommit",
              "snippet": "ctrlMapAnimCommit ${1:controlName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the map animation has finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapAnimDone",
              "snippet": "ctrlMapAnimDone ${1:controlName}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of ArmA 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from CfgWrapperUI / Cursors. This command has the following specifics:\n When used on Main Map (findDisplay 12 displayCtrl 51) it is possible to override multiple default cursors. For example, while leaving default \"Arrow\" intact, it is possible to just override \"Scroll\" with lets say \"Wait\" (Example 3)\n When used on a custom map, for example user made Mini Map, there is only one single cursor \"\" for everything, therefore only this cursor can be overridden (see Example 4 on how to override it)\nSome possible class names (for the whole list see ctrlMapCursor/cursors):\n Arrow\n Track\n Move\n Scroll\n Rotate\n Track3D\n Move3D\n Rotate3D\n Raise3D\n Wait\n HC_move\n HC_overFriendly\n HC_overEnemy\n HC_overMission\n HC_unsel\nNOTE1: Cursor names are case sensitive.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapCursor",
              "snippet": "ctrlMapCursor [${2:defaultCursor}, ${3:newCursor}]$0"
            },
            {
              "leftLabel": "(Array, Object, Group, Array, String, Task) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapMouseOver",
              "snippet": "ctrlMapMouseOver ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current scale of given map control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapScale",
              "snippet": "ctrlMapScale ${1:ctrl}$0"
            },
            {
              "leftLabel": "(Array, Position) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert screen coordinates in map to world coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapScreenToWorld",
              "snippet": "ctrlMapScreenToWorld ${2:[x, y]}$0"
            },
            {
              "leftLabel": "(Array, Position) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Transfers a map control world position to screen coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlMapWorldToScreen",
              "snippet": "ctrlMapWorldToScreen ${2:position}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns model used in 3D Dialog Control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModel",
              "snippet": "ctrlModel ${1:control}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns vectorDir and vectorUp of the model used in 3D Dialog Control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModelDirAndUp",
              "snippet": "ctrlModelDirAndUp ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns 3D control model scale",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlModelScale",
              "snippet": "ctrlModelScale ${1:control}$0"
            },
            {
              "leftLabel": "(Display) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns container of the given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlParent",
              "snippet": "ctrlParent ${1:controlName}$0"
            },
            {
              "leftLabel": "(Control) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the parent control of a given child control",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlParentControlsGroup",
              "snippet": "ctrlParentControlsGroup ${1:ctrl}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlPosition",
              "snippet": "ctrlPosition ${1:controlName}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all event handlers from the given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlRemoveAllEventHandlers",
              "snippet": "ctrlRemoveAllEventHandlers ${2:handlerName}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove a given event handler from the given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlRemoveEventHandler",
              "snippet": "ctrlRemoveEventHandler ${2:[handler name,id]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current scale of the control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlScale",
              "snippet": "ctrlScale ${1:controlName}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets text color of given control when control is selected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetActiveColor",
              "snippet": "ctrlSetActiveColor ${2:color}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAngle",
              "snippet": "ctrlSetAngle ${2:[${3:angle}, ${4:centerX}, ${5:centerY}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollDelay",
              "snippet": "ctrlSetAutoScrollDelay ${2:delay}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollRewind",
              "snippet": "ctrlSetAutoScrollRewind ${2:set}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed.\n\nAutorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetAutoScrollSpeed",
              "snippet": "ctrlSetAutoScrollSpeed ${2:speed}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets background color of given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetBackgroundColor",
              "snippet": "ctrlSetBackgroundColor ${2:color}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetChecked",
              "snippet": "ctrlSetChecked ${2:checked}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetChecked",
              "snippet": "ctrlSetChecked ${2:[${3:index}, ${4:checked}]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given event handler of given control.\n\nThe provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it's default code or not afterwards. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetEventHandler",
              "snippet": "ctrlSetEventHandler ${2:[${3:handlerName}, ${4:function}]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets wanted transparency for control animation. Requires ctrlCommit to commit changes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFade",
              "snippet": "ctrlSetFade ${2:fade}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the input focus on given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFocus",
              "snippet": "ctrlSetFocus ${1:controlName}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the font for given control (see Fonts)\nAvailable Arma 3 fonts\n \"EtelkaMonospacePro\"\n \"EtelkaMonospaceProBold\"\n \"EtelkaNarrowMediumPro\"\n \"LCD14\"\n \"LucidaConsoleB\"\n \"PuristaBold\"\n \"PuristaLight\"\n \"PuristaMedium\"\n \"PuristaSemibold\"\n \"RobotoCondensed\"\n \"RobotoCondensedBold\"\n \"RobotoCondensedLight\"\n \"TahomaB\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFont",
              "snippet": "ctrlSetFont ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H1 font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH1",
              "snippet": "ctrlSetFontH1 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H1 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH1B",
              "snippet": "ctrlSetFontH1B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H2 font of given HTML control",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH2",
              "snippet": "ctrlSetFontH2 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H2 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH2B",
              "snippet": "ctrlSetFontH2B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H3 font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH3",
              "snippet": "ctrlSetFontH3 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H3 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH3B",
              "snippet": "ctrlSetFontH3B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H4 font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH4",
              "snippet": "ctrlSetFontH4 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H4 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH4B",
              "snippet": "ctrlSetFontH4B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H5 font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH5",
              "snippet": "ctrlSetFontH5 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H5 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH5B",
              "snippet": "ctrlSetFontH5B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H6 font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH6",
              "snippet": "ctrlSetFontH6 ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H6 bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontH6B",
              "snippet": "ctrlSetFontH6B ${2:fontName}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the font size of given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeight",
              "snippet": "ctrlSetFontHeight ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H1 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH1",
              "snippet": "ctrlSetFontHeightH1 ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H2 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH2",
              "snippet": "ctrlSetFontHeightH2 ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H3 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH3",
              "snippet": "ctrlSetFontHeightH3 ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H3 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH4",
              "snippet": "ctrlSetFontHeightH4 ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H5 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH5",
              "snippet": "ctrlSetFontHeightH5 ${2:height}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets H6 font size of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightH6",
              "snippet": "ctrlSetFontHeightH6 ${2:height}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the font size of the secondary text of given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontHeightSecondary",
              "snippet": "ctrlSetFontHeightSecondary ${2:value}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets P font of given HTML control or its size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontP",
              "snippet": "ctrlSetFontP ${2:fontOrSize}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets P bold font of given HTML control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontPB",
              "snippet": "ctrlSetFontPB ${2:fontName}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the font size of the secondary text of given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetFontSecondary",
              "snippet": "ctrlSetFontSecondary ${2:fontClass}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets foreground color of given control. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetForegroundColor",
              "snippet": "ctrlSetForegroundColor ${2:color}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets model for 3D Dialog Control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModel",
              "snippet": "ctrlSetModel ${2:model}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModelDirAndUp",
              "snippet": "ctrlSetModelDirAndUp ${2:[${3:dir}, ${4:up}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets 3D control model scale",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetModelScale",
              "snippet": "ctrlSetModelScale ${2:scale}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "snippet": "ctrlSetPosition ${2:[x, y]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "snippet": "ctrlSetPosition ${2:[x, y, w, h]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetPosition",
              "snippet": "ctrlSetPosition ${2:[x, y, z]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets wanted scale for control animation. Top left corner remains same. This command requires ctrlCommit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetScale",
              "snippet": "ctrlSetScale ${2:scale}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the structured text which will be displayed in structured text control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetStructuredText",
              "snippet": "ctrlSetStructuredText ${2:structuredText}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetText",
              "snippet": "ctrlSetText ${1:[idc, ${2:text}]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetText",
              "snippet": "ctrlSetText ${2:text}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets text color of given control. Color is in format Color. As of Arma 3 v1.40 this command could also be used to change fill colour or the DialogControls-ProgressBar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTextColor",
              "snippet": "ctrlSetTextColor ${2:color}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip text of given control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltip",
              "snippet": "ctrlSetTooltip ${2:text}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip border color of given control. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorBox",
              "snippet": "ctrlSetTooltipColorBox ${2:color}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip background color of given control. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorShade",
              "snippet": "ctrlSetTooltipColorShade ${2:color}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip text color of given control. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlSetTooltipColorText",
              "snippet": "ctrlSetTooltipColorText ${2:color}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set if a control of the currently active user dialog is shown or not.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShow",
              "snippet": "ctrlShow ${1:[idc, ${2:show}]}$0"
            },
            {
              "leftLabel": "controlName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set if a control of the currently active user dialog is shown or not.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShow",
              "snippet": "ctrlShow ${2:show}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns whether given control is shown.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlShown",
              "snippet": "ctrlShown ${1:controlName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlText",
              "snippet": "ctrlText ${1:idc}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path.\n\nRead Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlText",
              "snippet": "ctrlText ${1:controlName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the control text height. Supported control types are:\n CT_STATIC 0\n CT_EDIT 2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(Since Arma 3 v1.57.135040)\n CT_STRUCTURED_TEXT 13",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlTextHeight",
              "snippet": "ctrlTextHeight ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number representing the type of control, which is also defined by type property in config. For more information see Dialog Control",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlType",
              "snippet": "ctrlType ${1:control}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctrlVisible",
              "snippet": "ctrlVisible ${1:idc}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Returns array of controls on the row with the given index.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRowControls"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number of rows (headers not included) in the RscControlsTable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctRowCount",
              "snippet": "ctRowCount ${1:Control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetCurSel"
            },
            {
              "leftLabel": "Control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetData",
              "snippet": "ctSetData [[[Number]], String]$0"
            },
            {
              "leftLabel": "Control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetHeaderTemplate",
              "snippet": "ctSetHeaderTemplate ${2:Config}$0"
            },
            {
              "leftLabel": "Control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetRowTemplate",
              "snippet": "ctSetRowTemplate ${2:Config}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "Control",
              "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctSetValue"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns metadata (number) associated with a particular row of RscControlsTable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ctValue",
              "snippet": "ctValue ${1:Control}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list of addons allowed to given curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorAddons",
              "snippet": "curatorAddons ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "curatorCamera",
              "description": "Returns curator camera object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCamera"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all curator camera areas.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCameraArea",
              "snippet": "curatorCameraArea ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ceiling height for curator camera.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCameraAreaCeiling",
              "snippet": "curatorCameraAreaCeiling ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Number) = curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current coeficient setting.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorCoef",
              "snippet": "curatorCoef ${2:action}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all editable objects which belong to a curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditableObjects",
              "snippet": "curatorEditableObjects ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all curator editing areas.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditingArea",
              "snippet": "curatorEditingArea ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorEditingAreaType",
              "snippet": "curatorEditingAreaType ${1:obj}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "curatorMouseOver",
              "description": "Returns Curator Editable Object under curator mouse pointer in form of array:\n [] - when not in curator mode\n [\"\"] - if no curator editable object under the pointer in curator mode\n [typeName, Curator Editable Object] - if there is curator editable object under the pointer in curator mode",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorMouseOver"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorPoints",
              "snippet": "curatorPoints ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all objects that has curator registered and their settings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorRegisteredObjects",
              "snippet": "curatorRegisteredObjects ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Array, Object, Group, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "curatorSelected",
              "description": "Returns list of all curator selected items.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorSelected"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current price for placing waypoints (curator specific).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/curatorWaypointCost",
              "snippet": "curatorWaypointCost ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(String, Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "current3DENOperation",
              "description": "Returns the currently performed editing operation in Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/current3DENOperation"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "currentChannel",
              "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP). Correspondence between channel and number:\n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct\n 6-15 = Custom Radio (see radioChannelCreate)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentChannel"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Value returned can be one of:\n\n\"WAIT\", \"ATTACK\", \"HIDE\", \"MOVE\", \"HEAL\", \"REPAIR\", \"REFUEL\", \"REARM\", \"SUPPORT\", \"JOIN\", \"GET IN\", \"FIRE\", \"GET OUT\", \"STOP\", \"EXPECT\", \"ACTION\", \"ATTACKFIRE\",",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentCommand",
              "snippet": "currentCommand ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns class name of currently loaded vehicle's magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazine",
              "snippet": "currentMagazine ${1:vehicle}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineDetail",
              "snippet": "currentMagazineDetail ${1:vehicle}$0"
            },
            {
              "leftLabel": "(String) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineDetailTurret",
              "snippet": "currentMagazineDetailTurret ${2:[turret path]}$0"
            },
            {
              "leftLabel": "(String) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMagazineTurret",
              "snippet": "currentMagazineTurret ${2:[turret path]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current muzzle of unit's weapon.\n\n\n\n\n\n \n\n This command will return 0 Number if given object is a vehicle instead of a person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentMuzzle",
              "snippet": "currentMuzzle ${1:gunner}$0"
            },
            {
              "leftLabel": "(Namespace) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "currentNamespace",
              "description": "Returns current global namespace the script runs in.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentNamespace"
            },
            {
              "leftLabel": "(Task) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current task of given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentTask",
              "snippet": "currentTask ${1:person}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "List all uncompleted tasks.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentTasks",
              "snippet": "currentTasks ${1:member}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns currently selected throwable, which will be launched if user presses \"G\". \nPlease note: The weapon/magazine id system is W.I.P. and may change without notice.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentThrowable",
              "snippet": "currentThrowable ${1:player}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current vision mode of unit's weapon.\n\n 0 - daytime\n 1 - night vision\n 2 - thermal vision",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentVisionMode",
              "snippet": "currentVisionMode ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the index of the current waypoint.\n\nTo determine the validity of the index, compare it to the waypoints count.\n\nIf all waypoints are 'completed', then the index is 1 greater than the last valid index.\n\nIf there are no waypoints, then the index is 0.\n\nBy default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWaypoint",
              "snippet": "currentWaypoint ${1:groupName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the name of the currently selected weapon (on the primary turret for vehicles).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeapon",
              "snippet": "currentWeapon ${1:vehicle}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"\n\n\n\n\n\n \n\n This command will return 0 Number if given object is a vehicle instead of a person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeaponMode",
              "snippet": "currentWeaponMode ${1:gunner}$0"
            },
            {
              "leftLabel": "(String) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentWeaponTurret",
              "snippet": "currentWeaponTurret ${2:[turret path]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns zeroing of unit's weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/currentZeroing",
              "snippet": "currentZeroing ${1:gunner}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cursorObject",
              "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cursorObject"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "cursorTarget",
              "description": "Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree (knowsAbout > 0). If target is completely unknown, command returns objNull.\nA valid target could belong to an enemy or a friendly side. Buildings are normally known to player and so are valid targets. Try nearTargets to see what else is considered a target. While friendly targets are usually known to the player, enemy targets can be totally unknown, especially if \"auto-spotting\" (or sometimes called \"auto-reporting\") is switched off. To check if auto-spotting is enabled:difficultyEnabled \"autospot\"\ncursorTarget also returns locked target for the duration of the lock even if there is another target under the cursor. As soon as missile is fired, cursorTarget switches to current known target under cursor or objNull. Targeting (currently \"T\" in Arma 3) works regardless of the state of \"auto-spotting\".\nAdding a target to the known list could be done with reveal command. When auto-spotting is enabled, zooming on the enemy target with cross-hairs usually reveals the target. As friendly targets are always known, zooming on friendly target could improve knowsAbout value.\nSide relations can also influence target knowledge. For example east target is unknown target for civilian, but making them friends with setFriend instantly improves civilian knowledge of the east.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cursorTarget"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/customChat",
              "snippet": "customChat ${2:[${3:channel}, ${4:message}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/customRadio",
              "snippet": "customRadio ${2:[${3:channel}, ${4:message}]}$0"
            },
            {
              "leftLabel": "layer ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutFadeOut",
              "snippet": "cutFadeOut ${2:duration}$0"
            },
            {
              "leftLabel": "(Number) = layerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutFadeOut",
              "snippet": "cutFadeOut ${2:duration}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays an object defined in the global config in CfgTitles.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "snippet": "cutObj ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "leftLabel": "layer ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays an object defined in the global config in CfgTitles.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "snippet": "cutObj ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "leftLabel": "(Number) = layerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays an object defined in the global config in CfgTitles.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutObj",
              "snippet": "cutObj ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "snippet": "cutRsc ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "leftLabel": "layer ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "snippet": "cutRsc ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "leftLabel": "(Number) = layerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutRsc",
              "snippet": "cutRsc ${2:[${3:class}, ${4:type}, ${5:speed}, ${6:showInMap}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "snippet": "cutText ${1:[${2:text}, ${3:type}, ${4:speed},  ${5:showInMap}, ${6:isStructuredText}]}$0"
            },
            {
              "leftLabel": "layer ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "snippet": "cutText ${2:[${3:text}, ${4:type}, ${5:speed},  ${6:showInMap}, ${7:isStructuredText}]}$0"
            },
            {
              "leftLabel": "(Number) = layerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:cutText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.\n\n\n\n\n \n\n For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/cutText",
              "snippet": "cutText ${2:[${3:text}, ${4:type}, ${5:speed},  ${6:showInMap}, ${7:isStructuredText}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the damage value of an object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/damage",
              "snippet": "damage ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "date",
              "description": "Return the actual mission date and time as an array [year, month, day, hour, minute]. Month is a full number between 1 and 12, day is between 1 and 31, hour is between 0 and 23 and minute is between 0 and 59.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/date"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274 \nThis is how this command works. The 365 days of the year are presented in range 0...1. So each day will be:\n1 / 365 =  0.00273973 \nIn a leap year there are 366 days, so the range will increase by 1 day:\n1 / 365  *  366 = 1.00274\nIn short, in a normal year the command returns in range 0...1 in a leap year it will return in range 0...1.00274",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dateToNumber",
              "snippet": "dateToNumber ${1:date}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "daytime",
              "description": "Returns the current ingame time in hours.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/daytime"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deActivateKey",
              "snippet": "deActivateKey ${1:keyname}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns debriefing text.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debriefingText",
              "snippet": "debriefingText ${1:end}$0"
            },
            {
              "leftLabel": "FSMhandle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.\n\n\n\n\n \n\n Non functional in retail",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debugFSM",
              "snippet": "debugFSM ${2:true}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dump argument type and value to debugging output. \n\n\n\n\n\n \n\n This command is non-functional in the retail version",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/debugLog",
              "snippet": "debugLog ${1:anything}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "See switch do.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/default",
              "snippet": "default ${1:a}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert a number from Radians to Degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deg",
              "snippet": "deg ${1:x}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete given entities in Eden Editor, including anything that can be placed in editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/delete3DENEntities",
              "snippet": "delete3DENEntities ${1:entities}$0"
            },
            {
              "leftLabel": "(Anything) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find command (see Example 2)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteAt",
              "snippet": "deleteAt ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "In a nutshell, this command removes gaming Side (see createCenter). If a side has >0 Groups it cannot be deleted. Center can only be created for: east, west, resistance, civilian and sideLogic, therefore only centers from the mentioned sides can be deleted.\nOld description: Destroys the AI center of the given side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteCenter",
              "snippet": "deleteCenter ${1:side}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete a collection. As example, used with a soldier, it'll hide the ingame model.\n\nWhen targetting ArmA 2 1.06 or newer, use hideObject instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before ArmA 2 1.06, and its functionality may be changed or removed in the future.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteCollection",
              "snippet": "deleteCollection ${1:object}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete the editor object. Requires all editor object links to be removed prior. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteEditorObject",
              "snippet": "deleteEditorObject ${2:object}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroys the given group. Group must be empty and local to the machine executing command. \n\nNOTE: In Arma 3 you can find out locality of the group with local command, unlike with previous games. However owner and setOwner dont work with groups anywhere. The group will always be local to the client that created it, until the client disconnects, then the group becomes local to the server.\n\n\n\n\n\n \n\n In Arma 3 when last unit leaves a group, the group gets auto deleted. Manually deleting all units from a group however, does not auto delete the empty group. To force the group to get auto-deleted when empty use deleteGroupWhenEmpty",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteGroup",
              "snippet": "deleteGroup ${1:group}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Marks given group for auto-deletion when group is empty. true will mark the group for auto-deletion, however false will only unmark the group that was marked previously. There are other engine group auto-deletion mechanisms in place, which are not affected by this.\nNOTE: It might take up to a minute for the groups marked for auto-deletion when empty to get deleted when they become empty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteGroupWhenEmpty",
              "snippet": "deleteGroupWhenEmpty ${2:delete}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete an identity (created with saveIdentity) from the campaign's progress file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteIdentity",
              "snippet": "deleteIdentity ${1:identityName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete a location.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteLocation",
              "snippet": "deleteLocation ${1:location}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroys the given marker.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteMarker",
              "snippet": "deleteMarker ${1:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroys the given marker.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteMarkerLocal",
              "snippet": "deleteMarkerLocal ${1:markerName}$0"
            },
            {
              "leftLabel": "array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteRange",
              "snippet": "deleteRange ${2:[${3:from}, ${4:count}]}$0"
            },
            {
              "leftLabel": "teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteResources",
              "snippet": "deleteResources [${2:resource1}, ${3:resource2},...]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the site.\n\n\n\n\n \n\n  This command is considered deprecated and is no longer supported",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteSite",
              "snippet": "deleteSite ${1:site}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete a status (created with saveStatus) from the campaign's progress file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteStatus",
              "snippet": "deleteStatus ${1:statusName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete a target. Not yet implemented.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteTarget",
              "snippet": "deleteTarget ${1:target}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroy given team.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteTeam",
              "snippet": "deleteTeam ${1:team}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deletes an object. Only units inserted in the mission editor and units created during the game's progress can be deleted by this command. Island objects and player units cannot be removed. Deleting a vehicle, which is still being accessed by a running script, can result in a CTD.\nNOTE: Actual object deletion, when object becomes objNull, happens on the next frame after command execution, but there are some object modifications that happen immediately. For example if the object is unit in a group, it immediately becomes groupless isNull group _unit; //true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteVehicle",
              "snippet": "deleteVehicle ${1:object}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteVehicleCrew",
              "snippet": "deleteVehicleCrew ${2:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the specified waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/deleteWaypoint",
              "snippet": "deleteWaypoint ${1:[${2:group}, ${3:index}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Detaches previously attached with attachTo object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/detach",
              "snippet": "detach ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "detectedMines",
              "description": "Returns an array of all mines detected by a given side",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/detectedMines"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_activeMissionFSMs",
              "description": "Returns array with active Mission FSMs.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeMissionFSMs"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_activeScripts",
              "description": "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeScripts"
            },
            {
              "leftLabel": "(Array, String, Boolean, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_activeSQFScripts",
              "description": "Returns an array with active SQFs.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeSQFScripts"
            },
            {
              "leftLabel": "(Array, String, Boolean, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_activeSQSScripts",
              "description": "Returns array with active SQSs.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20activeSQSScripts"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.\nThis can also be executed on a dedicated Server and because a Server has no UI it will behave like diag_captureFrameToFile.\nSpecial: BattlEye's RCON variant of this command is #captureFrame \nNote: Only available in specific builds. See Performance Profiling for details.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureFrame",
              "snippet": "diag_captureFrame ${1:frame}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and \nwritten to a log file in the same directory as the .rpt file.\nThe full Path to the log file is logged to simultaneously.\nThe data in the log file can be copied and pasted into the diag_captureFrame UI dialog to get a visualisation later on.\nNote: Only available in specific builds. See Performance Profiling for details.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureFrameToFile",
              "snippet": "diag_captureFrameToFile ${1:frame}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:\nRender\n - bgD3D\nMain Thread\n - total\n - memAl\nVisualize\n - visul\nMjob\n - Mjob\nNote: Only available in specific builds. See Performance Profiling for details.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20captureSlowFrame",
              "snippet": "diag_captureSlowFrame [${1:section}, ${2:threshold}]$0"
            },
            {
              "leftLabel": "(Array, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance\nNOTE: For security purposes, this command will only run for 1 cycle in MP, unless in-game debug console is available via description.ext option or Eden attribute setting.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20codePerformance",
              "snippet": "diag_codePerformance ${1:[${2:code}, ${3:arguments}, ${4:${7:cycles}}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates specific debug visualization.\n\n\n\n\n \n\n Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20drawMode",
              "snippet": "diag_drawMode ${1:type}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_mode",
              "description": "Used to enable/disabled various diagnostics. \n\n\n\n Only available in the Arma 3 Diagnostic exe",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20enable"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_enabled",
              "description": "Checks whether specific diagnostic mode is activated. \n\n\n\n Only available in the Arma 3 Diagnostic exe",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20enabled"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_fps",
              "description": "Returns average framerate calculated over last 16 frames.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20fps"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_fpsMin",
              "description": "Returns minimal framerate. Calculated from the longest frame over last 16 frames.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20fpsMin"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_frameNo",
              "description": "Returns number of frame currently displayed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20frameNo"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_list",
              "description": "Returns an array of all diag modes available in the game.\n\n\n\n\n \n\n Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20list"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dumps the argument's value to the report file. Each call creates a new line in the file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20log",
              "snippet": "diag_log ${1:anything}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Log all frames, where section takes longer than the threshold (in seconds). \nNote: Only available in specific builds. See Performance Profiling for details.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20logSlowFrame",
              "snippet": "diag_logSlowFrame [${1:section}, ${2:threshold}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory). Location is relative to the Userdir (default) or mission directory depending on the the value of UserDir [FileName,UserDir]. \nDoesn't work with cfgAmmo & few other classes. (Since 1.69, cfgAmmo should be mergeable!) Merging config file means also that you can't delete parameters through diag_mergeConfigFile. Changes applied by diag_mergeConfigFile are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick.\n\n\n\n\n \n\n Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20mergeConfigFile",
              "snippet": "diag_mergeConfigFile [\"PathToConfigOnDrive\"]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_recordTurretLimits",
              "description": "Start recording tool for creating turret aiming limits.\n\n\n\n\n \n\n Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20recordTurretLimits"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_resetShapes",
              "description": "Reload models on-the-fly without the need of restarting the game. Changes applied by diag_resetShapes are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with \"-FilePatching\" in combination with local data. Command will reload only models present in local data.\n\n\nLimitation - you can't reload cfgSkeletons (Which is inside model.cfg)\n\n\n\n\n \n\n Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20resetShapes"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_tickTime",
              "description": "Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20tickTime"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "diag_toggle",
              "description": "Used to enable/disabled various diagnostics. \n\n\n\n Only available in the Arma 3 Diagnostic exe",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diag%20toggle"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "dialog",
              "description": "Tests whether any user dialog is open.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dialog"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given subject is present in the diary of given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/diarySubjectExists",
              "snippet": "diarySubjectExists ${2:name}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "didJIP",
              "description": "Checks if the current client Joined In Progress.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/didJIP"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/didJIPOwner",
              "snippet": "didJIPOwner ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "difficulty",
              "description": "Returns high-level selected difficulty mode.   \n\nReturned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficulty"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command is deprecated since Arma 3 1.58. Since this version it always returns false. Use difficultyOption instead. See Arma 3 Difficulty Overhaul for further details.\n\nFormer functionality:\nChecks specific difficulty settings of the current user. Difficulty flag names can be found in the ArmA profile file under class Difficulties/xxx/Flags (xxx being regular or veteran).\n\nNote: stress damage for some reason is a separate difficulty so difficultyEnabled \"stressDamageEnabled\" might not return correct set value. There are however 2 dedicated commands for it:\n enableStressDamage\n isStressDamageEnabled\n\nNote: auto trim is also for some reason a separate difficulty so difficultyEnabled \"autoTrimEnabled\" might not return correct set value. There are also 2 dedicated commands for it:\n enableAutoTrimRTD\n isAutoTrimOnRTD",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyEnabled",
              "snippet": "difficultyEnabled ${1:flagName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "difficultyEnabledRTD",
              "description": "Returns true if rotorlib simulation is enabled. Forcing by mission is included",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyEnabledRTD"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in \nArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran).\n\nThis command replaces difficultyEnabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/difficultyOption",
              "snippet": "difficultyOption ${1:optionName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the direction an object or a location is facing (differs from getDir in that this also works with locations).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/direction",
              "snippet": "direction ${1:object}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of fadeRadio. The message is defined in CfgRadio in the description.ext file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec). \nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/directSay",
              "snippet": "directSay ${2:radioName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disable parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local. If unit changes locality, it might need to be executed again at the new locality to maintain effect.\n\nPossible values are:\n\"TARGET\" - stop the unit to watch the assigned target / group commander may not assign targets\n\"AUTOTARGET\" - prevent the unit from assigning a target independently and watching unknown objects / no automatic target selection\n\"MOVE\" - disable the AI's movement / do not move\n\"ANIM\" - disable ability of AI to change animation. Available only since ArmA: Cold War Assault (OFP 1.99).\n\"TEAMSWITCH\" - AI disabled because of Team Switch\n\"FSM\" - disable the execution of AI behavior scripts. Available only since Operation Arrowhead v1.60.\n\"WEAPONAIM\" - no weapon aiming\n\"AIMINGERROR\" - prevents AI's aiming from being distracted by its shooting, moving, turning, reloading, hit, injury, fatigue, suppression or concealed/lost target  Available only since Arma 3 v1.42.\n\"SUPPRESSION\" - prevents AI from being suppressed  Available only since Arma 3 v1.42.\n\"CHECKVISIBLE\" - disables visibility raycasts  Available only since Arma 3 v1.54.\n\"COVER\" - disables usage of cover positions by the AI  Available only since Arma 3 v1.56.\n\"AUTOCOMBAT\" - disables autonomous switching to COMBAT when in danger Available only since Arma 3 v1.56.\n\"PATH\" - stops the AI\u2019s movement but not the target alignment Available only since Arma 3 v1.61.\n\"MINEDETECTION\" - disable Ai mine detection.\n\"ALL\" - all of the above Available since Arma 3 v1.65\n\nNote: In OFP is no way to undo this command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableAI",
              "snippet": "disableAI ${2:section}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disable collision between vehicles. This commmand doesn't disable collision between PhysX objects.\n\n\n\n\n\n\u00a0!\n\n Command has to be executed where objects are local, and as long as they don't change locality, the effect of this command will be global.\nIf the 2 objects are not local to the same computer, then it has to be executed on both computers to achieve the desired effect.\nIf one or both objects change locality, the command needs to be executed again on the new owner's machine(s) to maintain the effect.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableCollisionWith",
              "snippet": "disableCollisionWith ${1:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disable the ability to talk to other people.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableConversation",
              "snippet": "disableConversation ${2:disable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "disableDebriefingStats",
              "description": "Disable debriefing score table.\n\n\n\n\n\n \n\n  This command is broken.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableDebriefingStats"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableNVGEquipment",
              "snippet": "disableNVGEquipment ${2:state}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. If a group contains a single local entity then calculations will still be performed for the entire group.\n\nThese raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like knowsAbout, nearTargets and targetKnowledge will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableRemoteSensors",
              "snippet": "disableRemoteSensors ${1:state}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "disableSerialization",
              "description": "Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types). \nNOTE: When using spawn command, if the argument passed to it is Display or Control, an error will show asking to consider to disable serialization because of use of _this variable. What's more neither disableSerialization no use of uiNamespace will solve this. Passing Display or Control as part of an array however, will do the job:   \nfindDisplay 46 spawn {hint str _this}; // serialization error \n[findDisplay 46] spawn {hint str (_this select 0)}; // OK",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableSerialization"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disables TI (Thermal Imaging) equipment for given vehicle. In older versions of Arma this command would also disable NV (Night Vision), but since Arma 3 v1.52.132676 this command disables only TI. Use disableNVGEquipment to disable NV.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableTIEquipment",
              "snippet": "disableTIEquipment ${2:state}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disables unit's AV terminal(s) connecting to UAV.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableUAVConnectability",
              "snippet": "disableUAVConnectability ${2:[${3:uav}, ${4:checkAllItems}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disable and enable the keyboard and mouse input, usually used during cutscenes.\n\nBe careful with the usage of this command, always remember to enable the user input again, as once the user input is disabled, you can only shut down OFP but not exit the mission with escape.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/disableUserInput",
              "snippet": "disableUserInput ${1:state}$0"
            },
            {
              "leftLabel": "(Number) = display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.\n\nReturning true in EH code will override default engine handling for keyboard events.\n\nSee User Interface Event Handlers for the full list of event names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.\nNOTE: Display EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayAddEventHandler",
              "snippet": "displayAddEventHandler ${2:[${3:eventName}, ${4:code}]}$0"
            },
            {
              "leftLabel": "(Control) = display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return child control with specified idc.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayCtrl",
              "snippet": "displayCtrl ${2:idc}$0"
            },
            {
              "leftLabel": "(Display) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "displayNull",
              "description": "A non-existing Display. To compare non-existent displays use isNull or isEqualTo:\n displayNull == displayNull; // false\n isNull displayNull; // true\n displayNull  isEqualTo displayNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayNull"
            },
            {
              "leftLabel": "(Display) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns parent display of the given display.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayParent",
              "snippet": "displayParent ${1:display}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all event handlers from the given display.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayRemoveAllEventHandlers",
              "snippet": "displayRemoveAllEventHandlers ${2:handlerName}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove a given event handler from the given display.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displayRemoveEventHandler",
              "snippet": "displayRemoveEventHandler ${2:[handler name,id]}$0"
            },
            {
              "leftLabel": "display ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given event handler of given display.\n\nThe return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it's default code should be executed. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/displaySetEventHandler",
              "snippet": "displaySetEventHandler ${2:[${3:handlerName}, ${4:function}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dissolves the given team. All members become members of the main team. Possible team values are: \"RED\", \"GREEN\", \"BLUE\" or \"YELLOW\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dissolveTeam",
              "snippet": "dissolveTeam ${1:teamColor}$0"
            },
            {
              "leftLabel": "(Number) = param1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a distance in meters between Objects, Positions or Locations.\n\nNOTE: If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea. If 2D position is supplied, z is assumed 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance",
              "snippet": "distance ${2:param2}$0"
            },
            {
              "leftLabel": "(Number) = location1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a distance in meters between Objects, Positions or Locations.\n\nNOTE: If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea. If 2D position is supplied, z is assumed 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance",
              "snippet": "distance ${2:location2}$0"
            },
            {
              "leftLabel": "(Number) = param1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distance2D",
              "snippet": "distance2D ${2:param2}$0"
            },
            {
              "leftLabel": "(Number) = var1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Computes the squared distance between two objects or positions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distanceSqr",
              "snippet": "distanceSqr ${2:var2}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "distributionRegion",
              "description": "Returns the numerical index for the distribution region of this copy of ArmA. \n\n1 - US\n\n2 - Rest of the world",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/distributionRegion"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes code. Used as part of construct, such as while, with, for and switch. The code is always executed in missionNamespace unless do is used with with as an argument.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/do",
              "snippet": "do ${1:code}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Performs given Eden Editor action.\n\nSee the list of all actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/do3DENAction",
              "snippet": "do3DENAction ${1:action}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders a unit to reload defined magazine commence fire burst on the given position (silently).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doArtilleryFire",
              "snippet": "doArtilleryFire ${2:[${3:position}, ${4:type}, ${5:rounds}]}$0"
            },
            {
              "leftLabel": "(Anything) = forCommand ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "End of for command, starts cycle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/for%20do",
              "snippet": "do ${2:code}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to fire on the given target (without radio messages).\n\nThe target is set with doTarget or commandTarget.\n\nThe target can be a unit or a vehicle, but not an object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFire",
              "snippet": "doFire ${2:target}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after doStop, just doFollow leader even if it is the leader himself you want to resume (see Example 2).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFollow",
              "snippet": "doFollow ${1:unitName}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders a unit to process command defined by FSM file (silently). \n\nUnlike with execFSM where _this is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n _leader\n leader of subgroup with this command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doFSM",
              "snippet": "doFSM ${2:[${3:fsmName}, ${4:position}, ${5:target}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Orders a unit or units to get out from the vehicle (silently).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doGetOut",
              "snippet": "doGetOut ${1:unit(s)}$0"
            },
            {
              "leftLabel": "unit(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use doStop to stop units returning to formation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doMove",
              "snippet": "doMove ${2:position}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return animation phase of door on vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doorPhase",
              "snippet": "doorPhase ${2:door}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit. The units will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation. To resume group default behaviour, use doFollow command. For example: units _group doFollow leader _group;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doStop",
              "snippet": "doStop ${1:unit(s)}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit to suppress a given position or target (without radio messages).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doSuppressiveFire",
              "snippet": "doSuppressiveFire ${2:target}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to target the given target (without radio messages).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doTarget",
              "snippet": "doTarget ${2:target}$0"
            },
            {
              "leftLabel": "unit(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doWatch",
              "snippet": "doWatch ${2:position}$0"
            },
            {
              "leftLabel": "unit(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/doWatch",
              "snippet": "doWatch ${2:target}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws a single line arrow on the map. To draw a color filled arrow of custom shape see BIS_fnc_drawArrow",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawArrow",
              "snippet": "drawArrow ${2:[${3:from}, ${5:to}, ${6:color}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawEllipse",
              "snippet": "drawEllipse ${2:[${3:c}, ${4:a}, ${5:b}, ${6:angle}, ${7:color}, ${8:fill}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draw an icon on the map. The command needs to be called every frame, preferably with \"Draw\" control event handler ctrlAddEventHandler.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawIcon",
              "snippet": "drawIcon [${2:texture}, ${3:color}, ${4:position}, ${5:width}, ${6:height}, ${7:angle}, ${8:text}, ${9:shadow}, ${10:textSize}, ${11:font}, ${12:align}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws an ingame icon at a given position. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawIcon3D",
              "snippet": "drawIcon3D ${1:[${2:texture}, ${3:color}, ${4:pos}, ${5:width}, ${6:height}, ${7:angle}, ${8:text}, ${9:shadow}, ${10:textSize}, ${11:font}, ${12:textAlign}, ${13:drawSideArrows}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draw a line on the map.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLine",
              "snippet": "drawLine ${2:[${3:position1}, ${4:position2}, ${5:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLine3D",
              "snippet": "drawLine3D ${1:[${2:start}, ${3:end}, ${4:color}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLink",
              "snippet": "drawLink ${2:[from,to,param type,line type,color]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unknown effect.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawLocation",
              "snippet": "drawLocation ${2:location}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw<shape> commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawPolygon",
              "snippet": "drawPolygon ${2:[${3:polygon}, ${4:color}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws a rectangle on the map.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawRectangle",
              "snippet": "drawRectangle ${2:[${3:c}, ${5:a}, ${6:b}, ${7:angle}, ${8:color}, ${9:fill}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Draws a single triangle or multiple triangles on the map. Triangle is defined by 3 positions of its verticies: p0, p1, p2 in a single array [p0, p1, p2]. Next 3 positions in the same array [p0, p1, p2, p0, p1, p2] will be used to draw second triangle, another 3 positions [p0, p1, p2, p0, p1, p2, p0, p1, p2] to draw 3rd and so on. \nNOTE: when fill param is absent or is an empty string \"\", the triangle is drawn with lines of the color set in color param. In order to draw color filled triangle of the same color as color param, set fill param to opaque white procedural texture\"#(rgb,1,1,1)color(1,1,1,1)\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drawTriangle",
              "snippet": "drawTriangle ${2:[${3:vertices}, ${4:color}, ${5:fill}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the driver of a vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/driver",
              "snippet": "driver ${1:vehicle}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a particle effect.\n\nThis command is used to create smoke, fire and similar effects.\n\nThe particles are single polygons with single textures that always face the player.\n\nThey can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/drop",
              "snippet": "drop ${1:array}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for setDynamicSimulationDistance",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationDistance",
              "snippet": "dynamicSimulationDistance ${1:category}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for setDynamicSimulationDistanceCoef",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationDistanceCoef",
              "snippet": "dynamicSimulationDistanceCoef ${1:class}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for enableDynamicSimulation",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationEnabled",
              "snippet": "dynamicSimulationEnabled ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "dynamicSimulationSystemEnabled",
              "description": "A getter for enableDynamicSimulationSystem",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/dynamicSimulationSystemEnabled"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "east",
              "description": "Pre-defined variable for the eastern side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/east"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/echo",
              "snippet": "echo ${1:text}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Open a window with scenario attribute in given section.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/edit3DENMissionAttributes",
              "snippet": "edit3DENMissionAttributes ${1:section}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Show the edit object dialog for the given object. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/editObject",
              "snippet": "editObject ${2:object}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given event handler of given editor.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/editorSetEventHandler",
              "snippet": "editorSetEventHandler ${2:[handler name,function]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the effectiveCommander is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the effectiveCommander role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/effectiveCommander",
              "snippet": "effectiveCommander ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ifCode ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes else code when if condition returns false",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/else",
              "snippet": "else ${2:elseCode}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the number of given positions in the vehicle.\n\nPositions can be \"Commander\", \"Driver\", \"Gunner\" or \"Cargo\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/emptyPositions",
              "snippet": "emptyPositions ${2:position}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables parts of the AI behavior that was disabled by disableAI. \n\n\nNOTE: When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it _unit enableAI \"TeamSwitch\" so that the unit continues with waypoints",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAI",
              "snippet": "enableAI ${2:skilltype}$0"
            },
            {
              "leftLabel": "feature ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable given AI feature. Feature may be one of:\n\n\"AwareFormationSoft\", \"CombatFormationSoft\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAIFeature",
              "snippet": "enableAIFeature ${2:enabled}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set whether animation's aim precision affects weapon sway.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAimPrecision",
              "snippet": "enableAimPrecision ${2:enable}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set if leader can issue attack commands to the soldiers in his group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAttack",
              "snippet": "enableAttack ${2:enable}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\". Return previous state",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAudioFeature",
              "snippet": "enableAudioFeature [${1:feature}, ${2:enable}]$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle availability of the automated helicopter start-up and shutdown sequences.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAutoStartUpRTD",
              "snippet": "enableAutoStartUpRTD ${2:enable}$0"
            },
            {
              "leftLabel": "(Boolean) = helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle auto-trim for RTD helicopters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableAutoTrimRTD",
              "snippet": "enableAutoTrimRTD ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately.\nBy default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCamShake",
              "snippet": "enableCamShake ${1:value}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable caustics drawing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCaustics",
              "snippet": "enableCaustics ${1:bool}$0"
            },
            {
              "leftLabel": "channel ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command. What this command cannot do:\n It cannot disable incoming text or voice\n It cannot interrupt own client's transmission in progress\n It cannot affect any Custom Radio channels, only channels 0-5\n It cannot persist, so if user is logged out, the changes are reset\n It has no effect on chat related scripting commands, such as vehicleChat, globalChat, globalRadio, sideRadio, etc.\nSo in short, just like with getPlayerChannel, this command provides a nice ability to hack into chat UI with some limitations. And the reason why it is possible to disable entire channels (except Group) in description.ext, is because no one can talk or text, therefore no transmission is happening. NOTE: Group channel cannot be disabled, neither with enableChannel, nor with description.ext param. Channel / Number correspondence: \n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct\n 6-15 = Custom Radio (Is not supported by enableChannel)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableChannel",
              "snippet": "enableChannel ${2:enable}$0"
            },
            {
              "leftLabel": "channel ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command. What this command cannot do:\n It cannot disable incoming text or voice\n It cannot interrupt own client's transmission in progress\n It cannot affect any Custom Radio channels, only channels 0-5\n It cannot persist, so if user is logged out, the changes are reset\n It has no effect on chat related scripting commands, such as vehicleChat, globalChat, globalRadio, sideRadio, etc.\nSo in short, just like with getPlayerChannel, this command provides a nice ability to hack into chat UI with some limitations. And the reason why it is possible to disable entire channels (except Group) in description.ext, is because no one can talk or text, therefore no transmission is happening. NOTE: Group channel cannot be disabled, neither with enableChannel, nor with description.ext param. Channel / Number correspondence: \n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct\n 6-15 = Custom Radio (Is not supported by enableChannel)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableChannel",
              "snippet": "enableChannel ${2:[${3:chat}, ${4:VoN}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable collision between vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCollisionWith",
              "snippet": "enableCollisionWith ${1:vehicle}$0"
            },
            {
              "leftLabel": "helicopter ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggles availability of the actions related to copilots (taking over controls, suspending controls, etc.).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCoPilot",
              "snippet": "enableCoPilot ${2:enable}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables copilot actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableCopilot",
              "snippet": "enableCopilot ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "enable debrifing score table.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDebriefingStats",
              "snippet": "enableDebriefingStats [${1:left}, ${2:top}, ${3:width}, ${4:height}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable or disable the legend for diagnostics. Internal dev only",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDiagLegend",
              "snippet": "enableDiagLegend ${1:Bool}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables Arma_3_Dynamic_Simulation for given non AI object",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDynamicSimulation",
              "snippet": "enableDynamicSimulation ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables the whole Arma_3_Dynamic_Simulation system",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableDynamicSimulationSystem",
              "snippet": "enableDynamicSimulationSystem ${1:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "enableEndDialog",
              "description": "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEndDialog"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEngineArtillery",
              "snippet": "enableEngineArtillery ${1:enabled}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable environmental effects: ambient life and/or ambient sound.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEnvironment",
              "snippet": "enableEnvironment ${1:enabled}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable environmental effects: ambient life and/or ambient sound.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableEnvironment",
              "snippet": "enableEnvironment ${1:[${2:ambientLife}, ${3:ambientSound}]}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "environmentEnabled",
              "description": "Returns status of enableEnvironment command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/environmentEnabled"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/Disables the person's fatigue.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableFatigue",
              "snippet": "enableFatigue ${2:enable}$0"
            },
            {
              "leftLabel": "thing ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force the AI to use gun lights",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableGunLights",
              "snippet": "enableGunLights ${2:value}$0"
            },
            {
              "leftLabel": "thing ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Allows the AI to use IR lasers",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableIRLasers",
              "snippet": "enableIRLasers ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/disables mimics on a given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableMimics",
              "snippet": "enableMimics ${2:enabled}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enablePersonTurret",
              "snippet": "enablePersonTurret ${2:[${3:turretPath}, ${4:enable}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableRadio",
              "snippet": "enableRadio ${1:state}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable reload when magazine is empty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableReload",
              "snippet": "enableReload ${2:enable}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable ability to attach or be attached to ropes for given vehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableRopeAttach",
              "snippet": "enableRopeAttach ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/Disables satellite normal map od detail maps.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSatNormalOnDetail",
              "snippet": "enableSatNormalOnDetail ${1:state}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable saving of the game.\n\nWhen disabled, the autosave is created (if not forbidden by save == false).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSaving",
              "snippet": "enableSaving ${1:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable saving of the game.\n\nWhen disabled, the autosave is created (if not forbidden by save == false).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSaving",
              "snippet": "enableSaving ${1:[${2:enable}, ${3:save}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSentences",
              "snippet": "enableSentences ${1:enable}$0"
            },
            {
              "leftLabel": "entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable simulation for given entity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSimulation",
              "snippet": "enableSimulation ${2:state}$0"
            },
            {
              "leftLabel": "entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as enableSimulation when used in SP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableSimulationGlobal",
              "snippet": "enableSimulationGlobal ${2:enable}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable stamina system",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableStamina",
              "snippet": "enableStamina ${2:enabled}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable Team Switch. The default setting is enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableTeamSwitch",
              "snippet": "enableTeamSwitch ${1:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable ambient traffic.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableTraffic",
              "snippet": "enableTraffic ${1:enable}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables unit's AV terminal(s) connecting to UAV.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableUAVConnectability",
              "snippet": "enableUAVConnectability ${2:[${3:uav}, ${4:checkAllItems}]}$0"
            },
            {
              "leftLabel": "uav ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableUAVWaypoints",
              "snippet": "enableUAVWaypoints ${2:enable}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable option to transport other vehicles (if configured) or be transported.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableVehicleCargo",
              "snippet": "enableVehicleCargo ${2:enable}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable given sensor",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableVehicleSensor",
              "snippet": "enableVehicleSensor [${2:componentName}, ${3:state}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable given sensor",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableVehicleSensor",
              "snippet": "enableVehicleSensor [componentClassName, ${3:state}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableWeaponDisassembly",
              "snippet": "enableWeaponDisassembly ${1:enable}$0"
            },
            {
              "leftLabel": "entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enableWeaponDisassembly",
              "snippet": "enableWeaponDisassembly ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "endLoadingScreen",
              "description": "Finishes loading screen started by startLoadingScreen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endLoadingScreen"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Finish the mission.\n\nThe end type can be:\n \"CONTINUE\"\n \"KILLED\"\n \"LOSER\"\n \"END1\"\n \"END2\"\n \"END3\"\n \"END4\"\n \"END5\"\n \"END6\"\n\nMission saves are deleted. Use failMission if they should not.\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endMission",
              "snippet": "endMission ${1:endType}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "enemy",
              "description": "Enemy side (enemy to all units). This command is not functional and appears to have be replaced by sideEnemy.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enemy"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local. \n\nNOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/engineOn",
              "snippet": "engineOn ${2:state}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns which engines are producing some work.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesIsOnRTD",
              "snippet": "enginesIsOnRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all engines RPM",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesRpmRTD",
              "snippet": "enginesRpmRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Torque produced by engines in N\u00b7m (Newton*meter)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/enginesTorqueRTD",
              "snippet": "enginesTorqueRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.\nAlternative syntax introduced in Arma 3 v1.65.138685 allows to filter entities by type and alive status as well as to return entities currently in vehicles.Optimisation tip: Keep number of types in both includeTypes and excludeTypes arrays to a minimum by possibly using parent/base classes. If you have to use several types, arrange them in order so that the more common types go at the beginning of the array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/entities",
              "snippet": "entities ${1:type}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.\nAlternative syntax introduced in Arma 3 v1.65.138685 allows to filter entities by type and alive status as well as to return entities currently in vehicles.Optimisation tip: Keep number of types in both includeTypes and excludeTypes arrays to a minimum by possibly using parent/base classes. If you have to use several types, arrange them in order so that the more common types go at the beginning of the array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/entities",
              "snippet": "entities ${1:[${2:typesInclude}, ${3:typesExclude}, ${4:includeCrews}, ${5:excludeDead}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "estimatedEndServerTime",
              "description": "Estimated end of MP game in seconds converted to serverTime.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/estimatedEndServerTime"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the estimated time left in the game. Using this function the designer can provide a \"time left\" estimate that is shown in the \"Game in progress\" screen or in the master browser. This command works in MP only and must be executed on the server only. NOTE that since Arma 3 v1.69 the max value that can be set is 10 hours (36000 seconds)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/estimatedTimeLeft",
              "snippet": "estimatedTimeLeft ${1:seconds}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return argument in mission editor of a given object. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/evalObjectArgument",
              "snippet": "evalObjectArgument ${2:[object, argument]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/everyBackpack",
              "snippet": "everyBackpack ${1:box}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/everyContainer",
              "snippet": "everyContainer ${1:box}$0"
            },
            {
              "leftLabel": "argument ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Execute a script using (the deprecated but still available) .sqs syntax. The argument is passed to the script in the \"_this\" variable, and magic variable \"_time\" within the script contains the time in seconds that the script has been running.\nAlternatively use execVM command in combination with .sqf syntax.\nLearn more about scripts under Scripts.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exec",
              "snippet": "exec ${2:script}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Execute an editor script for the specified object.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execEditorScript",
              "snippet": "execEditorScript ${2:[object,script]}$0"
            },
            {
              "leftLabel": "(Number) = arguments ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes scripted FSM and returns the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. In Arma 3 FSM handle is also available in _thisFSM variable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execFSM",
              "snippet": "execFSM ${2:filename}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes scripted FSM and returns the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. In Arma 3 FSM handle is also available in _thisFSM variable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execFSM",
              "snippet": "execFSM ${1:filename}$0"
            },
            {
              "leftLabel": "(Script) = arguments ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compiles and adds SQF Script to the scheduler queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in private variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.\nIn order to understand execVM consider the following comparison:\nprivate _handle = _args execVM \"someFile.sqf\";\n// is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\nSo if you need multiple execution of the same file, you might want to store it in a function (Functions Library), otherwise, for a single execution, execVM is a good choice.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execVM",
              "snippet": "execVM ${2:filename}$0"
            },
            {
              "leftLabel": "(Script) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compiles and adds SQF Script to the scheduler queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in private variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.\nIn order to understand execVM consider the following comparison:\nprivate _handle = _args execVM \"someFile.sqf\";\n// is practically identical to\nprivate _handle = _args spawn compile preprocessFileLineNumbers \"someFile.sqf\";\nSo if you need multiple execution of the same file, you might want to store it in a function (Functions Library), otherwise, for a single execution, execVM is a good choice.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/execVM",
              "snippet": "execVM ${1:filename}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "exit",
              "description": "Stops the execution of a  SQS script.\n\nIt's ignored in  SQF Scripts.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exit"
            },
            {
              "leftLabel": "(Anything) = ifType ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Exits current scope {...} it is executed from if condition evaluates true, creates new scope {...code...} and executes the given code in it. Often used for exiting do, for, count or forEach. Simply exiting waitUntil or onEachFrame scopes with exitWith will have no effect as these scopes are called repeatedly by the engine and require different handling to terminate (see Example 3).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exitWith",
              "snippet": "exitWith ${2:code}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Let x be a number, then exp (x) is equal to e to the power of x (or e^x)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exp",
              "snippet": "exp ${1:x}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return expected destination of unit as an array with format: [ Position, planningMode, forceReplan].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/expectedDestination",
              "snippet": "expectedDestination ${1:person}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Export list of JIP to a file. Special: BattlEye's RCON variant of this command is #exportJIPqueue (see also Multiplayer_Server_Commands)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exportJIPMessages",
              "snippet": "exportJIPMessages ${1:fileName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Exports landscape as XYZ file.\n\nNote: Not available in Retail Version",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/exportLandscapeXYZ",
              "snippet": "exportLandscapeXYZ ${1:filename}$0"
            },
            {
              "leftLabel": "(Array, Vector) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/eyeDirection",
              "snippet": "eyeDirection ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object's eyes / main turret position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/eyePos",
              "snippet": "eyePos ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the face of a person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/face",
              "snippet": "face ${1:person}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string. Standard Factions include:\nArma 2:\n West: \"USMC\", \"CDF\"\n East: \"RU\", \"INS\"\n Guer: \"GUE\"\n Civ: \"CIV\", \"CIV_RU\"\nArma 2: Operation Arrowhead: \n West: \"BIS_US\", \"BIS_CZ\", \"BIS_GER\"\n East: \"BIS_TK\", \"BIS_TK_INS\"\n Guer: \"BIS_TK_GUE\", \"BIS_UN\"\n Civ: \"BIS_TK_CIV\", \"BIS_CIV_special\"\nDLC Factions\nArma 2: British Armed Forces: \n West: \"BIS_BAF\"\nArma 2: Private Military Company:\n Guer: \"PMC_BAF\"\nArma 3:\n West: \"BLU_F\" (NATO), \"BLU_G_F\" (FIA)\n East: \"OPF_F\" (CSAT), \"OPF_G_F\" (FIA)\n Guer: \"IND_F\" (AAF), \"IND_G_F\" (FIA)\n Civ: \"CIV_F\" (Civilians)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/faction",
              "snippet": "faction ${1:unitName}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the music volume smoothly within the given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeMusic",
              "snippet": "fadeMusic ${2:volume}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeRadio",
              "snippet": "fadeRadio ${2:volume}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the sound volume smoothly within the given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeSound",
              "snippet": "fadeSound ${2:volume}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fadeSpeech",
              "snippet": "fadeSpeech ${2:volume}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission.\n\nThe end type can be:\n \"CONTINUE\"\n \"KILLED\"\n \"LOSER\"\n \"END1\"\n \"END2\"\n \"END3\"\n \"END4\"\n \"END5\"\n \"END6\"\n\nMission saves won't be deleted.\n\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/failMission",
              "snippet": "failMission ${1:endtype}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "false",
              "description": "Always false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/false"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds magazines from the campaign pool to the given unit, depending on his weapons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fillWeaponsFromPool",
              "snippet": "fillWeaponsFromPool ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found. Test is cASe-seNsItiVE",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/find",
              "snippet": "find ${2:x}$0"
            },
            {
              "leftLabel": "(Number) = string ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found. Test is cASe-seNsItiVE",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/find",
              "snippet": "find ${2:x}$0"
            },
            {
              "leftLabel": "(Object) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional. Command is not functional since Arma 2.\n\n\n\n\n \n\n  This command is not implemented",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findCover",
              "snippet": "findCover ${2:[${3:position}, ${4:hidePosition}, ${5:maxDist}, ${6:minDist}, ${7:visibilityPosition}, ${8:ignoreObject}]}$0"
            },
            {
              "leftLabel": "(Display) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find display by its IDD (which is defined in the description.ext or config).\nIf the specified display can't be found displayNull (\"No display\") is returned, (which can be tested with the isNull command.)\n\nThe primary display uses IDD 46. (eg: findDisplay 46). This will return displayNull on a dedicated server (so be sure to check isDedicated if using this in a waitUntil condition).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findDisplay",
              "snippet": "findDisplay ${1:idd}$0"
            },
            {
              "leftLabel": "(String) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object that matches the provided reference. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEditorObject",
              "snippet": "findEditorObject ${2:value}$0"
            },
            {
              "leftLabel": "(Array, Position) = center ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [minDistance] from the [center] and looks as far away as [maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned.\n\nThis command ignores moving objects present within search area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEmptyPosition",
              "snippet": "findEmptyPosition ${2:[${3:minDistance}, ${4:maxDistance}, vehicleType]}$0"
            },
            {
              "leftLabel": "(Boolean) = center ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if findEmptyPosition command can be called without waiting for files.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findEmptyPositionReady",
              "snippet": "findEmptyPositionReady [radius,maxDistance]$0"
            },
            {
              "leftLabel": "(Object) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see addVehicle) can be returned as valid nearest target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/findNearestEnemy",
              "snippet": "findNearestEnemy ${2:position}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnloadInCombat",
              "snippet": "setUnloadInCombat ${2:[${3:allowCargo}, ${4:allowTurrets}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "finishMissionInit",
              "description": "Finish world initialization before mission is launched.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/finishMissionInit"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "True, if number is finite (not infinite and a valid number)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/finite",
              "snippet": "finite ${1:x}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces a unit to fire the given weapon.\nNOTE: Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local. See also: BIS_fnc_fire",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fire",
              "snippet": "fire ${2:muzzle}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces a unit to fire the given weapon.\nNOTE: Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local. See also: BIS_fnc_fire",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fire",
              "snippet": "fire ${2:[${3:muzzle}, ${4:mode}, ${5:magazine}]}$0"
            },
            {
              "leftLabel": "(Boolean) = sourceVehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remotely forces a unit to fire the given weapon. See also: BIS_fnc_fire",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fireAtTarget",
              "snippet": "fireAtTarget ${2:[${3:targetVehicle}, ${4:weaponMuzzleName}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the first stored backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/firstBackpack",
              "snippet": "firstBackpack ${1:box}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the original flag pole of the flag the unit is carrying.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flag",
              "snippet": "flag ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagAnimationPhase",
              "snippet": "flagAnimationPhase ${1:flag}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the global owner of a flag. A getter for setFlagOwner. Note that owner of a flag is Object rather than Number, as how it is usually with other owner commands",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagOwner",
              "snippet": "flagOwner ${1:flag}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a unit is fleeing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fleeing",
              "snippet": "fleeing ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the next lowest integer in relation to x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/floor",
              "snippet": "floor ${1:x}$0"
            },
            {
              "leftLabel": "aircraft ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flyInHeight",
              "snippet": "flyInHeight ${2:altitude}$0"
            },
            {
              "leftLabel": "aircraft ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flyInHeightASL",
              "snippet": "flyInHeightASL ${2:params}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "fog",
              "description": "A getter for setFog. Returns the current value of the fog in range 0...1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fog"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "fogForecast",
              "description": "Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fogForecast"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "fogParams",
              "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fogParams"
            },
            {
              "leftLabel": "(For Type) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates cycle, using C like style. See example.\n\nIn Arma 3 use private keyword when defining any variables for the scope, see example 4.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/for%20forspec",
              "snippet": "for ${1:forspec}$0"
            },
            {
              "leftLabel": "(For Type) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Starts for sequence, use in complete form (see example).\nThe default step increment is 1. An optional step increment can be specified using the extended syntax.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/for%20var",
              "snippet": "for ${1:variable}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new uniform and hard link it into slot (without any restrictions).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceAddUniform",
              "snippet": "forceAddUniform ${2:type}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "forcedMap",
              "description": "Returns if map was forced by using forceMap command or openMap command with force option",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forcedMap"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "forceEnd",
              "description": "Sets the flag which tells engine that the mission end was forced. Might need additional endMission execution. Can be used in an \"END\" trigger to force end conditions in the editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceEnd"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture.\nNote: Forced flag texture is an additional flag texture, which visually overrides original flag texture and therefore is very expensive to simulate, so please use the functionality sparingly.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceFlagTexture",
              "snippet": "forceFlagTexture ${2:texture}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces the vehicle to stay on road.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceFollowRoad",
              "snippet": "forceFollowRoad ${2:state}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Opens non-interactive main map in background that overrides user screen. The user is able to fire but cannot see the world just the map. To force open interactive map use openMap command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceMap",
              "snippet": "forceMap ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no \"so and so was killed\" message and no score adjustment.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceRespawn",
              "snippet": "forceRespawn ${1:unit}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceSpeed",
              "snippet": "forceSpeed ${2:speed}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces unit to walk even if run or sprint is selected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWalk",
              "snippet": "forceWalk ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. See also: BIS_fnc_fire",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWeaponFire",
              "snippet": "forceWeaponFire ${2:[${3:muzzle}, ${4:firemode}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "forceWeatherChange",
              "description": "Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag). \n\n\n\nNOTE The engine has own idea about the weather and will interfere with your scripted weather at every opportunity it gets. So don't give it the opportunity. In the editor's Intel there are Manual Override setting for many aspects of the weather. Select them to disable engine interference. Some commands such as setWaves and  setLightnings will not even work until their respective settings are set to manual.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forceWeatherChange"
            },
            {
              "leftLabel": "(Anything) = script ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes the given command(s) on every item of an array.\n\nThe array items are represented by the magic variable _x. The array indices are represented by _forEachIndex.\n\nIn ArmA2 & VBS2, the variable _x is always local to the forEach block so it is safe to nest them.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEach",
              "snippet": "forEach ${2:array}$0"
            },
            {
              "leftLabel": "command ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes the given command recursively for both teams and agents that are members of the given team. For teams only use forEachMemberTeam. For agents only use forEachMemberAgent.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMember",
              "snippet": "forEachMember ${2:team}$0"
            },
            {
              "leftLabel": "command ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes the given command recursively for each agent that is a member of the given team. For just teams use forEachMemberTeam. For both teams and agents use forEachMember.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMemberAgent",
              "snippet": "forEachMemberAgent ${2:team}$0"
            },
            {
              "leftLabel": "command ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes the given command recursively for each team that is a member of the given team. For just agents use forEachMemberAgent. For both teams and agents use forEachMember.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forEachMemberTeam",
              "snippet": "forEachMemberTeam ${2:team}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Resets info group has about target",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/forgetTarget",
              "snippet": "forgetTarget ${2:target}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use parseNumber. NOTE that output of this command is limited to ~8Kb. joinString on the other hand doesn't have such limit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/format",
              "snippet": "format ${1:[${2:formatString}, ${3:var1}, ${4:var2} ...]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current formation of a group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formation",
              "snippet": "formation ${1:grp}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the direction in degrees of the 'unit' watching in formation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationDirection",
              "snippet": "formationDirection ${1:unitName}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return leader of the formation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationLeader",
              "snippet": "formationLeader ${1:unitName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return list of units (drivers) in the formation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationMembers",
              "snippet": "formationMembers ${1:person}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return position of unit in the formation",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationPosition",
              "snippet": "formationPosition ${1:person}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the current task of the unit in the formation.\n \nYou can't use it in ArmA 2, it will always returns \"NOTHING\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formationTask",
              "snippet": "formationTask ${1:person}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text by replacing\u00a0%1,\u00a0%2, etc. in format with plain or structured texts given as arguments.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formatText",
              "snippet": "formatText ${1:[${2:format}, arg1, arg2, ...]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/formLeader",
              "snippet": "formLeader ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "freeLook",
              "description": "Returns true if freelook is active.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/freeLook"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "friendly",
              "description": "Friendly side (friendly to all units). This command is not functional and appears to have be replaced by sideFriendly.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/friendly"
            },
            {
              "leftLabel": "(For Type) = for ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Continue sequence of for var construct. It sets the start value of the index variable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/from",
              "snippet": "from ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return if given team was inserted directly from mission editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fromEditor",
              "snippet": "fromEditor ${1:teamMember}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks how much fuel is left in the gas tank of a vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fuel",
              "snippet": "fuel ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array, Object, String, Number, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.\nNOTE that with introduction of person turrets, the cargo indexes listed in the return are true for moveInCargo command but incompatible with actions such as \"GetInCargo\" and \"MoveToCargo\". To find out seats compatible with cargo action commands, execute command with \"cargo\" filter:\nfullCrew [heli, \"cargo\", true];\nThe return array is ordered according to cargo index compatible with action cargo commands, i.e. 1st element has index 0, second - index 1, etc. For example armed WY-55 Hellcat reports:\n [[<NULL-object>,\"cargo\",2,[],false],[<NULL-object>,\"cargo\",3,[],false],[<NULL-object>,\"cargo\",4,[],false],[<NULL-object>,\"cargo\",5,[],false]]\nfor cargo positions. The following commands will put player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fullCrew",
              "snippet": "fullCrew ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array, Object, String, Number, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.\nNOTE that with introduction of person turrets, the cargo indexes listed in the return are true for moveInCargo command but incompatible with actions such as \"GetInCargo\" and \"MoveToCargo\". To find out seats compatible with cargo action commands, execute command with \"cargo\" filter:\nfullCrew [heli, \"cargo\", true];\nThe return array is ordered according to cargo index compatible with action cargo commands, i.e. 1st element has index 0, second - index 1, etc. For example armed WY-55 Hellcat reports:\n [[<NULL-object>,\"cargo\",2,[],false],[<NULL-object>,\"cargo\",3,[],false],[<NULL-object>,\"cargo\",4,[],false],[<NULL-object>,\"cargo\",5,[],false]]\nfor cargo positions. The following commands will put player in the same seat:\nplayer moveInCargo [heli, 2];\nplayer action [\"GetInCargo\", heli, 0];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/fullCrew",
              "snippet": "fullCrew [${2:vehicle}, ${3:type}, ${4:includeEmpty}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ammo count of assigned magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearIDCAmmoCount",
              "snippet": "gearIDCAmmoCount ${1:idc}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ammo count of assigned magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearSlotAmmoCount",
              "snippet": "gearSlotAmmoCount ${1:control}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns gear slot item name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gearSlotData",
              "snippet": "gearSlotData ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns state of given action in the Eden Editor.\n\nSee the list of all actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENActionState",
              "snippet": "get3DENActionState ${1:action}$0"
            },
            {
              "leftLabel": "(Array, Anything) = entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of a given entity's attribute in Eden Editor.\n\nAn attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENAttribute",
              "snippet": "get3DENAttribute ${2:attribute}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "get3DENCamera",
              "description": "Returns the camera Object used by the Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENCamera"
            },
            {
              "leftLabel": "(Array, String, Eden Entity) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return all connections currently present on an entity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENConnections",
              "snippet": "get3DENConnections ${1:entity}$0"
            },
            {
              "leftLabel": "(Eden Entity, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENEntity",
              "snippet": "get3DENEntity ${1:id}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENEntityID",
              "snippet": "get3DENEntityID ${1:entity}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the grid increment for the given transformation type.\nTransformation types:\n Rotation - \"r\"\n Translation - \"t\"\n Scale - \"s\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENGrid",
              "snippet": "get3DENGrid ${1:type}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "get3DENIconsVisible",
              "description": "Get visibility state of Eden Editor icons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENIconsVisible"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return all entities and sub-layer in Eden Entity layer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENLayerEntities",
              "snippet": "get3DENLayerEntities ${1:layerID}$0"
            },
            {
              "leftLabel": "(Array, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "get3DENLinesVisible",
              "description": "Get visibility state of Eden Editor lines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENLinesVisible"
            },
            {
              "leftLabel": "(Anything) = section ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return value of scenario attribute.\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENMissionAttribute",
              "snippet": "get3DENMissionAttribute ${2:class}$0"
            },
            {
              "leftLabel": "(Array, Eden Entity, Object, Group, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "get3DENMouseOver",
              "description": "Returns the Eden Entity the mouse is hovering over in Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENMouseOver"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of all selected Eden Editor Entities, including groups, waypoints, and markers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/get3DENSelected",
              "snippet": "get3DENSelected ${1:type}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get current aiming coefficient (higher ~ less precise, default is 1)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAimingCoef",
              "snippet": "getAimingCoef ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllEnvSoundControllers",
              "snippet": "getAllEnvSoundControllers ${1:position}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:\n 0: no damage\n 1: full damage",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllHitPointsDamage",
              "snippet": "getAllHitPointsDamage ${1:entity}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets all mine objects this unit has ownership over.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllOwnedMines",
              "snippet": "getAllOwnedMines ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAllSoundControllers",
              "snippet": "getAllSoundControllers ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the amount of ammo resources in the cargo space of a rearm vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAmmoCargo",
              "snippet": "getAmmoCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns aim precision for current animation",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAnimAimPrecision",
              "snippet": "getAnimAimPrecision ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get coefficient for animation speed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAnimSpeedCoef",
              "snippet": "getAnimSpeedCoef ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Extract array from config entry.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArray",
              "snippet": "getArray ${1:config}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryAmmo",
              "snippet": "getArtilleryAmmo ${1:[unit1, unit2, unit3....]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getArtilleryComputerSettings",
              "description": "Returns settings from artillery computer currently opened by player.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryComputerSettings"
            },
            {
              "leftLabel": "(Number) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getArtilleryETA",
              "snippet": "getArtilleryETA [${2:targetPosition}, ${3:magazineType}]$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns curator logic to which given player has access.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssignedCuratorLogic",
              "snippet": "getAssignedCuratorLogic ${1:player}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns unit assigned to curator logic.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getAssignedCuratorUnit",
              "snippet": "getAssignedCuratorUnit ${1:curatorObj}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all backpack types and count from the cargo space",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBackpackCargo",
              "snippet": "getBackpackCargo ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBleedingRemaining",
              "snippet": "getBleedingRemaining ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns amount of damage from fire.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getBurningValue",
              "snippet": "getBurningValue ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, Vector) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCameraViewDirection",
              "snippet": "getCameraViewDirection ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCargoIndex",
              "snippet": "getCargoIndex ${2:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns center of mass of an object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCenterOfMass",
              "snippet": "getCenterOfMass ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getClientState",
              "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\ngetClientStateNumber\u00a0\u00a0\u00a0\u00a0\ngetClientState\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nDescription\n\n0\n\"NONE\"\nNo client (or singleplayer)\n\n1\n\"CREATED\"\nClient is created\n\n2\n\"CONNECTED\"\nClient is connected to server, message formats are registered\n\n3\n\"LOGGED IN\"\nIdentity is created\n\n4\n\"MISSION SELECTED\"\nMission is selected\n\n5\n\"MISSION ASKED\"\nServer was asked to send / not send mission\n\n6\n\"ROLE ASSIGNED\"\nRole was assigned (and confirmed)\n\n7\n\"MISSION RECEIVED\"\nMission received\n\n8\n\"GAME LOADED\"\nIsland loaded, vehicles received\n\n9\n\"BRIEFING SHOWN\"\nBriefing was displayed\n\n10\n\"BRIEFING READ\"\nReady to play mission\n\n11\n\"GAME FINISHED\"\nGame was finished\n\n12\n\"DEBRIEFING READ\"\nDebriefing read, ready to continue with next mission",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getClientState"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getClientStateNumber",
              "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:\n\n\ngetClientStateNumber\u00a0\u00a0\u00a0\u00a0\ngetClientState\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nDescription\n\n0\n\"NONE\"\nNo client (or singleplayer)\n\n1\n\"CREATED\"\nClient is created\n\n2\n\"CONNECTED\"\nClient is connected to server, message formats are registered\n\n3\n\"LOGGED IN\"\nIdentity is created\n\n4\n\"MISSION SELECTED\"\nMission is selected\n\n5\n\"MISSION ASKED\"\nServer was asked to send / not send mission\n\n6\n\"ROLE ASSIGNED\"\nRole was assigned (and confirmed)\n\n7\n\"MISSION RECEIVED\"\nMission received\n\n8\n\"GAME LOADED\"\nIsland loaded, vehicles received\n\n9\n\"BRIEFING SHOWN\"\nBriefing was displayed\n\n10\n\"BRIEFING READ\"\nReady to play mission\n\n11\n\"GAME FINISHED\"\nGame was finished\n\n12\n\"DEBRIEFING READ\"\nDebriefing read, ready to continue with next mission",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getClientStateNumber"
            },
            {
              "leftLabel": "(Array) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array of compatible pylon magazines",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCompatiblePylonMagazines",
              "snippet": "getCompatiblePylonMagazines ${2:pylon}$0"
            },
            {
              "leftLabel": "(Array) = vehicleClass ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array of compatible pylon magazines",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCompatiblePylonMagazines",
              "snippet": "getCompatiblePylonMagazines ${2:pylon}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns UAV if unit has connection to some UAV.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getConnectedUAV",
              "snippet": "getConnectedUAV ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns max load value of given container. Currently works only with uniform, vest and backpack classes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getContainerMaxLoad",
              "snippet": "getContainerMaxLoad ${1:containerClass}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getCursorObjectParams",
              "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away then 50 meters, selections are always an empty array and distance is 1e10 (10^10).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCursorObjectParams"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getCustomAimCoef",
              "snippet": "getCustomAimCoef ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object damage in the range from 0 to 1. Alias of damage.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDammage",
              "snippet": "getDammage ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the string representation of unit as an four slots array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDescription",
              "snippet": "getDescription ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object heading in the range from 0 to 360. \nSince Arma 3 v1.55.133361, an alternative syntax is added that allows to get heading from one object or position to another object or position, the equivalent of BIS_fnc_dirTo",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDir",
              "snippet": "getDir ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = pos1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object heading in the range from 0 to 360. \nSince Arma 3 v1.55.133361, an alternative syntax is added that allows to get heading from one object or position to another object or position, the equivalent of BIS_fnc_dirTo",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDir",
              "snippet": "getDir ${2:pos2}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns object's heading in the range from 0 to 360 in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDirVisual",
              "snippet": "getDirVisual ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of appIDs of DLCs. Use filter param to get specific type of DLCs: \n0 - all\n1 - owned\n2 - not owned",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getDLCs",
              "snippet": "getDLCs ${1:filter}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Fetches a reference to the mission editor camera.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorCamera",
              "snippet": "getEditorCamera ${1:map}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current mode of the editor.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorMode",
              "snippet": "getEditorMode ${1:map}$0"
            },
            {
              "leftLabel": "(String) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the editor object scope of the specified editor object.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEditorObjectScope",
              "snippet": "getEditorObjectScope ${2:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getElevationOffset",
              "description": "Returns the map elevation offset from [map]/config.cpp.\n\nReturns 0 if there's no elevationOffset defined in the config of the current world.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getElevationOffset"
            },
            {
              "leftLabel": "(Number) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of the specified controller.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getEnvSoundController",
              "snippet": "getEnvSoundController ${2:controller}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns fatigue of given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFatigue",
              "snippet": "getFatigue ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getForcedFlagTexture",
              "snippet": "getForcedFlagTexture ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = side1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. See also Side relations.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFriend",
              "snippet": "getFriend ${2:side2}$0"
            },
            {
              "leftLabel": "(Anything) = FSMhandle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFSMVariable",
              "snippet": "getFSMVariable ${2:name}$0"
            },
            {
              "leftLabel": "(Anything) = FSMhandle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFSMVariable",
              "snippet": "getFSMVariable ${1:[${3:name}, ${4:defaultValue}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getFuelCargo",
              "snippet": "getFuelCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get group icon properties.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIcon",
              "snippet": "getGroupIcon ${2:ID}$0"
            },
            {
              "leftLabel": "(Array, String, Number, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIconParams",
              "snippet": "getGroupIconParams ${1:group}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getGroupIcons",
              "snippet": "getGroupIcons ${1:group}$0"
            },
            {
              "leftLabel": "(Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the Position where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHideFrom",
              "snippet": "getHideFrom ${2:enemy}$0"
            },
            {
              "leftLabel": "(Number, Nothing) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns selection damage. Same as getHitPointDamage only argument is selection part instead of hit point. Note: Some part names are in Czech; see translation table.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHit",
              "snippet": "getHit ${2:selection}$0"
            },
            {
              "leftLabel": "(Number, Nothing) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.\n 0: no damage\n 1: full damage",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHitIndex",
              "snippet": "getHitIndex ${2:hitPartIndex}$0"
            },
            {
              "leftLabel": "(Number, Nothing) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit.\n 0: no damage\n 1: full damage",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getHitPointDamage",
              "snippet": "getHitPointDamage ${2:hitPointName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all items names and count from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getItemCargo",
              "snippet": "getItemCargo ${1:box}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all magazines types and count from the cargo space",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMagazineCargo",
              "snippet": "getMagazineCargo ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns marker color for given marker. See setMarkerColor. Note: This function is identical to markerColor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerColor",
              "snippet": "getMarkerColor ${1:markerName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of a given marker in format [x,y,0]. Array element 3 (height above ground) is always zero. If a non-existing marker is referenced the values returned are [0,0,0].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerPos",
              "snippet": "getMarkerPos ${1:markerName}$0"
            },
            {
              "leftLabel": "(Array, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the size of the given marker. A getter for setMarkerSize and an alias of markerSize.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerSize",
              "snippet": "getMarkerSize ${1:markerName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the type of a given marker. See cfgMarkers for a list of standard markers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMarkerType",
              "snippet": "getMarkerType ${1:markerName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns mass of a PhysX object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMass",
              "snippet": "getMass ${1:object}$0"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:\n External Description.ext file\n Eden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfig",
              "snippet": "getMissionConfig ${1:attribute}$0"
            },
            {
              "leftLabel": "(Number, String, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:\n External Description.ext file\n Eden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfigValue",
              "snippet": "getMissionConfigValue ${1:attribute}$0"
            },
            {
              "leftLabel": "(Number, String, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:\n External Description.ext file\n Eden Editor scenario attribute\nSo if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionConfigValue",
              "snippet": "getMissionConfigValue [${1:attribute}, ${2:defaultValue}]$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getMissionDLCs",
              "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionDLCs"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace.\n\nUseful for disabling / enabling whole parts of the scenario which you add to specific layer while editing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMissionLayerEntities",
              "snippet": "getMissionLayerEntities ${1:layerName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getModelInfo",
              "snippet": "getModelInfo ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getMousePosition",
              "description": "Returns mouse position in UI coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getMousePosition"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Extract number from config entry.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getNumber",
              "snippet": "getNumber ${1:config}$0"
            },
            {
              "leftLabel": "(String) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return name of object argument in mission editor.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectArgument",
              "snippet": "getObjectArgument [${2:object}, ${3:argument}]$0"
            },
            {
              "leftLabel": "(Array) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return a list of all the children of the specified object.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectChildren",
              "snippet": "getObjectChildren ${2:object}$0"
            },
            {
              "leftLabel": "(Number, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectDLC",
              "snippet": "getObjectDLC ${1:obj}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets all custom materials associated with the object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectMaterials",
              "snippet": "getObjectMaterials ${1:obj}$0"
            },
            {
              "leftLabel": "(Object) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the proxy object associated with the given editor object.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectProxy",
              "snippet": "getObjectProxy ${2:object}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectTextures",
              "snippet": "getObjectTextures ${1:obj}$0"
            },
            {
              "leftLabel": "(Number, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns object type as a number:\n 1 - Primary - Normal object placed in Visitor, part of landscape\n 2 - Network - Road placed in Visitor, part of landscape\n 4 - Temporary - Temporary object (like tracks)\n 8 - TypeVehicle - Some entity added by game\n 16 - TypeTempVehicle - Temporary entity\n 32 - LandDecal - Land decal",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectType",
              "snippet": "getObjectType ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getObjectViewDistance",
              "description": "Gets the values of rendering distances of objects and shadows.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getObjectViewDistance"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns amount of remaining oxygen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getOxygenRemaining",
              "snippet": "getOxygenRemaining ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC. \n\n\n\n\n \n\n  This command is broken and doesnt work on dedicated server",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPersonUsedDLCs",
              "snippet": "getPersonUsedDLCs ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, Vector, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns model space vector of the object airplane or helicopter pilotCamera .",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraDirection",
              "snippet": "getPilotCameraDirection ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraPosition",
              "snippet": "getPilotCameraPosition ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraRotation",
              "snippet": "getPilotCameraRotation ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position, Object, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPilotCameraTarget",
              "snippet": "getPilotCameraTarget ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:\n It does not work on dedicated server, the return is always -1, only client can detect other client talking.\n It does not detect when someone talks on direct chat at all anywhere. \n The client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on.\nIn short, this command mimics the speaking icon from the UI. Correspondence between channel and number:\n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct (Is not detected by getPlayerChannel)\n 6-15 = Custom Radio (see radioChannelCreate)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerChannel",
              "snippet": "getPlayerChannel ${1:player}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). In SP: empty array []",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerScores",
              "snippet": "getPlayerScores ${1:unitName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return an uniqueID of the given unit as string if it's player and empty value if it's AI. The unique ID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).\n\nNote: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerUID",
              "snippet": "getPlayerUID ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the old UniqueID of Arma 2 OA of the given unit as string if it's player and empty value if it's AI. The uniqueID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).\n\nNote: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPlayerUIDOld",
              "snippet": "getPlayerUIDOld ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object position in format PositionAGLS. Z value is height over the surface underneath. \nSince Arma 3 v1.55.133361, an alternative syntax is added that allows to get position given distance and heading away from original object or position, the equivalent of BIS_fnc_relPos",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPos",
              "snippet": "getPos ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Array) = origin ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object position in format PositionAGLS. Z value is height over the surface underneath. \nSince Arma 3 v1.55.133361, an alternative syntax is added that allows to get position given distance and heading away from original object or position, the equivalent of BIS_fnc_relPos",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPos",
              "snippet": "getPos ${2:[${3:distance}, ${4:heading}]}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object position height above sea level.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASL",
              "snippet": "getPosASL ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASLVisual",
              "snippet": "getPosASLVisual ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object position height above sea surface (waves included).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosASLW",
              "snippet": "getPosASLW ${1:obj}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of an object relative to the terrain.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosATL",
              "snippet": "getPosATL ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an object's rendered 3D position ATL (z value above ground) in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosATLVisual",
              "snippet": "getPosATLVisual ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope. Alias of visiblePosition.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosVisual",
              "snippet": "getPosVisual ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPosWorld",
              "snippet": "getPosWorld ${1:object}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return array of magazines on pylons",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getPylonMagazines",
              "snippet": "getPylonMagazines ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRelDir",
              "snippet": "getRelDir ${2:position}$0"
            },
            {
              "leftLabel": "(Array, Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns position, which is given distance and relative direction away from original object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRelPos",
              "snippet": "getRelPos ${2:[${3:distance}, ${4:direction}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getRemoteSensorsDisabled",
              "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRemoteSensorsDisabled"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getRepairCargo",
              "snippet": "getRepairCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getResolution",
              "description": "Returns an array containing all information about resolution.\n\nThe returned Array is as follow: [width, height, 2D viewport width, 2D viewport height, aspect ratio, UI scale]\n\nNote: aspect ratio and UI scale are returned as coefficients and not 16:9 for example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getResolution"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getShadowDistance",
              "description": "Gets the shadows rendering distance.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getShadowDistance"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getShotParents",
              "snippet": "getShotParents ${1:projectile}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object which is sling loaded by vehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSlingLoad",
              "snippet": "getSlingLoad ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of the given sound controller.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSoundController",
              "snippet": "getSoundController ${2:controller}$0"
            },
            {
              "leftLabel": "(Number) = obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the calculated value of simple expression in config.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSoundControllerResult",
              "snippet": "getSoundControllerResult ${2:configEntry}$0"
            },
            {
              "leftLabel": "(Number) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get the speed for the given speed mode.\n\nSpeedMode can be:\n\"AUTO\"\n\"SLOW\"\n\"NORMAL\"\n\"FAST\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSpeed",
              "snippet": "getSpeed ${2:speedMode}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get current stamina (~ seconds until depletion)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getStamina",
              "snippet": "getStamina ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns value of the given  stat.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getStatValue",
              "snippet": "getStatValue ${1:name}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the suppression value of given unit. Returns SCALAR between 0 and 1. Suppression is not calculated for player entities.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getSuppression",
              "snippet": "getSuppression ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getTerrainGrid",
              "description": "Returns the current terrain grid",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTerrainGrid"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the terrain height above the sea for the given position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getTerrainHeightASL",
              "snippet": "getTerrainHeightASL ${1:position}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Extract text from config entry.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getText",
              "snippet": "getText ${1:config}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with all assigned items, weapons, containers and their stored items.\nDetailed explanation of the returned array: Talk:getUnitLoadout\n\n\n\n\n \n\n This command is not final and might be changed in a near future.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "snippet": "getUnitLoadout ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with all assigned items, weapons, containers and their stored items.\nDetailed explanation of the returned array: Talk:getUnitLoadout\n\n\n\n\n \n\n This command is not final and might be changed in a near future.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitLoadout",
              "snippet": "getUnitLoadout ${1:class}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the current value of a trait of the given unit.\n\nDefault traits are:\n audibleCoef (scalar)\n camouflageCoef (scalar)\n engineer (bool)\n explosiveSpecialist (bool)\n loadCoef (scalar)\n medic (bool)\n UAVHacker (bool)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getUnitTrait",
              "snippet": "getUnitTrait ${2:skill_name}$0"
            },
            {
              "leftLabel": "(Anything, Nothing) = varspace ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the value of variable in the variable space assigned to various data types. In case of Alt Syntax usage in Arma 3, the default value will be returned if:\n Requested variable is either undefined or nil\n Variable namespace is null (objNull, grpNull, etc.) \nAll available data types combinations:\n Namespace getVariable String\n Namespace getVariable Array (since Arma 2 1.60)\n Object getVariable String\n Object getVariable Array\n Group getVariable String\n Group getVariable Array\n Team_Member getVariable String\n Team_Member getVariable Array\n Task getVariable String\n Task getVariable Array (Since Arma 3 v1.67)\n Location getVariable String\n Location getVariable Array (Since Arma 3 v1.67)\n Control getVariable String (since Arma 3 v1.55.133553)\n Control getVariable Array (since Arma 3 v1.55.133553)\n Display getVariable String (since Arma 3 v1.55.133553)\n Display getVariable Array (since Arma 3 v1.55.133553)\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM getVariable will not work.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVariable",
              "snippet": "getVariable ${2:name}$0"
            },
            {
              "leftLabel": "(Anything) = varspace ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the value of variable in the variable space assigned to various data types. In case of Alt Syntax usage in Arma 3, the default value will be returned if:\n Requested variable is either undefined or nil\n Variable namespace is null (objNull, grpNull, etc.) \nAll available data types combinations:\n Namespace getVariable String\n Namespace getVariable Array (since Arma 2 1.60)\n Object getVariable String\n Object getVariable Array\n Group getVariable String\n Group getVariable Array\n Team_Member getVariable String\n Team_Member getVariable Array\n Task getVariable String\n Task getVariable Array (Since Arma 3 v1.67)\n Location getVariable String\n Location getVariable Array (Since Arma 3 v1.67)\n Control getVariable String (since Arma 3 v1.55.133553)\n Control getVariable Array (since Arma 3 v1.55.133553)\n Display getVariable String (since Arma 3 v1.55.133553)\n Display getVariable Array (since Arma 3 v1.55.133553)\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM getVariable will not work.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVariable",
              "snippet": "getVariable ${2:[${3:name}, ${4:defaultValue}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getVehicleCargo",
              "snippet": "getVehicleCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all weapons types and count from the cargo space",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWeaponCargo",
              "snippet": "getWeaponCargo ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current size of weapon sway of a given unit, in radians",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWeaponSway",
              "snippet": "getWeaponSway ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "getworld",
              "description": "Returns the name of the current map. Name is actually class as defined in config (eg Intro).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWorld"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/getWPPos",
              "snippet": "getWPPos ${1:[${2:group}, ${3:index}]}$0"
            },
            {
              "leftLabel": "unit(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Control what the unit is glancing at (target or Position).\n\nHow frequently the unit is glancing there depends on behaviour.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/glanceAt",
              "snippet": "glanceAt ${2:position}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/globalChat",
              "snippet": "globalChat ${2:chatText}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/globalRadio",
              "snippet": "globalRadio ${2:radioName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of currently used goggles (for NVGoggles use hmd).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/goggles",
              "snippet": "goggles ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "In SQS scripts only: Go to given label.\n\nString argument is used here.\nBe sure to use double quotes around label name in goto. Define the label with #. Note that Labels are not case sensitive and that labels are searched for from the top of the script, so multiple occurrences of a label will only result in the top most one ever being found.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/goto",
              "snippet": "goto ${1:label}$0"
            },
            {
              "leftLabel": "(Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the group a unit is assigned to.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/group",
              "snippet": "group ${1:object}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the group radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupChat",
              "snippet": "groupChat ${2:chatText}$0"
            },
            {
              "leftLabel": "(Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupFromNetId",
              "snippet": "groupFromNetId ${1:id}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "groupIconSelectable",
              "description": "Return if groups icon raises onClick and onOver events.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupIconSelectable"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "groupIconsVisible",
              "description": "Return group icons are visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupIconsVisible"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns group name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupId",
              "snippet": "groupId ${1:group}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ID of client to which the group is local. Can be run only from server. When called from client, it always returns 0",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupOwner",
              "snippet": "groupOwner ${1:group}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the group radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupRadio",
              "snippet": "groupRadio ${2:radioName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupSelectedUnits",
              "snippet": "groupSelectedUnits ${1:unit}$0"
            },
            {
              "leftLabel": "player ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/groupSelectUnit",
              "snippet": "groupSelectUnit ${2:[${3:unit}, ${4:select}]}$0"
            },
            {
              "leftLabel": "(Group) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "grpNull",
              "description": "A non-existing Group. To compare non-existent groups use isNull or isEqualTo:\n grpNull == grpNull; // false\n isNull grpNull; // true\n grpNull isEqualTo grpNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/grpNull"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the gunner of a vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gunner",
              "snippet": "gunner ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "gusts",
              "description": "Return the current gusts value. Scale is 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/gusts"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "halt",
              "description": "Stops the program into a debugger. In retail version using halt results in error.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/halt"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all items assigned to the handgun. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunItems",
              "snippet": "handgunItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or handgun is not loaded. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunMagazine",
              "snippet": "handgunMagazine ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of a unit's handgun (an empty string if there is none).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handgunWeapon",
              "snippet": "handgunWeapon ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a soldier's hands are hit, which results in inaccurate aiming.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/handsHit",
              "snippet": "handsHit ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "hasInterface",
              "description": "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasInterface"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the object airplane or helicopter has a pilotCamera.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasPilotCamera",
              "snippet": "hasPilotCamera ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a unit has the given weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hasWeapon",
              "snippet": "hasWeapon ${2:weaponName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns selected groups in high command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcAllGroups",
              "snippet": "hcAllGroups ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns parameters describing group in high command bar.\n\nReturn value is [string, float[4]]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcGroupParams",
              "snippet": "hcGroupParams ${2:group}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns group's high command commander.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcLeader",
              "snippet": "hcLeader ${1:group}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all groups from unit's high command bar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcRemoveAllGroups",
              "snippet": "hcRemoveAllGroups ${1:unit}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes group from unit's high command bar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcRemoveGroup",
              "snippet": "hcRemoveGroup ${2:group}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns selected groups in high command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSelected",
              "snippet": "hcSelected ${1:unit}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select given group in high command bar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSelectGroup",
              "snippet": "hcSelectGroup ${2:array}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add group to unit's high command bar.\n\nArray parameters are group, group-name and team (teammain, teamred, teamgreen, teamblue, teamyellow).\n\nGroup is the only necessary parameter.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcSetGroup",
              "snippet": "hcSetGroup ${2:array}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides high command bar.\n\nThere must be some groups under HC command to show HC bar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcShowBar",
              "snippet": "hcShowBar ${1:bool}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "hcShownBar",
              "description": "Return true if the high command bar is shown/active.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hcShownBar"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns headgear of unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/headgear",
              "snippet": "headgear ${1:unit}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When set to true it disables the default engine hiding behavior.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideBehindScripted",
              "snippet": "hideBehindScripted ${2:scriptedHideBehind}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes grpNull, the body gets deleted and becomes objNull. If applied to alive unit, nothing happens until unit dies, then the unit's body gets hidden. If a dead unit is human player, the body is hidden but not deleted until player respawns.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideBody",
              "snippet": "hideBody ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObject",
              "snippet": "hideObject ${1:object}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObject",
              "snippet": "hideObject ${2:hidden}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e. (typeOf object != \"\").  In SP this command behaves just like hideObject.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObjectGlobal",
              "snippet": "hideObjectGlobal ${1:object}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e. (typeOf object != \"\").  In SP this command behaves just like hideObject.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideObjectGlobal",
              "snippet": "hideObjectGlobal ${2:hidden}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Hides or enables the given selection for the object",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hideSelection",
              "snippet": "hideSelection [${1:selection}, ${2:hidden}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "hierarchyObjectsCount",
              "description": "The number of objects in hierarchy.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hierarchyObjectsCount"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma). This version of hint is supposed to play a sound when hint is shown, but this varies between games and versions. Use hintSilent for soundless hint.\n\nThe effect of this command is local, i.e. the hint will only show on the computer command was executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hint",
              "snippet": "hint ${1:text}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "snippet": "hintC ${1:content}$0"
            },
            {
              "leftLabel": "title ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "snippet": "hintC ${2:[content1, content2, ...]}$0"
            },
            {
              "leftLabel": "title ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "snippet": "hintC ${2:content}$0"
            },
            {
              "leftLabel": "title ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintC",
              "snippet": "hintC ${2:content}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows a text hint only when in cadetMode.\n\nThe text can contain several lines. \\n is used to indicate the end of a line.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintCadet",
              "snippet": "hintCadet ${1:text}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Same as hint, but without a sound.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hintSilent",
              "snippet": "hintSilent ${1:text}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hmd",
              "snippet": "hmd ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog.\n\nFor example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded.\n\nYou need to provide the display which is active when the hostMission command is called.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/hostMission",
              "snippet": "hostMission ${1:[${2:pConfig}, ${3:pDisplay}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Load HTML from file to given control. File path is relative to current mission dir or an absolute path (with drive letter etc.). The command is subject to restrictions, imposed by CfgCommands class.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/htmlLoad",
              "snippet": "htmlLoad ${2:filename}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "HUDMovementLevels",
              "description": "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/HUDMovementLevels"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "humidity",
              "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/humidity"
            },
            {
              "leftLabel": "(If Type) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This operator creates a If Type which is used in the if-construct as described here.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/if",
              "snippet": "if ${1:condition}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text containing the given image.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/image",
              "snippet": "image ${1:filename}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Imports all groups into the RTE. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/importAllGroups",
              "snippet": "importAllGroups ${1:map}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a location's importance value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/importance",
              "snippet": "importance ${1:location}$0"
            },
            {
              "leftLabel": "(Boolean) = value ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "snippet": "in ${2:array}$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "snippet": "in ${2:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/in",
              "snippet": "in ${2:location}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \n\nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "snippet": "inArea ${2:trigger}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \n\nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "snippet": "inArea ${2:marker}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \n\nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "snippet": "inArea ${2:location}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse. \n\nAlternatively, use inAreaArray to check multiple positions/objects within area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inArea",
              "snippet": "inArea ${2:[${3:center}, ${4:a}, ${5:b}, ${6:angle}, ${7:isRectangle}, ${8:c}]}$0"
            },
            {
              "leftLabel": "(Array, Object, Position) = positions ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "snippet": "inAreaArray ${2:trigger}$0"
            },
            {
              "leftLabel": "(Array, Object, Position) = positions ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "snippet": "inAreaArray ${2:marker}$0"
            },
            {
              "leftLabel": "(Array, Object, Position) = positions ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "snippet": "inAreaArray ${2:location}$0"
            },
            {
              "leftLabel": "(Array, Object, Position) = positions ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inAreaArray",
              "snippet": "inAreaArray ${2:[${3:center}, ${4:a}, ${5:b}, ${6:angle}, ${7:isRectangle}, ${8:c}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the incapacitated state of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/incapacitatedState",
              "snippet": "incapacitatedState ${1:person}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "independent",
              "description": "Pre-defined variable for the independent side.\n Alias for resistance.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/independent"
            },
            {
              "leftLabel": "fireplace ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Control fireplace burning. Set inflame to true (on) or false (off).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inflame",
              "snippet": "inflame ${2:burn}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inflamed",
              "snippet": "inflamed ${1:fireplace}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given event handler of in-game UI. If EH function returns true, performed action is overridden. Event handlers available are:\n \"PrevAction\" - mouse scroll up\n \"Action\" - action key press\n \"NextAction\" - mouse scroll down\nThis is \"set\" type EH, which means it will replace previously set EH of the same type. So to remove EH, set another one with empty string \"\" for the function.\n\nSince Arma 3 v1.49.131743 this EH returns array of params for selected/activated action in _this variable:\n 0: Object - target object to which action is attached\n 1: Object - caller object, basically player\n 2: Number - index of the action in action menu (0 - top most)\n 3: String - engine based action name (\"User\" for user added actions)\n 4: String - localized action plain text as seen by the caller\n 5: Number - action priority value\n 6: Boolean - action showWindow value\n 7: Boolean - action hideOnUse value\n 8: String - action shortcut name or \"\"\n 9: Boolean - action menu visibility (on first scroll or action press the menu is still invisible, so no action is performed, only menu is shown)\n 10: String - EH event name",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inGameUISetEventHandler",
              "snippet": "inGameUISetEventHandler ${1:[${2:handlerName}, ${3:function}]}$0"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns base entry of config entry.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inheritsFrom",
              "snippet": "inheritsFrom ${1:config}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "initAmbientLife",
              "description": "Initialize the ambient life.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/initAmbientLife"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether position is inside given polygon",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inPolygon",
              "snippet": "inPolygon ${2:polygon}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the state of input devices mapped to given input action.\n\nFor Arma 3 inputActions see: inputAction/actions.\n\nFor Arma 3 inputActions bindings see: inputAction/actions/bindings.\n\nFor earlier Arma editions  see Category:Key Actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inputAction",
              "snippet": "inputAction ${1:name}$0"
            },
            {
              "leftLabel": "(Boolean) = pos ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if all given units are able to fire at given position with given magazineType.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/inRangeOfArtillery",
              "snippet": "inRangeOfArtillery ${2:[${3:[${4:unit}]}, ${5:magazineType}]}$0"
            },
            {
              "leftLabel": "(String) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/insertEditorObject",
              "snippet": "insertEditorObject ${2:[type,value,[name1,value1,...],subtype class]}$0"
            },
            {
              "leftLabel": "(Array) = [object, lodName] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. lodName could be one of the following: \n \"FIRE\"\n \"VIEW\"\n \"GEOM\"\n \"IFIRE\" - (\"I\" stands for Indirect, almost the same as FIRE)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/intersect",
              "snippet": "intersect ${4:[${5:begPos}, ${6:endPos}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "is3DEN",
              "description": "Returns true if the Eden Editor is currently being used. true when inside editor environment, false during preview. (see also is3DENMultiplayer)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/is3DEN"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "is3DENMultiplayer",
              "description": "Returns true if the Eden Editor is in multiplayer mode. Returns true in the following cases:\n Multiplayer Preview launched directly from 3DEN - true in preview and only for the creator\n MP mission is chosen for editing when creating a server: Multiplayer - Server Browser - Host Server. When 3D EDITOR button is clicked for selected mission and 3DEN is launched, command returns true within the editor environment. (see also is3DEN)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/is3DENMultiplayer"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAbleToBreathe",
              "snippet": "isAbleToBreathe ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if team member is an agent.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAgent",
              "snippet": "isAgent ${1:teamMember}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if config entry represents array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isArray",
              "snippet": "isArray ${1:config}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutoHoverOn",
              "snippet": "isAutoHoverOn ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if UAV is in autonomous mode.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutonomous",
              "snippet": "isAutonomous ${1:uav}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isAutotest",
              "description": "Returns true if game was started with autotest parameter",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isAutotest"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns whether the unit is bleeding.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isBleeding",
              "snippet": "isBleeding ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns whether the unit is burning.\nThis returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isBurning",
              "snippet": "isBurning ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if config entry represents config class.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isClass",
              "snippet": "isClass ${1:config}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if vehicle collision lights are on otherwise false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isCollisionLightOn",
              "snippet": "isCollisionLightOn ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if copilots actions are enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isCopilotEnabled",
              "snippet": "isCopilotEnabled ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isDedicated",
              "description": "Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDedicated"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the DLC is marked as available. (Steam)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isDLCAvailable",
              "snippet": "isDLCAvailable ${1:appid}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if engine is on, false if it is off.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEngineOn",
              "snippet": "isEngineOn ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = val1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.\nSome differences between isEqualTo and ==:\n It performs case sensitive comparison on Strings\n It doesn't throw error when comparing different types, i.e. (\"eleven\" isEqualTo 11)\n It can compare Arrays, Scripts and Booleans (alive player isEqualTo true)\n It can compare non-existent game objects (grpNull isEqualTo grpNull)\n It can compare Namespaces (As of Arma 3 v1.47)\n It is slightly faster than ==, especially when comparing Strings",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTo",
              "snippet": "isEqualTo ${2:val2}$0"
            },
            {
              "leftLabel": "(Boolean) = val1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compares 2 values by their type. A much faster alternative to typeName a == typeName b.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualType",
              "snippet": "isEqualType ${2:val2}$0"
            },
            {
              "leftLabel": "(Boolean) = arr ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compares types of all elements of an array to the type of a single value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeAll",
              "snippet": "isEqualTypeAll ${2:val}$0"
            },
            {
              "leftLabel": "(Boolean) = val ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compares type of given value to every type in the given array and if match is found, true is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeAny",
              "snippet": "isEqualTypeAny ${2:types}$0"
            },
            {
              "leftLabel": "(Boolean) = arr1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compares types of all elements of one array to types of all elements of another array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeArray",
              "snippet": "isEqualTypeArray ${2:arr2}$0"
            },
            {
              "leftLabel": "(Boolean) = input ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:\n Input can be anything but will be expected to be an Array, otherwise false is returned\n Input array can be longer but not shorter than template array, will return false if shorter\n nil could be used in template type array as a wild card to allow any type match",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isEqualTypeParams",
              "snippet": "isEqualTypeParams ${2:template}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isFilePatchingEnabled",
              "description": "Returns true if file patching is enabled otherwise false",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFilePatchingEnabled"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if there is a linked and enabled flashlight on a given weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFlashlightOn",
              "snippet": "isFlashlightOn ${2:weapon}$0"
            },
            {
              "leftLabel": "(Array, Position) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks given position against given filter params. Filter includes checks for:\n If there are any objects closer than given distance from given position (in 2D)\n If the area around position is flat enough to match given gradient\n If the given position is over water or land\n If the given position is over shore line\nThe gradient seems to correlate with general hill steepness: 0.1 (10%) ~6o, 0.5 (50%) ~27o, 1.0 (100%) ~45o, etc.There are also some oddities about this command that need to be noted:\n Objects accounted for proximity check seem to be static objects. Nearby vehicles and units do not seem to affect the output\n Given position will be magically transferred into given position + getTerrainHeightASL value\n The second element must be -1 (<= 0 really) at all times, otherwise command becomes unusable\n The command might be a bit heavy on computations so avoid frequent and large area checks\nSee also: BIS_fnc_findSafePos",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFlatEmpty",
              "snippet": "isFlatEmpty ${2:[${3:minDistance}, ${4:mode}, ${5:maxGradient}, ${6:maxGradientRadius}, ${7:overLandOrWater}, ${8:shoreLine}, ${9:ignoreObject}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if player is forced to walk with forceWalk.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isForcedWalk",
              "snippet": "isForcedWalk ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the specified unit is subgroup leader.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isFormationLeader",
              "snippet": "isFormationLeader ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isGroupDeletedWhenEmpty",
              "snippet": "isGroupDeletedWhenEmpty ${1:group}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return whether the person is hidden (reached the hiding position). For command that tests general visibility of an object use isObjectHidden",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isHidden",
              "snippet": "isHidden ${1:person}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return whether the vehicle has set the hideBehindScripted to true or not. \n\n\n\n\n \n\n  This command is neither in Arma 3 nor in Arma 2",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isHideBehindScripted",
              "snippet": "isHideBehindScripted ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if unit or vehicle is queued for disposal after death.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isInRemainsCollector",
              "snippet": "isInRemainsCollector ${1:remain}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isInstructorFigureEnabled",
              "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isInstructorFigureEnabled"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if there is a linked and enabled IR on the given weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isIRLaserOn",
              "snippet": "isIRLaserOn ${2:weapon}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the given key is active in the current user profile.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKeyActive",
              "snippet": "isKeyActive ${1:keyName}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the object is (a subtype) of the given type. While main syntax and alt syntax support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alt syntax 2 allows to specify any config, including mission config.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "snippet": "isKindOf ${2:typeName}$0"
            },
            {
              "leftLabel": "(Boolean) = typeName1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the object is (a subtype) of the given type. While main syntax and alt syntax support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alt syntax 2 allows to specify any config, including mission config.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "snippet": "isKindOf ${2:typeName2}$0"
            },
            {
              "leftLabel": "(Boolean) = typeName1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the object is (a subtype) of the given type. While main syntax and alt syntax support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alt syntax 2 allows to specify any config, including mission config.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isKindOf",
              "snippet": "isKindOf [${2:typeName2}, ${3:targetConfig}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if vehicle headlights are on otherwise false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLightOn",
              "snippet": "isLightOn ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given string name is localized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isLocalized",
              "snippet": "isLocalized ${1:stringName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with action \"ManualFire\" and \"ManualFireCancel\". Always returns false for a soldier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isManualFire",
              "snippet": "isManualFire ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the object is marked for weapons collection.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMarkedForCollection",
              "snippet": "isMarkedForCollection ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isMultiplayer",
              "description": "Return true if multiPlayer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMultiplayer"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined.\nThe command returns true if the variable or the expression result is undefined (i.e. the expression result is Void), and false in all other cases.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNil",
              "snippet": "isNil ${1:variableName}$0"
            },
            {
              "leftLabel": "(Boolean, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined.\nThe command returns true if the variable or the expression result is undefined (i.e. the expression result is Void), and false in all other cases.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNil",
              "snippet": "isNil ${1:code}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether the tested item is Null.\nWhich null type the item has to be equal to depends on the type of game entity tested:\n Objects -> objNull\n Controls -> controlNull\n Displays -> displayNull\n Groups -> grpNull\n Locations -> locationNull (since ARMA 2)\n Tasks -> taskNull (since ARMA 2)\n Scripts -> scriptNull (since Arma 3 1.29.127075)\n Configs -> configNull (since Arma 3 1.53.133130)\n\nNote: A test via == does not work, because, for example, objNull is not equal to anything, not even to itself. Use isEqualTo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNull",
              "snippet": "isNull ${1:entity}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if config entry represents number.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isNumber",
              "snippet": "isNumber ${1:config}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks visibility of a given object on the local machine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isObjectHidden",
              "snippet": "isObjectHidden ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if RTD model is loaded",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isObjectRTD",
              "snippet": "isObjectRTD ${1:helicopter}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given position is on road. Same as roadAt, only return is boolean instead of road object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isOnRoad",
              "snippet": "isOnRoad ${1:position}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isPiPEnabled",
              "description": "Returns whether Picture-In-Picture video option is enabled or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPiPEnabled"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isPipEnabled",
              "description": "Returns true if Picture in Picture (Render to Texture) is enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPipEnabled"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if given person is player. Returns true for headless clients as well.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isPlayer",
              "snippet": "isPlayer ${1:person}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the mission editor is operating in real time mode. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRealTime",
              "snippet": "isRealTime ${1:map}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isRemoteExecuted",
              "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRemoteExecuted"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isRemoteExecutedJIP",
              "description": "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of isRemoteExecuted:\n Normal remote execution: \n isRemoteExecuted - true\n isRemoteExecutedJIP - false\n Remote execution from JIP queue: \n isRemoteExecuted - true\n isRemoteExecutedJIP - true\nIn SP always returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isRemoteExecutedJIP"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isServer",
              "description": "Returns true if the machine (executing the command) is the server in a multiplayer game or is running single player. isServer will return true for both, dedicated server and player hosted. Dedicated server could be detected with isDedicated command. Hosted by player server can be detected by presense of UI: isServer && hasInterface",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isServer"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the editor is set to draw 3D icons.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isShowing3DIcons",
              "snippet": "isShowing3DIcons ${1:map}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if given object is simple object",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSimpleObject",
              "snippet": "isSimpleObject ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if player is allowed to sprint",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSprintAllowed",
              "snippet": "isSprintAllowed ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if stamina depletion is enabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isStaminaEnabled",
              "snippet": "isStaminaEnabled ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isSteamMission",
              "description": "Returns true if the current mission is a Steam Workshop mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isSteamMission"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isStreamFriendlyUIEnabled",
              "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isStreamFriendlyUIEnabled"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if config entry represents text.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isText",
              "snippet": "isText ${1:config}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if object is touching the ground.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTouchingGround",
              "snippet": "isTouchingGround ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTurnedOut",
              "snippet": "isTurnedOut ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isTutHintsEnabled",
              "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isTutHintsEnabled"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if UAV is connectable by AV terminal(s).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUAVConnectable",
              "snippet": "isUAVConnectable ${2:[${3:uav}, ${4:checkAllItems}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if UAV is connected to some terminal.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUAVConnected",
              "snippet": "isUAVConnected ${1:uav}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isUIContext",
              "description": "Returns true if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUIContext"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether given uniform can be dressed by target soldier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isUniformAllowed",
              "snippet": "isUniformAllowed ${2:type}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return transporting vehicle if vehicle is loaded in one.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleCargo",
              "snippet": "isVehicleCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if vehicle has active sensors on",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleRadarOn",
              "snippet": "isVehicleRadarOn ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleSensorEnabled",
              "snippet": "isVehicleSensorEnabled ${2:componentName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "vehicleClass",
              "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isVehicleSensorEnabled"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if walk is toggled (W+S in Arma 3).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWalking",
              "snippet": "isWalking ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if weapon is currently deployed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWeaponDeployed",
              "snippet": "isWeaponDeployed ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if weapon is currently rested.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isWeaponRested",
              "snippet": "isWeaponRested ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with items from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/itemCargo",
              "snippet": "itemCargo ${1:box}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of names of all special items of a vehicle or a soldier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/items",
              "snippet": "items ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns combined array including all unit's items and all unit's magazines. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine as well as assignedItems are excluded.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/itemsWithMagazines",
              "snippet": "itemsWithMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "unitArray ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Join all units in the array to given group. \n\nMaximum number of group members is:\n OFP: 12\n Arma:\u00a0?\n Arma 2:\u00a0?\n Arma 3: \"unlimited\" (3000+)\n VBS 2: \"unlimited\" (260+)\n\nTo have a group member leave a group, join him with the grpNull group (e.g. [guy1] join grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/join",
              "snippet": "join ${2:group}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Joins the unit to the given group, if position id is available, this one is used.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinAs",
              "snippet": "joinAs ${2:[${3:group}, ${4:id}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinAsSilent",
              "snippet": "joinAsSilent ${2:[${3:group}, ${4:id}]}$0"
            },
            {
              "leftLabel": "unitArray ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e.g. [guy1] joinSilent grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinSilent",
              "snippet": "joinSilent ${2:group}$0"
            },
            {
              "leftLabel": "(String) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/joinString",
              "snippet": "joinString ${2:separator}$0"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Register knowledge base database to given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddDatabase",
              "snippet": "kbAddDatabase ${2:filename}$0"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Register target list knowledge base database to given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddDatabaseTargets",
              "snippet": "kbAddDatabaseTargets ${2:filename}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Register conversation topic to given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbAddTopic",
              "snippet": "kbAddTopic ${2:[${3:TopicName}, filename.${4:bikb}, filename.${5:fsm}, ${6:event_handler}]}$0"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if conversation topic was registered to given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbHasTopic",
              "snippet": "kbHasTopic ${2:TopicName}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Pass a non-verbal communication to the receiver.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbReact",
              "snippet": "kbReact ${2:[receiver,topic,sentenceID,[argumentName,argumentValue,argumentText,argumentSpeech],...]}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unregister conversation topic from given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbRemoveTopic",
              "snippet": "kbRemoveTopic ${2:TopicName}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Make the person tell to the receiver the sentence.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbTell",
              "snippet": "kbTell ${2:[${3:receiver}, ${4:TopicName}, ${5:SentenceClass}, [${6:argumentName}, ${7:argumentValue}, ${8:argumentText}, ${9:argumentSpeech}], ...,forceRadio]}$0"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if given item was said by person to someone.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/kbWasSaid",
              "snippet": "kbWasSaid ${2:[${3:receiver}, ${4:topic}, ${5:sentenceID}, ${6:maxAge}]}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/keyImage",
              "snippet": "keyImage ${1:dikCode}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/keyName",
              "snippet": "keyName ${1:dikCode}$0"
            },
            {
              "leftLabel": "(Number) = who ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/knowsAbout",
              "snippet": "knowsAbout ${2:target}$0"
            },
            {
              "leftLabel": "(Number) = side ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/knowsAbout",
              "snippet": "knowsAbout ${2:target}$0"
            },
            {
              "leftLabel": "(Array) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns unit's knowledge about target. The returned array includes information whether the target is \n known by group\n known by the unit\n last time the target was seen by the unit\n last time the target endangered the unit\n target side\n position error\n target position",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetKnowledge",
              "snippet": "targetKnowledge ${2:target}$0"
            },
            {
              "leftLabel": "helicopter ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force helicopter landing. Landing mode may be: \n\n \"LAND\" (complete stop)\n \"GET IN\" (hovering very low, for another unit to get in)\n \"GET OUT\" (hovering low,for another unit to get out)\n \"NONE\" (cancel a landing) Available since ArmA 2 57463 build.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/land",
              "snippet": "land ${2:mode}$0"
            },
            {
              "leftLabel": "plane ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. Since Arma 3 v1.68 it is possible to order a helicopter to land on designated helipad.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landAt",
              "snippet": "landAt ${2:id}$0"
            },
            {
              "leftLabel": "heli ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. Since Arma 3 v1.68 it is possible to order a helicopter to land on designated helipad.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landAt",
              "snippet": "landAt ${1:heli}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the result of helicopter landing position searching (performed, after land command). The value can be \"Found\" (position found),\"NotFound\" (position not found), \"NotReady\" (position searching is,still in progress) or empty string when wrong argument given.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/landResult",
              "snippet": "landResult ${1:helicopter}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "language",
              "description": "Returns current game language.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/language"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns laser target object created by given unit (gunner in vehicle or on foot) when using \"Laserdesignator\" or another laser targeting device. Laser target object is global and can be retrieved from any PC.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/laserTarget",
              "snippet": "laserTarget ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.\n\nIt returns the index of the newly added item.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbAdd",
              "snippet": "lbAdd ${1:[${2:idc}, ${3:text}]}$0"
            },
            {
              "leftLabel": "(Number) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.\n\nIt returns the index of the newly added item.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbAdd",
              "snippet": "lbAdd ${2:text}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbClear",
              "snippet": "lbClear ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbClear",
              "snippet": "lbClear ${1:control}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColor",
              "snippet": "lbColor ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "(Array, Array) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbColor",
              "snippet": "lbColor ${2:index}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. For listbox  LB_MULTI (multi-selection) use lbSelection.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbCurSel",
              "snippet": "lbCurSel ${1:idc}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. For listbox  LB_MULTI (multi-selection) use lbSelection.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbCurSel",
              "snippet": "lbCurSel ${1:control}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbData",
              "snippet": "lbData ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbData",
              "snippet": "lbData ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbDelete",
              "snippet": "lbDelete ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbDelete",
              "snippet": "lbDelete ${2:index}$0"
            },
            {
              "leftLabel": "(Boolean) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether given row of the given listbox is selected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbIsSelected",
              "snippet": "lbIsSelected ${2:index}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPicture",
              "snippet": "lbPicture ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbPicture",
              "snippet": "lbPicture ${2:index}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Array of selected rows indices in the given listbox of style LB_MULTI (multi-selection). For single selection listbox use lbCurSel instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSelection",
              "snippet": "lbSelection ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColor",
              "snippet": "lbSetColor ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetColor",
              "snippet": "lbSetColor ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\nTo deselect all, use -1: _ctrl lbSetCurSel -1; For listbox of style LB_MULTI use lbSetSelected instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetCurSel",
              "snippet": "lbSetCurSel ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\nTo deselect all, use -1: _ctrl lbSetCurSel -1; For listbox of style LB_MULTI use lbSetSelected instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetCurSel",
              "snippet": "lbSetCurSel ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetData",
              "snippet": "lbSetData ${1:[${2:idc}, ${3:index}, ${4:data}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetData",
              "snippet": "lbSetData ${2:[${3:index}, ${4:data}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureColor as default [0,0,0,0] color makes picture invisible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPicture",
              "snippet": "lbSetPicture ${1:[${2:idc}, ${3:index}, ${4:name}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureColor as default [0,0,0,0] color makes picture invisible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPicture",
              "snippet": "lbSetPicture ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColor",
              "snippet": "lbSetPictureColor [${2:idc}, ${3:index}, ${4:color}]$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColor",
              "snippet": "lbSetPictureColor [${3:index}, ${4:color}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorDisabled",
              "snippet": "lbSetPictureColorDisabled ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorDisabled",
              "snippet": "lbSetPictureColorDisabled ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorSelected",
              "snippet": "lbSetPictureColorSelected ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureColorSelected",
              "snippet": "lbSetPictureColorSelected ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureRightColor as default [0,0,0,0] color makes picture invisible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRight",
              "snippet": "lbSetPictureRight ${1:[${2:idc}, ${3:index}, ${4:name}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the second (right aligned) picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).\nIn Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureRightColor as default [0,0,0,0] color makes picture invisible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRight",
              "snippet": "lbSetPictureRight ${2:[${3:index}, ${4:name}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColor",
              "snippet": "lbSetPictureRightColor [${2:idc}, ${3:index}, ${4:color}]$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the second (right aligned) picture of the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColor",
              "snippet": "lbSetPictureRightColor [${3:index}, ${4:color}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorDisabled",
              "snippet": "lbSetPictureRightColorDisabled ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the disabled color of second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorDisabled",
              "snippet": "lbSetPictureRightColorDisabled ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorSelected",
              "snippet": "lbSetPictureRightColorSelected ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the selected color of the second (right aligned) picture of the item with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetPictureRightColorSelected",
              "snippet": "lbSetPictureRightColorSelected ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColor",
              "snippet": "lbSetSelectColor ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColor",
              "snippet": "lbSetSelectColor ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColorRight",
              "snippet": "lbSetSelectColorRight ${1:[${2:idc}, ${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelectColorRight",
              "snippet": "lbSetSelectColorRight ${2:[${3:index}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the selection state of the given row of the given listbox of style LB_MULTI. For single selection listbox use lbSetCurSel instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetSelected",
              "snippet": "lbSetSelected ${2:[${3:index}, ${4:selected}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetTooltip",
              "snippet": "lbSetTooltip ${1:[${2:idc}, ${3:index}, ${4:tooltip}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetTooltip",
              "snippet": "lbSetTooltip ${2:[${3:index}, ${4:tooltip}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetValue",
              "snippet": "lbSetValue ${1:[${2:idc}, ${3:index}, ${4:value}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSetValue",
              "snippet": "lbSetValue ${2:[${3:index}, ${4:value}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSize",
              "snippet": "lbSize ${1:idc}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSize",
              "snippet": "lbSize ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts listbox entries alphabetically ascending by their lbText",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "snippet": "lbSort ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts listbox entries alphabetically ascending by their lbText",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "snippet": "lbSort [${1:control}, ${2:sortOrder}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts listbox entries alphabetically ascending by their lbText",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "snippet": "lbSort ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts listbox entries alphabetically ascending by their lbText",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSort",
              "snippet": "lbSort [${1:idc}, ${2:sortOrder}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSortByValue",
              "snippet": "lbSortByValue ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbSortByValue",
              "snippet": "lbSortByValue ${1:idc}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbText",
              "snippet": "lbText ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbText",
              "snippet": "lbText ${2:index}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbValue",
              "snippet": "lbValue ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "(Number) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lbValue",
              "snippet": "lbValue ${2:index}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the group leader for the given unit or group. For dead units, objNull is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leader",
              "snippet": "leader ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardDeInit",
              "snippet": "leaderboardDeInit ${1:boardName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardGetRows",
              "snippet": "leaderboardGetRows ${1:boardName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardInit",
              "snippet": "leaderboardInit ${1:boardName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Requests given leaderboard to download friends rows from the given leaderboard",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardRequestRowsFriends",
              "snippet": "leaderboardRequestRowsFriends ${1:boardName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Starts async. operation to upload score to board with given name, value always overwrite the current value in the board. The details array is optional. The board has to be initialized before the call.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardsRequestUploadScore",
              "snippet": "leaderboardsRequestUploadScore [${1:boardName}, ${2:score}, [${3:details}]]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Starts async. operation to upload score to board with given name, value is only stored to board if it's better than one already in the board. The details array is optional. The board has to be initialized before the call.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardsRequestUploadScoreKeepBest",
              "snippet": "leaderboardsRequestUploadScoreKeepBest [${1:boardName}, ${2:score}, [${3:details}]]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "returns state of the board with given name. 0: Busy (async. operation in progress); 1: Async. operation ended with success; 2: Async. operation ended with error; 3: Invalid board (bad board name, not initialized etc.).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaderboardState",
              "snippet": "leaderboardState ${1:boardname}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.\nIn short the command could be hypothetically presented as:\nleaveVehicle = un-addVehicle + unassignVehicle forEach crew \nHowever, to make it more reliable, it is best to move unit out of the vehicle manually with moveOut command and force unassign the vehicle with unassignVehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/leaveVehicle",
              "snippet": "leaveVehicle ${2:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "libraryCredits",
              "description": "Returns the credits for the libraries used by the game.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/libraryCredits"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "libraryDisclaimers",
              "description": "Returns the library disclaimers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/libraryDisclaimers"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the life state of the given unit. Can be one of:\n\n(Pre-Arma 3)\n\"ALIVE\"\n\"DEAD\"\n\"DEAD-RESPAWN\"\n\"DEAD-SWITCHING\"\n\"ASLEEP\"\n\"UNCONSCIOUS\"\n\n(Arma 3)\n\"HEALTHY\"\n\"DEAD\"\n\"DEAD-RESPAWN\"\n\"DEAD-SWITCHING\"\n\"INCAPACITATED\"\n\"INJURED\"\n\nIn Arma 3 lifeState seems to change to \"INJURED\" when damage aliveUnit >= 0.1 (0.1 seems to be the value defined in config under \"InjuredTreshold\").",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lifeState",
              "snippet": "lifeState ${1:unit}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach light to given object at given position on object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightAttachObject",
              "snippet": "lightAttachObject ${2:[${3:object}, ${4:position}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Detach light from object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightDetachObject",
              "snippet": "lightDetachObject ${1:light}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if lampost is on (shining). For working with CfgNonAIVehicles class \"StreetLamp\" only. Possible values are: \n \"ON\"\n \"OFF\"\n \"AUTO\" (auto is only on during the night).\n \"ERROR\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightIsOn",
              "snippet": "lightIsOn ${1:lamppost}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "lightnings",
              "description": "Return the current lightnings value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lightnings"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Limit speed of given vehicle or person to given value (in km/h).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/limitSpeed",
              "snippet": "limitSpeed ${2:speed}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what. Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be linearConversion [0,1,0.55,0,100]; //55 but if given value is 1.1linearConversion [0,1,1.1,0,100,false]; //110 or if clipping is true  linearConversion [0,1,1.1,0,100,true]; //100",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/linearConversion",
              "snippet": "linearConversion ${1:[${2:minFrom}, ${3:maxFrom}, ${4:value}, ${5:minTo}, ${6:maxTo}, ${7:clip}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "endl",
              "description": "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (line end). The command returns \"\\r\\n\", which contains control characters rather than printable characters:  \n hint str count \"\\r\\n\"; // 4\n hint str count endl; // 2\nThe line break works for diag_log and ctrlSetText. It doesn't work with the hint because hint interprets printable \"\\n\" as line break instead. Alternatively one can use toString command to get other characters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/endl"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "lineBreak",
              "description": "Creates a structured text containing a line break.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineBreak"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.\n\nNOTE: Doesn't work under water. Max harcoded distance is 1000m.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersects",
              "snippet": "lineIntersects ${1:[${2:begPos}, ${3:endPos}, ${4:objIgnore1}, ${5:objIgnore2}]}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list of objects intersected by given line from begPos to endPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsObjs",
              "snippet": "lineIntersectsObjs [${1:begPos}, ${2:endPos}, ${3:withObj}, ${4:ignoreObj}, ${5:sortByDistance}, ${6:flags}]$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.69.140138, this could be tweaked with an optional param. NOTE: if begPosASL is under the ground and endPosASL is above it, the command will only return intersection with the ground, this is engine limitation and none of the intersectXXX commands will work when initiated from under the ground.\nSince Arma v1.51.131920 it is possible to indicate primary and secondary LOD to look for intersection. Available options are:\n \"FIRE\"\n \"VIEW\"\n \"GEOM\"\n \"IFIRE\" - (\"I\" stands for Indirect, almost the same as FIRE)\n \"NONE\"\n\nDefault LODs are \"VIEW\" and \"FIRE\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsSurfaces",
              "snippet": "lineIntersectsSurfaces [${2:begPosASL}, ${3:endPosASL}, ${4:ignoreObj1}, ${5:ignoreObj2}, ${6:sortMode}, ${7:maxResults}, ${8:LOD1}, ${9:LOD2}, ${10:returnUnique}]$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true. NOTE: Doesn't work under water. Max hardcoded distance is 1000m.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lineIntersectsWith",
              "snippet": "lineIntersectsWith ${1:[${2:begPos}, ${3:endPos}, ${4:objIgnore1}, ${5:objIgnore2}, ${6:sortByDistance}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/linkItem",
              "snippet": "linkItem ${2:item}$0"
            },
            {
              "leftLabel": "(Array, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "List of units that would activate given Trigger.\n\nIt returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started.Since this is just a reference this means that the value in your local variable will change as the content of the trigger area changes. To permanently copy the returned list to a different variable, use _mylist = +(list triggerOne).\n\nThe second example can be used inside the trigger (in that case, no need to name your trigger).\n\nThe list returned for trigger of type \"Not present\" is the same as that returned for type \"present\". \n\nNOTE: While the command can query any trigger, local or remote, the result will be only for the trigger condition set on the local client. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/list",
              "snippet": "list ${1:trigger}$0"
            },
            {
              "leftLabel": "(Array) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the list of all objects of given type.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listObjects",
              "snippet": "listObjects ${2:type}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return list of datalink targets and time for which they will be/were known",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listRemoteTargets",
              "snippet": "listRemoteTargets ${1:side}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of the sensors in the given vehicle's config (configfile >> CfgVehicles >> vehicle >> Components >> SensorsManagerComponent >> Components).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/listVehicleSensors",
              "snippet": "listVehicleSensors ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Natural logarithm of x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ln",
              "snippet": "ln ${1:x}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds list of rows of strings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddArray",
              "snippet": "lnbAddArray ${1:[${2:idc}, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]}$0"
            },
            {
              "leftLabel": "(Number) = _ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an column at given position. It returns the index of the newly added column.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddColumn",
              "snippet": "lnbAddColumn ${2:position}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an column at given position. It returns the index of the newly added column.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddColumn",
              "snippet": "lnbAddColumn ${1:[idc(Number) or Control,position(Number)]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a row of strings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddRow",
              "snippet": "lnbAddRow ${1:[${2:IDC},${3:[ String,String... ]}]}$0"
            },
            {
              "leftLabel": "(Number) = _ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds a row of strings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbAddRow",
              "snippet": "lnbAddRow ${2:[ String,String... ]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clears all items in the given listbox or combobox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbClear",
              "snippet": "lnbClear ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Clears all items in the given listbox or combobox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbClear",
              "snippet": "lnbClear ${1:ctrl}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbColor",
              "snippet": "lnbColor [${2:idc}, ${3:[${4:row}, ${5:column}]}]$0"
            },
            {
              "leftLabel": "(Array) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbColor",
              "snippet": "lnbColor ${2:[${3:row}, ${4:column}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the index of the selected row id 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbCurSelRow",
              "snippet": "lnbCurSelRow ${1:idc}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the index of the selected row id 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbCurSelRow",
              "snippet": "lnbCurSelRow ${1:ctrl}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbData",
              "snippet": "lnbData ${1:[${2:idc}, ${3:[${4:row}, ${5:column}]}]}$0"
            },
            {
              "leftLabel": "(String) = ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbData",
              "snippet": "lnbData ${2:[${3:row}, ${4:column}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes column with given index from ListNBox control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteColumn",
              "snippet": "lnbDeleteColumn ${1:[${2:idc},${3:index}]}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes column with given index from ListNBox control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteColumn",
              "snippet": "lnbDeleteColumn ${2:index}$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes row with the given index from the given listbox or combobox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbDeleteRow",
              "snippet": "lnbDeleteRow ${2:row}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbGetColumnsPosition",
              "snippet": "lnbGetColumnsPosition ${1:_ctrl}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the picture name or path of the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbPicture",
              "snippet": "lnbPicture ${1:[${2:IDC}, [${3:row}, ${4:column}]]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the picture name or path of the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbPicture",
              "snippet": "lnbPicture ${2:[${3:row}, ${4:column}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColor",
              "snippet": "lnbSetColor ${1:[idc,[row,column],color]}$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColor",
              "snippet": "lnbSetColor ${2:[ [row,column],color]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColumnsPos",
              "snippet": "lnbSetColumnsPos ${1:[${2:idc}, ${3:positions}]}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetColumnsPos",
              "snippet": "lnbSetColumnsPos ${2:positions}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the row with the given index of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetCurSelRow",
              "snippet": "lnbSetCurSelRow ${1:[${2:idc}, ${3:index}]}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the row with the given index of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetCurSelRow",
              "snippet": "lnbSetCurSelRow ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetData",
              "snippet": "lnbSetData ${1:[${2:idc}, ${3:[${4:row}, ${5:column}]}, ${6:data}]}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetData",
              "snippet": "lnbSetData ${1:[${3:[${4:row}, ${5:column}]}, ${6:data}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the picture in the item with the given position of the 2D listbox.\nName is the picture name.\nThe picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPicture",
              "snippet": "lnbSetPicture ${1:[${2:IDC}, [${3:Row}, ${4:Column}], ${5:PicturePathOrPictureName}]}$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the picture in the item with the given position of the 2D listbox.\nName is the picture name.\nThe picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetPicture",
              "snippet": "lnbSetPicture [ [${3:Row}(Number), ${4:Column}(Number)], ${5:PicturePathOrPictureName}(String)]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetText",
              "snippet": "lnbSetText ${1:[idc,[row,column],data]}$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetText",
              "snippet": "lnbSetText ${2:[ [row,column],data]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional integer value in the item with the position index of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetValue",
              "snippet": "lnbSetValue ${1:[${2:idc}, ${3:[${4:row}, ${5:column}]}, ${6:value}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the additional integer value in the item with the position index of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSetValue",
              "snippet": "lnbSetValue ${2:[${3:[${4:row}, ${5:column}]}, ${6:value}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns size of 2D listbox or combobox as [rows, columns].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSize",
              "snippet": "lnbSize ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSort",
              "snippet": "lnbSort ${1:[${2:idc}, ${3:column}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSort",
              "snippet": "lnbSort ${1:[${2:column}, ${3:reversed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSortByValue",
              "snippet": "lnbSortByValue ${1:[${2:idc}, ${3:column}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbSortByValue",
              "snippet": "lnbSortByValue ${1:[${2:column}, ${3:reversed}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the shown text in the item with the given position of the given 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbText",
              "snippet": "lnbText ${2:[row,column]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional integer value in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbValue",
              "snippet": "lnbValue ${1:[${2:idc},${3:[${4:row}, ${5:column}]}]}$0"
            },
            {
              "leftLabel": "(Number) = ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the additional integer value in the item with the given position of the 2D listbox.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lnbValue",
              "snippet": "lnbValue ${2:[${3:row}, ${4:column}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula:\n_loadPlayer = loadAbs player / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/load",
              "snippet": "load ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadAbs",
              "snippet": "loadAbs ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current sum of mass from items stored in a backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadBackpack",
              "snippet": "loadBackpack ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return content of given filename.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadFile",
              "snippet": "loadFile ${1:filename}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "loadGame",
              "description": "Load a game from the autosave. If failed, restart the mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadGame"
            },
            {
              "leftLabel": "(Boolean) = person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Loads person's identity from Objects.sav file in campaign directory (from entry name).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadIdentity",
              "snippet": "loadIdentity ${2:name}$0"
            },
            {
              "leftLabel": "transport ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime.\n\nThe turret has to be manned. One can also change the magazine if its respective weapon is not selected.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadMagazine",
              "snippet": "loadMagazine [${2:turretPath}, ${3:weaponName}, ${4:magazineName}]$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates the load overlay dialog for the specified type of overlay.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadOverlay",
              "snippet": "loadOverlay ${2:config}$0"
            },
            {
              "leftLabel": "(Boolean) = obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Loads object's properties from Objects.sav file in campaign directory (from entry name).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadStatus",
              "snippet": "loadStatus ${2:entryName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current sum of mass from items stored in a uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadUniform",
              "snippet": "loadUniform ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current sum of mass from items stored in a vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/loadVest",
              "snippet": "loadVest ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts).\n\nThis can be used when some activation fields or scripts need to be performed only on one computer. In Single player all objects are local. \n\nNote1: Map created objects (those placed in Visitor) are local everywhere.\nNote2: Since Arma 3 v1.53.132932 keyword local has been renamed to private for consistency and to avoid any confusion. However, this just makes the third example obsolete. It's core functionality still remains.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/local",
              "snippet": "local ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/localize",
              "snippet": "localize ${1:stringName}$0"
            },
            {
              "leftLabel": "(Location) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "locationNull",
              "description": "A non-existing Location. To compare non-existent locations use isNull or isEqualTo:\n locationNull == locationNull; // false\n isNull locationNull; // true\n locationNull isEqualTo locationNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locationNull"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of a location. If the location is attached to an object, that object's position is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locationPosition",
              "snippet": "locationPosition ${1:location}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lock",
              "snippet": "lock ${2:locked}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lock",
              "snippet": "lock ${2:lockstate}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCameraTo",
              "snippet": "lockCameraTo ${2:[${3:target}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCargo",
              "snippet": "lockCargo ${2:lock}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockCargo",
              "snippet": "lockCargo ${2:[${3:index}, ${4:lock}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock the driver position of the vehicle. This command must be executed where vehicle is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockDriver",
              "snippet": "lockDriver ${2:lock}$0"
            },
            {
              "leftLabel": "(Number, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/locked",
              "snippet": "locked ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether cargo position of the vehicle is locked.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedCargo",
              "snippet": "lockedCargo ${2:cargoIndex}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether driver position of the vehicle turret is locked.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedDriver",
              "snippet": "lockedDriver ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether gunner position of the vehicle turret is locked.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockedTurret",
              "snippet": "lockedTurret ${2:turretPath}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Locks the identity of a person. This will disable default identity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockIdentity",
              "snippet": "lockIdentity ${1:unit}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockTurret",
              "snippet": "lockTurret ${2:[turret path,lock]}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lockWP",
              "snippet": "lockWP ${2:lock}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Base-10 logarithm of x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/log",
              "snippet": "log ${1:x}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "logEntities",
              "description": "Creates a log file containing the list of all game entities in scene. \nFile is created in the same directory as .rpt file. \nSpecial: BattlEye's RCON variant of this command is #logEntities (see also Multiplayer_Server_Commands)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logEntities"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Registers new log file recording a network traffic and returns handle of the log.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logNetwork",
              "snippet": "logNetwork ${1:logFile}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Terminates a network log file started with logNetwork with the given handle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/logNetworkTerminate",
              "snippet": "logNetworkTerminate ${1:handle}$0"
            },
            {
              "leftLabel": "unit(s) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Control what the unit(s) is/are looking at (target or position).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lookAt",
              "snippet": "lookAt ${2:position}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Center the map on,and point the camera at,the position.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/lookAtPos",
              "snippet": "lookAtPos ${2:position}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with magazines from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazineCargo",
              "snippet": "magazineCargo ${1:box}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of type names of all vehicle's magazines.\n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazines",
              "snippet": "magazines ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array, String, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAllTurrets",
              "snippet": "magazinesAllTurrets ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.\n\nOutput format:\n\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n\n0: Magazine class name\n\n1: Magazine current ammo count",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmo",
              "snippet": "magazinesAmmo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmoCargo",
              "snippet": "magazinesAmmoCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of arrays of all vehicle's magazines with extended information about them.\n\n\nOutput format:\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n0: Magazine class name\n1: Magazine current ammo count\n2: Magazine state (true - loaded, false - not loaded)\n3: Magazine type (-1 - n/a, 0 - grenade, 1 - primary weapon mag, 2 - handgun mag, 4 - secondary weapon mag, 65536 - vehicle mag)\n4: Magazine location (\"Vest\", \"Uniform\", \"Backpack\", \"\") or corresponding currentMuzzle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesAmmoFull",
              "snippet": "magazinesAmmoFull ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetail",
              "snippet": "magazinesDetail ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with the type names of all the unit's backpack magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailBackpack",
              "snippet": "magazinesDetailBackpack ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with the type names of all the unit's uniform magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailUniform",
              "snippet": "magazinesDetailUniform ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with the type names of all the unit's vest magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesDetailVest",
              "snippet": "magazinesDetailVest ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, String) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazinesTurret",
              "snippet": "magazinesTurret ${2:turretPath}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns ammo count of given type from given turret \n\n\n\n\n \n\n  Broken when vehicle has multiple magazines of the same type",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/magazineTurretAmmo",
              "snippet": "magazineTurretAmmo ${2:[magazineClass, turretPath]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add next frame to map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimAdd",
              "snippet": "mapAnimAdd ${1:[${2:time}, ${3:zoom}, ${4:position}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "mapAnimClear",
              "description": "Clear map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimClear"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "mapAnimCommit",
              "description": "Play map animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimCommit"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "mapAnimDone",
              "description": "Check if map animation is finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapAnimDone"
            },
            {
              "leftLabel": "mainmap ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "<control> mapCenterOnCamera <boolean> syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.\nmapCenterOnCamera <control> syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapCenterOnCamera",
              "snippet": "mapCenterOnCamera ${2:enable}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "<control> mapCenterOnCamera <boolean> syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.\nmapCenterOnCamera <control> syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapCenterOnCamera",
              "snippet": "mapCenterOnCamera ${1:minimap}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mapGridPosition",
              "snippet": "mapGridPosition ${1:param}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "markAsFinishedOnSteam",
              "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markAsFinishedOnSteam"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the marker alpha. See setMarkerAlpha.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerAlpha",
              "snippet": "markerAlpha ${1:markerName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the marker brush. See setMarkerBrush.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerBrush",
              "snippet": "markerBrush ${1:name}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns marker color for given marker. See setMarkerColor. Note: This function is identical to getMarkerColor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerColor",
              "snippet": "markerColor ${1:markerName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get marker direction.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerDir",
              "snippet": "markerDir ${1:markerName}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get marker Position. Note: This function is identical to getMarkerPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerPos",
              "snippet": "markerPos ${1:markerName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the marker shape. See setMarkerShape for a list of strings that can be returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerShape",
              "snippet": "markerShape ${1:name}$0"
            },
            {
              "leftLabel": "(Array, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns marker size. This command is identical to getMarkerSize.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerSize",
              "snippet": "markerSize ${1:markerName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get marker text.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerText",
              "snippet": "markerText ${1:markerName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/markerType",
              "snippet": "markerType ${1:markerName}$0"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The greater of a,b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/max",
              "snippet": "max ${2:b}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return a list of members in given team.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/members",
              "snippet": "members ${1:team}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns action stored in item on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuAction",
              "snippet": "menuAction [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds new submenu entry into item on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuAdd",
              "snippet": "menuAdd [${1:idc}, ${2:path}, ${3:text}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if item on given path is checked or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuChecked",
              "snippet": "menuChecked [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all entries from given menu strip.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuClear",
              "snippet": "menuClear ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapses item on given path and all its childs.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuCollapse",
              "snippet": "menuCollapse [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns data stored in menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuData",
              "snippet": "menuData [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Deletes menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuDelete",
              "snippet": "menuDelete [${1:idc}, ${2:path}, ${3:text}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables disabled menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuEnable",
              "snippet": "menuEnable [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if menu entry on given path is enabled or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuEnabled",
              "snippet": "menuEnabled [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Expands given menu entry on given path and all its parents so entry is visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuExpand",
              "snippet": "menuExpand [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns path to menu entry mouse is currently hovering over.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuHover",
              "snippet": "menuHover ${1:idc}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns picture set into item on given path",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuPicture",
              "snippet": "menuPicture [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets new action into menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetAction",
              "snippet": "menuSetAction [${1:idc}, ${2:path}, action]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets item on given path to be checked or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetCheck",
              "snippet": "menuSetCheck [${1:idc}, ${2:path}, checkedl]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets new data into item on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetData",
              "snippet": "menuSetData [${1:idc}, ${2:path}, ${3:data}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets new picture into menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetPicture",
              "snippet": "menuSetPicture [${1:idc}, ${2:path}, ${3:picture}]$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets new picture into menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetPicture",
              "snippet": "menuSetPicture [${2:path}, ${3:picture}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets new value into menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSetValue",
              "snippet": "menuSetValue [${1:idc}, ${2:path}, ${3:value}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns shortcut related to menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuShortcut",
              "snippet": "menuShortcut [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a string containing shortcut text for menu item on the given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuShortcutText",
              "snippet": "menuShortcutText [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns how many sub entries is in item on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSize",
              "snippet": "menuSize [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts subentries of item on given path by their text.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuSort",
              "snippet": "menuSort [${1:idc}, ${2:path}, ${3:reversed}]$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current text set in menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuText",
              "snippet": "menuText [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current URL set in entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuURL",
              "snippet": "menuURL [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current value set in menu entry on given path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/menuValue",
              "snippet": "menuValue [${1:idc}, ${2:path}]$0"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The smaller of a,b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/min",
              "snippet": "min ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if the given mine is active.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mineActive",
              "snippet": "mineActive ${1:obj}$0"
            },
            {
              "leftLabel": "(Boolean) = mine ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if mine has been detected by a given side",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mineDetectedBy",
              "snippet": "mineDetectedBy ${2:faction}$0"
            },
            {
              "leftLabel": "(Config) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionConfigFile",
              "description": "Return root of mission Description.ext entries hierarchy.\n\n\n\n\n\n\u00a0!\n\n Since introduction of the Eden Editor, scenario attributes can be configured in the editor itself, not only in the external Description.ext file. To access desired value independently on where it's stored, use the following commands instead:\n getMissionConfigValue\n getMissionConfig",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionConfigFile"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionDifficulty",
              "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionDifficulty"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionName",
              "description": "Return currently loaded mission file (path to mission.pbo, relative to game exe).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionName"
            },
            {
              "leftLabel": "(Namespace) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionNamespace",
              "description": "Returns the global namespace attached to mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionNamespace"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionStart",
              "description": "Returns date and time when mission started in format [year, month, day, hour, minute, second].\n\nWorks only in multiplayer, in singleplayer all values are equal to zero \u2192 [0,0,0,0,0,0]\n\nNOTE: Because missionStart contains the time of the actual start of the mission, it might not be available in pre-init or init, but is guaranteed to be available in post-init when time > 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionStart"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "missionVersion",
              "description": "Returns the version of the current mission.\n Mission from the 2D Editor: 12\n Mission from the Eden Editor: 15 and higher (for example current version for Eden Editor mission in Arma 3 v1.57 is 51)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/missionVersion"
            },
            {
              "leftLabel": "(Number) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remainder of a divided by b.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/mod",
              "snippet": "mod ${2:b}$0"
            },
            {
              "leftLabel": "(Array, Array) = model ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Translates relative position from object model space into world position. This command will take into account vectorUp of the object when calculating relative coordinates. For ASL version see modelToWorldWorld",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorld",
              "snippet": "modelToWorld ${2:position}$0"
            },
            {
              "leftLabel": "(Array, Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from object model space to world space in render time scope. For ASL version see modelToWorldVisualWorld.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldVisual",
              "snippet": "modelToWorldVisual ${2:modelPos}$0"
            },
            {
              "leftLabel": "(Array) = obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from object model space to world space in render time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldVisualWorld",
              "snippet": "modelToWorldVisualWorld ${2:modelPos}$0"
            },
            {
              "leftLabel": "(Array) = obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from object model space to world space (usable by setPosWorld for example).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modelToWorldWorld",
              "snippet": "modelToWorldWorld ${2:modelPos}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options: \n \"name\": String - name to be shown (Arma 3 instead of A3, etc.)\n \"picture\": String - picture shown in Mod Launcher\n \"logo\": String -  logo to be shown in Main Menu\n \"logoOver\": String - logo to be shown in Main Menu when mouse is over\n \"logoSmall\": String - small version of logo, prepared for drawing small icons\n \"tooltip\": String - tooltip to be shown on mouse over \n \"tooltipOwned\": String - tooltip to be shown on mouse over the icon when DLC is owned by player\n \"action\": String - url to be triggered when mod button is clicked\n \"actionName\": String - what to put on Action Button\n \"overview\": String - overview text visible in expansion menu\n \"hidePicture\": Boolean - do not show mod picture icon in the main menu mod list\n \"hideName\": Boolean - do not show mod name in the main menu mod list\n \"defaultMod\": Boolean - default mods cannot be moved or disabled by Mod Launcher\n \"serverOnly\": Boolean - mod doesn't have to be installed on client in order to play on server with this mod running\n \"active\": Boolean - active mod (activated through command line or stored in profile by mod launcher) \nNOTE that \"active\" does not actually tell you if a mod ( is running / pretends to be running )",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/modParams",
              "snippet": "modParams ${1:[${2:modClass}, ${3:options}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "moonIntensity",
              "description": "Returns the intensity of the moon's brightness in range 0...1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moonIntensity"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moonPhase",
              "snippet": "moonPhase ${1:date}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks a current morale level of the unit (-1..+1).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/morale",
              "snippet": "morale ${1:unit}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Let group move to given position (format Position or Position2D) without waypoint. Active waypoints will be ignored when command is used.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/move",
              "snippet": "move ${2:position}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves Eden Editor camera to given position, with or without offset.\nDefault camera offset: [0,-25,25]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/move3DENCamera",
              "snippet": "move3DENCamera [${1:position},${2:useOffset}]$0"
            },
            {
              "leftLabel": "(Boolean) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle. Seat assignment seems to use the following priority logic: \ndriver (moveInDriver) -> commander turret (moveInCommander) -> gunner turret (moveInGunner) -> remaining turrets (moveInTurret) -> cargo (moveInCargo).\nNOTE: This command will move player into the locked vehicle or seat just as well.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInAny",
              "snippet": "moveInAny ${2:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Move soldier into vehicle cargo position (Immediate, no animation).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCargo",
              "snippet": "moveInCargo ${2:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Move soldier into vehicle cargo position (Immediate, no animation).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCargo",
              "snippet": "moveInCargo [${2:vehicle}, ${3:CargoIndex}]$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Move soldier into vehicle commander position (Immediate, no animation).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInCommander",
              "snippet": "moveInCommander ${2:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Move soldier into vehicle driver position (Immediate, no animation).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInDriver",
              "snippet": "moveInDriver ${2:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Move soldier into vehicle gunner position (Immediate, no animation).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInGunner",
              "snippet": "moveInGunner ${2:vehicle}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the soldier into the vehicle's turret. (Immediately, without animation). turret path is an array of positions inside a turret, or positions inside a turret of a turret.\n\n[0] means first turret.\n[0,0] means first turret of first turret.\n[0,1] means second turret of first turret.\n[1] means second turret.\n[1,0] means first turret of the second turret.\n[2,0] means first turret of third turret.\nAnd so on ...",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveInTurret",
              "snippet": "moveInTurret ${2:[${3:vehicle}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects). \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveObjectToEnd",
              "snippet": "moveObjectToEnd ${2:object}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the soldier out of vehicle, immediately, without animation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveOut",
              "snippet": "moveOut ${1:soldier}$0"
            },
            {
              "leftLabel": "(Boolean) = target ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Change information about a target. Not yet implemented.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTarget",
              "snippet": "moveTarget ${2:[${3:position}, ${4:typeAccuracy}, ${5:posAccuracy}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current time of the most important RTM animation currently being played on the soldier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTime",
              "snippet": "moveTime ${1:soldier}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Low level command to person to move to given position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveTo",
              "snippet": "moveTo ${2:position}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if latest low level moveTo command is finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveToCompleted",
              "snippet": "moveToCompleted ${1:person}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if latest low level moveTo command failed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/moveToFailed",
              "snippet": "moveToFailed ${1:person}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "musicVolume",
              "description": "Checks the current music volume (set by fadeMusic)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/musicVolume"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.\nWhen argument is Location, the location's name is returned. To return the textual value of a location use text command instead.\n\nNOTE: In Arma 3 setName can be used on a person to set name. However in multiplayer name always returns profileName.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/name",
              "snippet": "name ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.\nWhen argument is Location, the location's name is returned. To return the textual value of a location use text command instead.\n\nNOTE: In Arma 3 setName can be used on a person to set name. However in multiplayer name always returns profileName.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/name",
              "snippet": "name ${1:location}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the nameSound of a person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nameSound",
              "snippet": "nameSound ${1:person}$0"
            },
            {
              "leftLabel": "(Array, Object) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.\nThis command returns only alive entities. If you need to return dead entities as well use entities command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearEntities",
              "snippet": "nearEntities ${2:radius}$0"
            },
            {
              "leftLabel": "(Array, Object) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.\nThis command returns only alive entities. If you need to return dead entities as well use entities command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearEntities",
              "snippet": "nearEntities ${2:[${3:typeName}, ${4:radius}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestBuilding",
              "snippet": "nearestBuilding ${1:position}$0"
            },
            {
              "leftLabel": "(Location) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the closest location of specified class to a given position.Checked range is unlimited (i.e. covers the whole map).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocation",
              "snippet": "nearestLocation ${1:[${2:position}, ${3:locationClass}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocations",
              "snippet": "nearestLocations ${1:[${2:position}, ${3:[${4:locationType},...]}, ${5:radius}, ${6:sortPosition}]}$0"
            },
            {
              "leftLabel": "(Location) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find the nearest location (to the given position) having it speech non-empty.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestLocationWithDubbing",
              "snippet": "nearestLocationWithDubbing ${1:position}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\nIf object class type is used, any object derived from the type is found as well (In OFP however, only objects with exactly the type given are found). If object ID passed as an argument (as in example 2) the search range is unlimited.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "snippet": "nearestObject ${1:[${2:position}, ${3:type}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\nIf object class type is used, any object derived from the type is found as well (In OFP however, only objects with exactly the type given are found). If object ID passed as an argument (as in example 2) the search range is unlimited.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "snippet": "nearestObject ${1:position}$0"
            },
            {
              "leftLabel": "(Object) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\nIf object class type is used, any object derived from the type is found as well (In OFP however, only objects with exactly the type given are found). If object ID passed as an argument (as in example 2) the search range is unlimited.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "snippet": "nearestObject ${2:type}$0"
            },
            {
              "leftLabel": "(Object) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.\nIf object class type is used, any object derived from the type is found as well (In OFP however, only objects with exactly the type given are found). If object ID passed as an argument (as in example 2) the search range is unlimited.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObject",
              "snippet": "nearestObject ${2:id}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. Alternatively, you use nearObjects command, which doesn't sort results. \n\nposition can use the format:\n\n[[x,y,z], [\"ClassName\",...], radius]\n\nor\n\n[object, [\"ClassName\",...], radius]\n\n\nTo use it without any ClassName filter:\n\n[object or position, [], radius].\n\n\nA list of ClassName types (Tanks eg) can be found in CfgVehicles\n\nSince Arma 3 v1.65.138818 it is possible to switch search and sorting mode between 2D and 3D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestObjects",
              "snippet": "nearestObjects ${1:[${2:position}, ${3:types}, ${4:radius}, ${5:2Dmode}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). \nIn contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.\n\nposition can use the format:\n\n[[x,y,z], [\"Type\",...], radius]\n\nor\n\n[object, [\"Type\",...], radius]\n\n\nTo use it without any type filter:\n\n[object or position, [], radius]\n\n\nPossible type names:\"TREE\", \"SMALL TREE\", \"BUSH\", \"BUILDING\", \"HOUSE\", \"FOREST BORDER\", \"FOREST TRIANGLE\", \"FOREST SQUARE\", \"CHURCH\", \"CHAPEL\", \"CROSS\", \"BUNKER\", \"FORTRESS\", \"FOUNTAIN\", \"VIEW-TOWER\", \"LIGHTHOUSE\", \"QUAY\", \"FUELSTATION\", \"HOSPITAL\", \"FENCE\", \"WALL\", \"HIDE\", \"BUSSTOP\", \"ROAD\", \"FOREST\", \"TRANSMITTER\", \"STACK\", \"RUIN\", \"TOURISM\", \"WATERTOWER\", \"TRACK\", \"MAIN ROAD\", \"ROCK\", \"ROCKS\", \"POWER LINES\", \"RAILWAY\", \"POWERSOLAR\", \"POWERWAVE\", \"POWERWIND\", \"SHIPWRECK\", \"TRAIL\"\n\nSince Arma 3 v1.61.136035 it is possible to switch the sorting algorithm off by providing optional param, which significantly increases the performance of this command, especially if the search is performed with large radius.\n\nSince Arma 3 v1.65.138818 it is possible to switch search and sorting mode between 2D and 3D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearestTerrainObjects",
              "snippet": "nearestTerrainObjects ${1:[${2:position}, ${3:types}, ${4:radius}, ${5:sort}, ${6:2Dmode}]}$0"
            },
            {
              "leftLabel": "(Array) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjects",
              "snippet": "nearObjects ${2:radius}$0"
            },
            {
              "leftLabel": "(Array) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjects",
              "snippet": "nearObjects ${2:[${3:typeName}, ${4:radius}]}$0"
            },
            {
              "leftLabel": "(Boolean) = position ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether all data are loaded to nearObjects will return in reasonable time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearObjectsReady",
              "snippet": "nearObjectsReady ${2:radius}$0"
            },
            {
              "leftLabel": "(Array, Object) = pos ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find the road segments within the circle of given radius.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearRoads",
              "snippet": "nearRoads ${2:radius}$0"
            },
            {
              "leftLabel": "(Array, Object) = origin ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearSupplies",
              "snippet": "nearSupplies ${2:radius}$0"
            },
            {
              "leftLabel": "(Array, Position, Side, Object) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of targets within the defined range. \"Targets\" are not restricted to enemy units.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nearTargets",
              "snippet": "nearTargets ${${5:2}:range}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return how much vehicle wants to reload its weapons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/needReload",
              "snippet": "needReload ${1:vehicle}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unique ID of object or group.  As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/netId",
              "snippet": "netId ${1:var}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "netObjNull",
              "description": "A non existing network object. Not used in scripting anywhere in game.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/netObjNull"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates the new overlay dialog for the specified type of overlay. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/newOverlay",
              "snippet": "newOverlay ${2:config}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the next available menu item index.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nextMenuItemIndex",
              "snippet": "nextMenuItemIndex ${1:map}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "nextWeatherChange",
              "description": "Return the remaining time (in seconds) over which the current weather change will occur.\n\nWhen a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nextWeatherChange"
            },
            {
              "leftLabel": "(Void) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "nil",
              "description": "Nil value. This value can be used to undefine existing variables.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nil"
            },
            {
              "leftLabel": "(Number) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the total number of user-added menu items belonging to the given menu.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nMenuItems",
              "snippet": "nMenuItems ${2:menuName}$0"
            },
            {
              "leftLabel": "(Number) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the total number of user-added menu items belonging to the given menu.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/nMenuItems",
              "snippet": "nMenuItems ${2:index}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "not a.\n\nExactly the same as ! a",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/not",
              "snippet": "not ${1:a}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the number of engines a helicopter has.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/numberOfEnginesRTD",
              "snippet": "numberOfEnginesRTD ${1:helicopterRTD}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert float number to a date.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/numberToDate",
              "snippet": "numberToDate ${1:[year,time]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return Object with given id. Object ID's can be checked in mission editor.\n\n\n\n\n\n \n\n This command is not in Arma 3. Use nearestObject command family instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/object",
              "snippet": "object ${1:id}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all curators which can edit given object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectCurators",
              "snippet": "objectCurators ${1:obj}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectFromNetId",
              "snippet": "objectFromNetId ${1:id}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.\nAnother good use of objectParent is when a static weapon is known and one needs to check if it is assembled or not. objectParent _staticWeapon will return objNull if weapon is unpacked, or backpack object if packed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objectParent",
              "snippet": "objectParent ${1:object}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "objNull",
              "description": "A non-existent Object. To compare non-existent objects use isNull or isEqualTo:\n objNull == objNull; // false\n isNull objNull; // true\n objNull isEqualTo objNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objNull"
            },
            {
              "leftLabel": "objectivenumber ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the status of an objective that was defined in briefing.html.\n\nStatus may be one of:\n \"ACTIVE\"\n \"FAILED\"\n \"DONE\"\n \"HIDDEN\"\n\nTo refer to an objective that is named \"OBJ_1\", for example, use only the index number in this command (i.e. \"1\" objStatus \"HIDDEN\").",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/objStatus",
              "snippet": "objStatus ${2:status}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Gear tab is selected in the briefing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingGear",
              "snippet": "onBriefingGear ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingGroup",
              "snippet": "onBriefingGroup ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingNotes",
              "snippet": "onBriefingNotes ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingPlan",
              "snippet": "onBriefingPlan ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onBriefingTeamSwitch",
              "snippet": "onBriefingTeamSwitch ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command. Groups hc mode must contain at least one group for this command to work (see High Command). Attached code receives _isHighCommand boolean. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: CommandModeChanged",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onCommandModeChanged",
              "snippet": "onCommandModeChanged ${1:code}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onDoubleClick",
              "snippet": "onDoubleClick ${2:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Runs given statement every frame. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: EachFrame\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onEachFrame",
              "snippet": "onEachFrame ${1:statement}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike onGroupIconOverEnter and onGroupIconOverLeave, has one more param which returns 1 if RMB was pressed, 0 otherwise. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconClick",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconClick",
              "snippet": "onGroupIconClick ${1:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverEnter",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconOverEnter",
              "snippet": "onGroupIconOverEnter ${1:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverLeave",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onGroupIconOverLeave",
              "snippet": "onGroupIconOverLeave ${1:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when high command group selection has been changed.\n\nCommand receives 2 variables:\n_group: Group - last selected/deselected group\n_isSelected: Boolean - new selection state of the specific group\n\nThe code is executed on every hc group selection change until it is\n removed via onHCGroupSelectionChanged \"\"; or onHCGroupSelectionChanged {};\n or replaced by onHCGroupSelectionChanged \"SomeOtherCommand(s)\"; or onHCGroupSelectionChanged {SomeOtherCommand(s)};\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: HCGroupSelectionChanged",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onHCGroupSelectionChanged",
              "snippet": "onHCGroupSelectionChanged ${1:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Define action performed when user clicks in map by executing command string.\n\nthe string receives 5 (localised in scope) variables:\n\n _this: Anything - Params passed to onMapSingleClick\n _pos: Array - Clicked position\n _units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)\n _shift: Boolean - Whether <Shift> was pressed when clicking on the map\n _alt: Boolean - Whether <Alt> was pressed when clicking on the map\n\nIn Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\nThe code is executed on every click, until the Command is \nremoved via onMapSingleClick \"\", or\nreplaced by onMapSingleClick \"SomeOtherCommand(s)\"\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: MapSingleClick\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onMapSingleClick",
              "snippet": "onMapSingleClick ${1:command}$0"
            },
            {
              "leftLabel": "params ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Define action performed when user clicks in map by executing command string.\n\nthe string receives 5 (localised in scope) variables:\n\n _this: Anything - Params passed to onMapSingleClick\n _pos: Array - Clicked position\n _units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)\n _shift: Boolean - Whether <Shift> was pressed when clicking on the map\n _alt: Boolean - Whether <Alt> was pressed when clicking on the map\n\nIn Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\nThe code is executed on every click, until the Command is \nremoved via onMapSingleClick \"\", or\nreplaced by onMapSingleClick \"SomeOtherCommand(s)\"\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: MapSingleClick\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onMapSingleClick",
              "snippet": "onMapSingleClick ${2:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command will execute attached code whenever a player is connected to a MP session. The code will receive a number of special variables:\n\n _id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n _uid: String - is getPlayerUID of the joining player. In Arma 3 it is also the same as Steam ID.\n _name: String - is profileName of the joining player.\n _jip: (since Arma 3 v1.49) Boolean - is a flag that indicates whether or not the player joined after the mission has started (Joined In Progress). true - when the player is JIP, otherwise false.\n _owner: (since Arma 3 v1.49) Number - is owner id of the joining player. Can be used for kick or ban purposes or just for publicVariableClient.\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: PlayerConnected\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPlayerConnected",
              "snippet": "onPlayerConnected ${1:code}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:\n\n _id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.\n _uid: String - is getPlayerUID of the leaving player. In Arma 3 it is also the same as Steam ID.\n _name: String - is profileName of the leaving player.\n _jip: (since Arma 3 v1.49) Boolean - is a flag that indicated whether or not the player joined after the mission has started (Joined In Progress). true - if the player was JIP, otherwise false.\n _owner: (since Arma 3 v1.49) Number - is owner id of the leaving player. Can be used for kick or ban purposes or just for publicVariableClient.\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: PlayerDisconnected\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPlayerDisconnected",
              "snippet": "onPlayerDisconnected ${1:code}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: PreloadFinished\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPreloadFinished",
              "snippet": "onPreloadFinished ${1:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.\n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: PreloadStarted\n\n\n\n\n\n \n\n In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onPreloadStarted",
              "snippet": "onPreloadStarted ${1:command}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position, \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onShowNewObject",
              "snippet": "onShowNewObject ${2:command}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines an action performed when the team switch is finished. Commandset receives the following special variables: _from object previous unit, _to object current unit. Consecutive use of onTeamSwitch command will overwrite previously set commandset. \n\n\n\n\n i\n\n Since Arma 3 v1.57 a stackable version of this EH is available: TeamSwitch\n\nNOTE: When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it onTeamSwitch {_from enableAI \"TeamSwitch\"}; so that the unit continues with waypoints",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/onTeamSwitch",
              "snippet": "onTeamSwitch ${1:commandset}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "openCuratorInterface",
              "description": "Force opens curator interface.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openCuratorInterface"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openDLCPage",
              "snippet": "openDLCPage ${1:dlcID}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "openDSInterface",
              "description": "Open MP interface. \n\n\n\n\n\n \n\n This command is not present in Arma 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openDSInterface"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows in-game map. If forced, cannot be closed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openMap",
              "snippet": "openMap ${1:show}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows in-game map. If forced, cannot be closed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openMap",
              "snippet": "openMap [${1:show}, ${2:forced}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/openYoutubeVideo",
              "snippet": "openYoutubeVideo ${1:youTubeUrl}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "opfor",
              "description": "Pre-defined variable for the opfor side.\n Alias for east.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/opfor"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a  ||  b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/or",
              "snippet": "or ${2:b}$0"
            },
            {
              "leftLabel": "(Boolean) = a ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a  ||  b",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/or",
              "snippet": "or ${2:b}$0"
            },
            {
              "leftLabel": "unitArray ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/orderGetIn",
              "snippet": "orderGetIn ${2:order}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "overcast",
              "description": "Return the current overcast level. Zero is clear skies, one is maximum cloud cover.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/overcast"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "overcastForecast",
              "description": "Return the overcast forecast.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/overcastForecast"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "On server machine, returns the ID of the client where the object is local. Otherwise returns 0. For use on clients clientOwner command is available. To find out the owner of a Group, use groupOwner.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/owner",
              "snippet": "owner ${1:object}$0"
            },
            {
              "leftLabel": "(Anything, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param.  When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/param",
              "snippet": "param ${1:[${2:index}, ${3:defaultValue}, ${4:expectedDataTypes}, ${5:expectedArrayCount}]}$0"
            },
            {
              "leftLabel": "(Anything, Nothing) = argument ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param.  When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/param",
              "snippet": "param ${2:[${3:index}, ${4:defaultValue}, ${5:expectedDataTypes}, ${6:expectedArrayCount}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.\n\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/params",
              "snippet": "params ${1:[element1, element2,...${2:elementN}]}$0"
            },
            {
              "leftLabel": "(Boolean) = argument ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.\n\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/params",
              "snippet": "params ${2:[element1, element2,...${3:elementN}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseNumber",
              "snippet": "parseNumber ${1:string}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseNumber",
              "snippet": "parseNumber ${1:boolean}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For example: [1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly.\n\nThis command is built for speed and security and because of this has several limitations. There is limited error reporting about format errors as the command expects well formatted array as argument. To be able to see exact format expected, you can just copy output result of str command applied to an array for reference:  copyToClipboard str str [1,\"2\",true,[4,\"five\",false]] (notice the use of double str with copyToClipboard).\n\nIn any case here are the explicit rules:\n no spaces are permitted between array elements: [1,2,3] - correct, [1, 2, 3] - incorrect!\n only double quotes \" supported for Strings: [\"hello\"] - correct, ['hello'] - incorrect! \n use \" to escape \", for example [\"hello\"] converted to string should look like this: \"[\"\"hello\"\"]\"\n no spaces should exist before or after array brackets: \"[1,2,3]\" - correct, \"[1,2,3] \" - incorrect!\nTo simplify, your constructed array format should be the same as Arma array converted to string with str:\n_arr1 = getUnitLoadout player;\n_arr2 = parseSimpleArray str _arr1;\nhint str (_arr1 isEqualTo _arr2); //true \n\nBecause of this strictness the command is on average 3x faster than similar call compile string array method. And because call compile is not required, it is also more secure and primarily intended for use with callExtension to parse the String output into Array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseSimpleArray",
              "snippet": "parseSimpleArray ${1:stringArray}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from stringtable.xml (see notes below).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parseText",
              "snippet": "parseText ${1:text}$0"
            },
            {
              "leftLabel": "(Namespace) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "parsingNamespace",
              "description": "Returns the global namespace attached to config parser.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/parsingNamespace"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "particlesQuality",
              "description": "Returns current settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/particlesQuality"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pi",
              "description": "pi (180 degrees converted to Radians).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pi"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pickWeaponPool",
              "snippet": "pickWeaponPool ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the pitch of a persons voice.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pitch",
              "snippet": "pitch ${1:person}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pixelGrid",
              "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGrid"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pixelGridBase",
              "description": "Returns grid size based on screen resolution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGridBase"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pixelGridNoUIScale",
              "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids \n\nAs mentioned in the name of this command, the user interface scale is ignored.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelGridNoUIScale"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pixelH",
              "description": "Returns the height of one pixel for current resolution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelH"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "pixelW",
              "description": "Returns width of one pixel for current resolution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pixelW"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the number of available slots in mission per side (both empty and taken). In singleplayer mission, it returns number of playable units per side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playableSlotsNumber",
              "snippet": "playableSlotsNumber ${1:side}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "playableUnits",
              "description": "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. This does not include dead players awaiting for respawn.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playableUnits"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person, a smooth transition to the given action will be initiated.\n\nFor Arma 3 actions see: playAction/actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playAction",
              "snippet": "playAction ${2:action}$0"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.\n\nFor Arma 3 actions see: playAction/actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playActionNow",
              "snippet": "playActionNow ${2:action}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "player",
              "description": "Person controlled by player.\n\nIn MP this value is different on each computer and on dedicated server this value is null.\n\nIn Intros and Outros this isn't set by default and must be assigned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/player"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "playerRespawnTime",
              "description": "Return the player remaining time to respawn or -1 if it is not available.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playerRespawnTime"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "playerSide",
              "description": "Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playerSide"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but didn't start the mission are counted as well. If disabledAI = 0; in description.ext or Enable AI option is checked in 3DEN, AI bots will be treated as valid players and will be counted too. Multiplayer only, in singleplayer always returns 0.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playersNumber",
              "snippet": "playersNumber ${1:side}$0"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playGesture",
              "snippet": "playGesture ${2:moveName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMission",
              "snippet": "playMission ${1:[${2:campaign}, ${3:mission}, skipBriefing]}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on person, smooth transition to given move will be done.\nList of moves in ArmA 2List of moves in Armed AssaultList of moves in Operation Flashpoint: Resistance\n\nThe difference between playMove and playMoveNow is that playMove adds another move to the move queue, while playMoveNow replaces the whole move queue with new move:\nplayer switchMove \"amovpercmstpsraswrfldnon\"; \n[] spawn \n{\n\tsleep 0.5; \n\tplayer playMove \"amovppnemstpsraswrfldnon\"; // player goes prone\n\tplayer playMove \"amovpknlmstpsraswrfldnon\"; // player gets up on one knee\n};\nCompared to: \nplayer switchMove \"amovpercmstpsraswrfldnon\";\n[] spawn\n{\n\tsleep 0.5; \n\tplayer playMove \"amovppnemstpsraswrfldnon\"; // player never goes prone\n\tplayer playMoveNow \"amovpknlmstpsraswrfldnon\"; // player goes down on one knee straight away\n};",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMove",
              "snippet": "playMove ${2:moveName}$0"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. \n\nList of moves in ArmA 2List of moves in Armed AssaultList of moves in Operation Flashpoint: Resistance\n\n\nThe difference between playMove and playMoveNow is that playMove adds another move to the move queue, while playMoveNow replaces the whole move queue with new move:\nplayer switchMove \"amovpercmstpsraswrfldnon\"; \n[] spawn \n{\n\tsleep 0.5; \n\tplayer playMove \"amovppnemstpsraswrfldnon\"; // player goes prone\n\tplayer playMove \"amovpknlmstpsraswrfldnon\"; // player gets up on one knee\n};\nCompared to: \nplayer switchMove \"amovpercmstpsraswrfldnon\";\n[] spawn\n{\n\tsleep 0.5; \n\tplayer playMove \"amovppnemstpsraswrfldnon\"; // player never goes prone\n\tplayer playMoveNow \"amovpknlmstpsraswrfldnon\"; // player goes down on one knee straight away\n};",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMoveNow",
              "snippet": "playMoveNow ${2:moveName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays music defined in Description.ext#CfgMusic or config.cpp. To stop the music execute playMusic \"\" or give the start time which is beyond the music duration playMusic [\"SomeMusic\", 1000]; \nFor Arma 3 music, see Arma 3 CfgMusic. Since Arma 3 v1.67 one can use Jukebox Utility to preview in-game music.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMusic",
              "snippet": "playMusic ${1:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays music defined in Description.ext#CfgMusic or config.cpp. To stop the music execute playMusic \"\" or give the start time which is beyond the music duration playMusic [\"SomeMusic\", 1000]; \nFor Arma 3 music, see Arma 3 CfgMusic. Since Arma 3 v1.67 one can use Jukebox Utility to preview in-game music.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playMusic",
              "snippet": "playMusic ${1:[${2:name}, ${3:start}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Load the given world, launch an empty mission and execute the given, expression. Config (optional) can reference to the config entry, replacing description.ext for this mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playScriptedMission",
              "snippet": "playScriptedMission ${1:[${2:world},${3:expression},${4:config},${5:ignoreChildWindow}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects sound from Description.ext#CfgSounds or config.cpp.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound",
              "snippet": "playSound ${1:soundName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects sound from Description.ext#CfgSounds or config.cpp.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound",
              "snippet": "playSound ${1:[${2:soundName}, ${3:isSpeech}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/playSound3D",
              "snippet": "playSound3D ${1:[${2:filename}, ${3:soundSource}, ${4:isInside}, ${5:soundPosition}, ${6:volume}, ${7:soundPitch}, ${8:distance}]}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Synonym for getPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/position",
              "snippet": "position ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a location's position. If it is attached to an object, the location's set or created position is returned rather than object's position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/position%20location",
              "snippet": "position ${1:location}$0"
            },
            {
              "leftLabel": "(Array, Position) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert screen coordinates in map to world coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/posScreenToWorld",
              "snippet": "posScreenToWorld ${2:[x, y]}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Transforms position from camera coordinate space to world coordinate space. \nCamera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/positionCameraToWorld",
              "snippet": "positionCameraToWorld ${1:cameraPos}$0"
            },
            {
              "leftLabel": "(Array, Position) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert world coordinates to screen coordinates in map.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/posWorldToScreen",
              "snippet": "posWorldToScreen ${2:position}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set post process effect parameters. NOTE: The two syntaxes differ in what format of the params they accept. The syntax with PP name expects colors to be packed into arrays within main array, while the syntax with PP handle can handle both flat and packed array. Therefore it is recommended to use the universal packed format, such as shown in the examples.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectAdjust",
              "snippet": "ppEffectAdjust ${2:settings}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set post process effect parameters. NOTE: The two syntaxes differ in what format of the params they accept. The syntax with PP name expects colors to be packed into arrays within main array, while the syntax with PP handle can handle both flat and packed array. Therefore it is recommended to use the universal packed format, such as shown in the examples.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectAdjust",
              "snippet": "ppEffectAdjust ${2:settings}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Commit post process effect in given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "snippet": "ppEffectCommit ${2:commit}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Commit post process effect in given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "snippet": "ppEffectCommit ${2:commit}$0"
            },
            {
              "leftLabel": "[effect1,...] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Commit post process effect in given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommit",
              "snippet": "ppEffectCommit ${3:commit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether given post process effect is committed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommitted",
              "snippet": "ppEffectCommitted ${1:effect}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether given post process effect is committed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCommitted",
              "snippet": "ppEffectCommitted ${1:effect}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates Post process effects specified by effect name and priority. Supported effects are:\n\n \"RadialBlur\"\n \"ChromAberration\"\n \"WetDistortion\"\n \"ColorCorrections\"\n \"DynamicBlur\"\n \"FilmGrain\"\n \"ColorInversion\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCreate",
              "snippet": "ppEffectCreate ${1:[${2:name}, ${3:priority}]}$0"
            },
            {
              "leftLabel": "(Array, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates Post process effects specified by effect name and priority. Supported effects are:\n\n \"RadialBlur\"\n \"ChromAberration\"\n \"WetDistortion\"\n \"ColorCorrections\"\n \"DynamicBlur\"\n \"FilmGrain\"\n \"ColorInversion\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectCreate",
              "snippet": "ppEffectCreate [${1:[name1, priority1]},...]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroy Post process effects given by handle or array of handles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectDestroy",
              "snippet": "ppEffectDestroy ${1:effect}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroy Post process effects given by handle or array of handles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectDestroy",
              "snippet": "ppEffectDestroy ${1:[${2:effect1},...]}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable Post process effects",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "snippet": "ppEffectEnable ${2:enable}$0"
            },
            {
              "leftLabel": "effect ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable Post process effects",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "snippet": "ppEffectEnable ${2:enable}$0"
            },
            {
              "leftLabel": "[effect1,...] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable Post process effects",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnable",
              "snippet": "ppEffectEnable ${3:enable}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks whether given post process effect is enabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectEnabled",
              "snippet": "ppEffectEnabled ${1:effect}$0"
            },
            {
              "leftLabel": "number ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces use of Post process effects in NVG.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ppEffectForceInNVG",
              "snippet": "ppEffectForceInNVG ${2:bool}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the precision of the given entity, how is the entity able to be precise when moving to given target.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/precision",
              "snippet": "precision ${1:entity}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Preload all textures and models around given Position to avoid visual artifacts after camera is moved.\n\nShould be used before any abrupt camera change/cut.\n\nReturns true once all data is ready.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadCamera",
              "snippet": "preloadCamera ${1:position}$0"
            },
            {
              "leftLabel": "(Boolean) = distance ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadObject",
              "snippet": "preloadObject ${2:object}$0"
            },
            {
              "leftLabel": "(Boolean) = distance ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Preloads all textures, materials and proxies needed to render given object. Works with both class names and objects. Returns true once all data is loaded and ready.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadObject",
              "snippet": "preloadObject ${2:classname}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadSound",
              "snippet": "preloadSound ${1:soundName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Object title -  Preload data the object can be defined in the Description.ext file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleObj",
              "snippet": "preloadTitleObj ${1:[${2:name}, ${3:type}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Object title -  Preload data the object can be defined in the Description.ext file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleObj",
              "snippet": "preloadTitleObj ${1:[${2:name}, ${3:type}, speed, ${5:showInMap}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Resource title - Preload data.\n\nThe resource can be defined in the Description.ext file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleRsc",
              "snippet": "preloadTitleRsc ${1:[${2:name}, ${3:type}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Resource title - Preload data.\n\nThe resource can be defined in the Description.ext file.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preloadTitleRsc",
              "snippet": "preloadTitleRsc ${1:[${2:name}, ${3:type}, speed, ${5:showInMap}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and macros defined with #define.Due to the hard-drive access this command executes (and the lack of caching) this command should not be used in time-critical script loops.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preprocessFile",
              "snippet": "preprocessFile ${1:fileName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using // or /* and */ and macros defined with #define. The return is  file content starting with #line 1 \"aFilename\"\n\nThis is how mysterious #line keyword works:\nThe keyword can be used in any script, even the one made on-the-fly and executed in debug console for example. The format is:\n#line <number> \"<name>\"\nfollowed by new line. <number> could be any positive integer and <name> could be any name. This will be used only if an error occurs in the script. The error will contain the line:\nFile <filename>, line <linenumber>\nwhere <filename> will be the <name> you set and <linenumber> will be <number> + how many lines it is from the #line line. If the error happened on the line right under #line it will add 0 to <number>, if on second line, it will add 1 etc.\nIt is possible to use more than one #line keywords, but it seems having just one at the top of the script is enough to pinpoint position of the error easily.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/preprocessFileLineNumbers",
              "snippet": "preprocessFileLineNumbers ${1:fileName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of unit's primary weapon (empty string if none).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeapon",
              "snippet": "primaryWeapon ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeaponItems",
              "snippet": "primaryWeaponItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array containing class name of currently loaded primary weapon magazine (or magazines in case of weapon having grenade launcher), otherwise it returns []. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/primaryWeaponMagazine",
              "snippet": "primaryWeaponMagazine ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the priority of the task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/priority",
              "snippet": "priority ${1:task}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. One other command that is capable of creating private variables is params.\nSince Arma 3 v1.53.132932 private can be used as keyword as shown in Example 4.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private",
              "snippet": "private ${1:variableName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. One other command that is capable of creating private variables is params.\nSince Arma 3 v1.53.132932 private can be used as keyword as shown in Example 4.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private",
              "snippet": "private ${1:variableNameList}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "private",
              "description": "Sets a variable to the innermost scope as demonstrated in Example 3. One other command that is capable of creating private variables is params.\nSince Arma 3 v1.53.132932 private can be used as keyword as shown in Example 4.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/private"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Open the diary screen on the record specified by link.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/processDiaryLink",
              "snippet": "processDiaryLink ${1:link}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "processInitCommands",
              "description": "Process statements stored using setVehicleInit. The statements will only be executed once even if processInitCommands is called multiple times.\n\n\n\n\n\n \n\n For security reasons, the command was disabled in Arma 3. Use remoteExec or BIS_fnc_MP for remote execution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/processInitCommands"
            },
            {
              "leftLabel": "(Array, String, Number, Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "productVersion",
              "description": "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/productVersion"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "profileName",
              "description": "Returns profile name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileName"
            },
            {
              "leftLabel": "(Namespace) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "profileNamespace",
              "description": "Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace. A variable can be deleted by setting its value to nil. By default the variables set in this namespace will exist while the game is running. In order to make variables save permanently, use saveProfileNamespace before the game is over.\nThe variables are stored next to the user profile in a file named myUsername.vars.GAMENAME (e.g. in the My Documents\\Take On Helicopters folder).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileNamespace"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "profileNameSteam",
              "description": "Returns name of the current Steam profile.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/profileNameSteam"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressLoadingScreen",
              "snippet": "progressLoadingScreen ${1:progress}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current position in the progress bar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressPosition",
              "snippet": "progressPosition ${1:control}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets progress position of the progress bar (DialogControls-ProgressBar)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/progressSetPosition",
              "snippet": "progressSetPosition ${2:pos}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Broadcasts missionNamespace variable and its value to all computers. The data is sent consequently and reliably to all clients. Using publicVariable too frequently in a given period of time can cause other parts of the game to experience bandwidth problems.\n\nVariables broadcast with publicVariable during a mission stay persistent for JIP (Join In Progress) clients. Such persistent variables are synced to the JIP client before the first batch of client side Event Scripts are ran.\n\nThe following Types of data are supported:\n Number\nSince OFP version 1.34:\n Boolean\n Object\n Group\nSince ArmA version 1.00: \n String\n Text\nSince ArmA version 1.09:\n Array \n Code\nSince Arma 3 version 1.26:\n Nothing (nil)\n\nLimitations: Cannot use reserved names, such as \"player\" or \"west\" or \"side\", etc. It is also not possible to transfer references to entities which are local, like scripts, displays, or local objects. Team Member is also not supported.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariable",
              "snippet": "publicVariable ${1:varName}$0"
            },
            {
              "leftLabel": "clientID ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send the variable value to the client computer - same limitations regarding variable type as publicVariable.\n\nThe Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariableClient",
              "snippet": "publicVariableClient ${2:varName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send the variable value to the server - same limitations regarding variable type as publicVariable. \n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/publicVariableServer",
              "snippet": "publicVariableServer ${1:varName}$0"
            },
            {
              "leftLabel": "(Number) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pushBack",
              "snippet": "pushBack ${2:element}$0"
            },
            {
              "leftLabel": "(Number) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/pushBackUnique",
              "snippet": "pushBackUnique ${2:element}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/putWeaponPool",
              "snippet": "putWeaponPool ${1:object}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryItemsPool",
              "snippet": "queryItemsPool ${1:name}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryMagazinePool",
              "snippet": "queryMagazinePool ${1:name}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/queryWeaponPool",
              "snippet": "queryWeaponPool ${1:name}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Convert x from Degrees to Radians. 360 degrees is equal to 2 multiplied with pi.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rad",
              "snippet": "rad ${1:x}$0"
            },
            {
              "leftLabel": "index ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add the units to the custom radio channel.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelAdd",
              "snippet": "radioChannelAdd ${2:units}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see getPlayerChannel). The command will find an unused index in this range and create it when found. Server only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelCreate",
              "snippet": "radioChannelCreate ${1:[${2:color}, ${3:label}, ${4:callSign}, ${5:units}, ${6:sentenceType}]}$0"
            },
            {
              "leftLabel": "index ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove the units from the custom radio channel.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelRemove",
              "snippet": "radioChannelRemove ${2:units}$0"
            },
            {
              "leftLabel": "index ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the custom radio channel's call sign. \n\nAvailable special parameters:\n $KEY (reference to a localized text)\n\u00a0%CHANNEL_LABEL\n\u00a0%UNIT_SIDE\n\u00a0%UNIT_NAME\n\u00a0%UNIT_RANK\n\u00a0%UNIT_ID\n\u00a0%UNIT_REF\n\u00a0%UNIT_GRP_NAME\n\u00a0%UNIT_GRP_LEADER\n\u00a0%UNIT_VEH_NAME\n\u00a0%UNIT_VEH_POSITION",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelSetCallSign",
              "snippet": "radioChannelSetCallSign ${2:callSign}$0"
            },
            {
              "leftLabel": "index ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the custom radio channel's label.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioChannelSetLabel",
              "snippet": "radioChannelSetLabel ${2:label}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "radioVolume",
              "description": "Checks the current radio volume (set by fadeRadio).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/radioVolume"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "rain",
              "description": "Returns the current value of rain density in range 1...0",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rain"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "rainbow",
              "description": "Returns the current rainbow intensity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rainbow"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing to define Gaussian Distribution params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare.\nSince Arma 3 v1.67.139663 an alternative syntax is available, allowing to generate semi-random number based on provided seed.\nSince Arma 3 v1.67.139663 an alternative syntax is available, generating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "snippet": "random ${1:x}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing to define Gaussian Distribution params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare.\nSince Arma 3 v1.67.139663 an alternative syntax is available, allowing to generate semi-random number based on provided seed.\nSince Arma 3 v1.67.139663 an alternative syntax is available, generating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "snippet": "random ${1:[${2:min}, ${3:mid}, ${4:max}]}$0"
            },
            {
              "leftLabel": "(Number) = seed ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing to define Gaussian Distribution params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare.\nSince Arma 3 v1.67.139663 an alternative syntax is available, allowing to generate semi-random number based on provided seed.\nSince Arma 3 v1.67.139663 an alternative syntax is available, generating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "snippet": "random ${2:x}$0"
            },
            {
              "leftLabel": "(Number) = seed ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).\nSince Arma 3 v1.55.133393 alternative syntax is added, allowing to define Gaussian Distribution params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare.\nSince Arma 3 v1.67.139663 an alternative syntax is available, allowing to generate semi-random number based on provided seed.\nSince Arma 3 v1.67.139663 an alternative syntax is available, generating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/random",
              "snippet": "random [${3:x},${4:y}]$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the rank of the given unit. Rank can be one of the following:\n \"PRIVATE\"\n \"CORPORAL\"\n \"SERGEANT\"\n \"LIEUTENANT\"\n \"CAPTAIN\"\n \"MAJOR\"\n \"COLONEL\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rank",
              "snippet": "rank ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the rank of the given unit for comparison.\n\nValue may be\u00a0:\n0 - Private\n1 - Corporal\n2 - Sergeant\n3 - Lieutenant\n4 - Captain\n5 - Major\n6 - Colonel",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rankId",
              "snippet": "rankId ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer. \n\nThe rating of the player is displayed as the \"score\" at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rating",
              "snippet": "rating ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a location is rectangular (returns true) or elliptical (returns false).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rectangular",
              "snippet": "rectangular ${1:location}$0"
            },
            {
              "leftLabel": "(Array, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "List all registered task types.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/registeredTasks",
              "snippet": "registeredTasks ${1:member}$0"
            },
            {
              "leftLabel": "(Boolean) = teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/registerTask",
              "snippet": "registerTask ${2:entryName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Reload all weapons",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reload",
              "snippet": "reload ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check whether magazine is reloaded whenever emptied.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reloadEnabled",
              "snippet": "reloadEnabled ${1:unitName}$0"
            },
            {
              "leftLabel": "who ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches on remote control of the unit. Command needs to be executed locally to the player. If driver is remote it will get transferred to players PC.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteControl",
              "snippet": "remoteControl ${1:who}$0"
            },
            {
              "leftLabel": "(Anything, String) = params ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\n Scripted function - scheduled environment (suspension is allowed, i.e. spawn, execVM). \n Script command - unscheduled environment (suspension is NOT allowed).  \nremoteExec can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExec",
              "snippet": "remoteExec ${2:[${3:functionName}, targets, ${4:JIP}]}$0"
            },
            {
              "leftLabel": "(Anything, String) = params ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:\n Scripted function - unscheduled environment (suspension is NOT allowed).\n Script command - unscheduled environment (suspension is NOT allowed).  \nremoteExecCall can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.\n\n\n\n\n \nWhile it is true that this function executes the desired scripted command/function by calling it, it does not mean remoteExecCall itself will be executed right away. Therefore, calling remoteExecCall is by no means a replacement for calling scripted commands/functions directly.\nExample:\nremoteExecCall [\"func1\"]; call func2; // func2 can be executed sooner than func1\ncall func1; call func2; // func2 will always execute after func1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExecCall",
              "snippet": "remoteExecCall ${2:[${3:functionName}, targets, ${4:JIP}]}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "remoteExecutedOwner",
              "description": "Returns clientOwner of the PC, which initiated Remote Execution call. If used in SP or outside of remote executed context, the command returns 0. To check if the context was remote executed or remote executed from JIP queue, use isRemoteExecuted and isRemoteExecutedJIP",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remoteExecutedOwner"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove connection between entities.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENConnection",
              "snippet": "remove3DENConnection [${1:type}, ${2:from}, ${3:to}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes Eden Editor event handler of given type and ID.\n\nSee the list of all Eden Editor Event Handlers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENEventHandler",
              "snippet": "remove3DENEventHandler [${1:type},${2:id}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove Eden Editor editing layer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/remove3DENLayer",
              "snippet": "remove3DENLayer ${1:layerID}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload.\n\nThis command has local effect. The action will only be removed on the computer that executes the command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAction",
              "snippet": "removeAction ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all Eden Editor event handlers of given type. \n\nSee the list of all Eden Editor Event Handlers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAll3DENEventHandlers",
              "snippet": "removeAll3DENEventHandlers ${1:type}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all unit's user added actions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllActions",
              "snippet": "removeAllActions ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear. Use removeGoggles and removeHeadgear for those.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllAssignedItems",
              "snippet": "removeAllAssignedItems ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all containers from the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllContainers",
              "snippet": "removeAllContainers ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Restrict access to all addons for given curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorAddons",
              "snippet": "removeAllCuratorAddons ${1:curatorObj}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete all curator camera areas.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorCameraAreas",
              "snippet": "removeAllCuratorCameraAreas ${1:curatorObj}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Delete all curator edit areas.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllCuratorEditingAreas",
              "snippet": "removeAllCuratorEditingAreas ${1:curatorObj}$0"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllEventHandlers",
              "snippet": "removeAllEventHandlers ${2:handlerType}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from weapon except magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllHandgunItems",
              "snippet": "removeAllHandgunItems ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all special items from the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllItems",
              "snippet": "removeAllItems ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all itemsWithMagazines from the uniform, vest and backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllItemsWithMagazines",
              "snippet": "removeAllItemsWithMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMissionEventHandlers",
              "snippet": "removeAllMissionEventHandlers ${1:type}$0"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMPEventHandlers",
              "snippet": "removeAllMPEventHandlers ${2:event}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all music track event handlers of given type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllMusicEventHandlers",
              "snippet": "removeAllMusicEventHandlers ${1:type}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes ownership of all owned mines/explosive devices of the given unit",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllOwnedMines",
              "snippet": "removeAllOwnedMines ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from weapon except magazine.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllPrimaryWeaponItems",
              "snippet": "removeAllPrimaryWeaponItems ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all weapons and magazines of the unit. \n\nOn vehicles only ammo is removed \n\nDoes not remove map, compass, radio. Use \n unitname removeweapon \"itemmap\"\nfor that purpose.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeAllWeapons",
              "snippet": "removeAllWeapons ${1:unitName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes unit's backpack",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeBackpack",
              "snippet": "removeBackpack ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes backpack from a unit. (even non-local)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeBackpackGlobal",
              "snippet": "removeBackpackGlobal ${1:unit}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes specified named clothes selections from unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeClothing",
              "snippet": "removeClothing ${2:item}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Restrict curator use of given addons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorAddons",
              "snippet": "removeCuratorAddons ${2:addons}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes curator camera area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorCameraArea",
              "snippet": "removeCuratorCameraArea ${2:cameraAreaID}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unregister objects which can be edited by a curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorEditableObjects",
              "snippet": "removeCuratorEditableObjects ${2:[[${3:objects}],${4:removeCrew}]}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes editing area for given curator.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeCuratorEditingArea",
              "snippet": "removeCuratorEditingArea ${2:editAreaID}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes an icon for an editor object. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDrawIcon",
              "snippet": "removeDrawIcon ${2:[object,string identifier]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.  \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeDrawLinks",
              "snippet": "removeDrawLinks ${2:[from,param type]}$0"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes event handler added by addEventHandler. \n\nWhen any handler is removed, all handler indices higher than the deleted one should be decremented.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeEventHandler",
              "snippet": "removeEventHandler ${2:[${3:type}, ${4:index}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeFromRemainsCollector",
              "snippet": "removeFromRemainsCollector ${1:remains}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeGoggles",
              "snippet": "removeGoggles ${1:unit}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove icon with given ID from group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeGroupIcon",
              "snippet": "removeGroupIcon ${2:iconID}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes given weapon item from the handgun weapon cargo space.\nAs of Arma 3 DEV 1.37, this command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeHandgunItem",
              "snippet": "removeHandgunItem ${2:item}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeHeadgear",
              "snippet": "removeHeadgear ${1:unit}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes item from the inventory.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItem",
              "snippet": "removeItem ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes item from soldier's backpack.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromBackpack",
              "snippet": "removeItemFromBackpack ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromUniform",
              "snippet": "removeItemFromUniform ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes item from soldier's vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItemFromVest",
              "snippet": "removeItemFromVest ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items with given template from the inventory.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeItems",
              "snippet": "removeItems ${2:item}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove magazine from the unit. \nNote: You may create invalid combinations with this function. When doing so, application behaviour is undefined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazine",
              "snippet": "removeMagazine ${2:magazineName}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the magazine from the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazineGlobal",
              "snippet": "removeMagazineGlobal ${2:magazineName}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove all magazines of given type from the unit.\nNote: You may create invalid combinations with this function. When doing so, application behaviour is undefined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazines",
              "snippet": "removeMagazines ${2:magazineName}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazinesTurret",
              "snippet": "removeMagazinesTurret ${2:[${3:magazineName}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes the magazine from the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMagazineTurret",
              "snippet": "removeMagazineTurret [${3:magazineName}, ${4:turretPath}]$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes a previously added menu item. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMenuItem",
              "snippet": "removeMenuItem ${2:index}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes mission event handler added by addMissionEventHandler.\nWhen any handler is removed, all handler indices higher that the deleted one should be decremented.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMissionEventHandler",
              "snippet": "removeMissionEventHandler [${1:type}, ${2:index}]$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices highter than the deleted one should decremented",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMPEventHandler",
              "snippet": "removeMPEventHandler [${2:event}, ${3:index}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes specified music track event handler.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeMusicEventHandler",
              "snippet": "removeMusicEventHandler ${1:[${2:type}, ${3:id}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes ownership over a remotely detonatable mine from the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeOwnedMine",
              "snippet": "removeOwnedMine ${2:mine}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes given weapon item from the primary weapon cargo space.\nAs of Arma 3 DEV 1.37, this command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removePrimaryWeaponItem",
              "snippet": "removePrimaryWeaponItem ${2:item}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes given weapon item from the secondary weapon cargo space. This command also supports weapon magazines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSecondaryWeaponItem",
              "snippet": "removeSecondaryWeaponItem ${2:item}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove a simple task from the list of simple tasks.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSimpleTask",
              "snippet": "removeSimpleTask ${2:task}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove a unit from the list of units available for Team Switch.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeSwitchableUnit",
              "snippet": "removeSwitchableUnit ${1:unitName}$0"
            },
            {
              "leftLabel": "team ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeTeamMember",
              "snippet": "removeTeamMember ${2:member}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes uniform from unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeUniform",
              "snippet": "removeUniform ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes vest from unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeVest",
              "snippet": "removeVest ${1:unit}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal.\n\nNote: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeapon",
              "snippet": "removeWeapon ${2:weapon}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove attachment linked to a weapon from the vehicle cargo space. \n\n\n\n\n \n\n This is unoffical documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponAttachmentCargo",
              "snippet": "removeWeaponAttachmentCargo ${2:[weaponID,creatorID,\"attachment\"]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove weapon from the vehicle cargo space.\n\n\n\n\n \n\n This is unoffical documentation. All Information here is as it exists in the Engine. It might not reflect the reality.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponCargo",
              "snippet": "removeWeaponCargo ${2:[weaponID,creatorID]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponGlobal",
              "snippet": "removeWeaponGlobal ${2:weapon}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/removeWeaponTurret",
              "snippet": "removeWeaponTurret ${2:[${3:weaponName}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "side ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shares the target vehicle via datalink to the Side center for a given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reportRemoteTarget",
              "snippet": "reportRemoteTarget ${2:[${3:target}, ${4:time}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned. \n\nVersion of format Major.Minor, e.g. 1.30",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/requiredVersion",
              "snippet": "requiredVersion ${1:version}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "resetCamShake",
              "description": "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resetCamShake"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Resets direction of subgroup.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resetSubgroupDirection",
              "snippet": "resetSubgroupDirection ${1:unit}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "resistance",
              "description": "Resistance side. \nWhen used in a format statement (hint format[\"%1\",resistance]), the string returned is \"GUER\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resistance"
            },
            {
              "leftLabel": "array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements. If the new size is bigger than the current size, the new places are filled with nils.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resize",
              "snippet": "resize ${2:count}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the resources of a team member. Results are local to the PC on which command was executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/resources",
              "snippet": "resources ${1:member}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction. If respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker. \n\nNOTE: Command has to be executed where vehicle is local",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/respawnVehicle",
              "snippet": "respawnVehicle ${2:[${3:delay}, ${4:count}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Restarts the mission editor camera (if it was deleted by a script,for example).\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/restartEditorCamera",
              "snippet": "restartEditorCamera ${1:map}$0"
            },
            {
              "leftLabel": "toWhom ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.  \n\nThe knowledge value will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has no knowledge about the revealed target, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too.\n\nThe knowledge level can only be increased, not decreased by this command.\n\nIn MP targetKnowledge and knowsAbout infos get updated only on the PC where command was executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reveal",
              "snippet": "reveal ${2:target}$0"
            },
            {
              "leftLabel": "toWhom ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.  \n\nThe knowledge value will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has no knowledge about the revealed target, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too.\n\nThe knowledge level can only be increased, not decreased by this command.\n\nIn MP targetKnowledge and knowsAbout infos get updated only on the PC where command was executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reveal",
              "snippet": "reveal [${2:target}, ${3:accuracy}]$0"
            },
            {
              "leftLabel": "side ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/revealMine",
              "snippet": "revealMine ${2:mine}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Reverses given array by reference (modifies the original array, just like resize).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reverse",
              "snippet": "reverse ${1:array}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "reversedMouseY",
              "description": "Return if mouse vertical axe is inverted.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/reversedMouseY"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roadAt",
              "snippet": "roadAt ${1:position}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find the road segments connected to the given road segment.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roadsConnectedTo",
              "snippet": "roadsConnectedTo ${1:roadSegment}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/roleDescription",
              "snippet": "roleDescription ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list of attached objects on ropes",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachedObjects",
              "snippet": "ropeAttachedObjects ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the object it is attached to by rope",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachedTo",
              "snippet": "ropeAttachedTo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if vehicle can be attached to ropes",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachEnabled",
              "snippet": "ropeAttachEnabled ${1:vehicle}$0"
            },
            {
              "leftLabel": "[veh, toPoint, ropeEndDownDir] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach vehicle to rope with optional offset",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeAttachTo",
              "snippet": "ropeAttachTo ${4:rope}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a rope (PhysX rope in Arma 3).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate",
              "snippet": "ropeCreate ${1:[${2:fromObject}, ${3:fromPoint}, ${4:toObject}, ${5:toPoint}, ${6:segments}, ${7:length}]}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a rope (PhysX rope in Arma 3).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCreate",
              "snippet": "ropeCreate [${2:fromObject}, ${3:fromPoint}, ${4:length}, ${5:segments}, ${6:unroll}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cut rope and detach rope from vehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeCut",
              "snippet": "ropeCut [${1:rope}, ${2:distance}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Destroy a rope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeDestroy",
              "snippet": "ropeDestroy ${1:rope}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Detach a rope from an object.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeDetach",
              "snippet": "ropeDetach ${2:rope}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return rope end positions in Position3D format",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeEndPosition",
              "snippet": "ropeEndPosition ${1:rope}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeLength",
              "snippet": "ropeLength ${1:rope}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a vehicle's rope objects in an Array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropes",
              "snippet": "ropes ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the simulated mass of an object attached to a rope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeSetCargoMass",
              "snippet": "ropeSetCargoMass [${1:rope}, ${2:cargo}, ${3:mass}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unwind rope to target length. Use relative parameter for changing rope length +/- from current length",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeUnwind",
              "snippet": "ropeUnwind [${1:rope}, ${2:speed}, ${3:targetLength}, ${4:relative}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "False if unwinding in progress, otherwise true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/ropeUnwound",
              "snippet": "ropeUnwound ${1:rope}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns force produced by rotors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rotorsForcesRTD",
              "snippet": "rotorsForcesRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns rotors RPM",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/rotorsRpmRTD",
              "snippet": "rotorsRpmRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Rounds up or down to the closest integer.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/round",
              "snippet": "round ${1:x}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "runInitScript",
              "description": "Launch init.sqs or init.sqf scripts.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/runInitScript"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "SafeZoneH",
              "description": "Returns the height of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the Y axis, the value will be positive but resulting Y will end up beyond the bottom border. Therefore in order to calculate Y of the bottom screen border, the length of safeZoneY must be subtracted from safeZoneH, but because it is negative, it must be added instead. _screenBottomBorderY = safeZoneH + safeZoneY. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneH"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "safeZoneW",
              "description": "Returns the width of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the X axis, the value will be positive but resulting X will end up beyond the right border. Therefore in order to calculate X of the right screen border, the length of safeZoneX must be subtracted from safeZoneW, but because it is negative, it must be added instead. _screenRightBorderX = safeZoneW + safeZoneX. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneW"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "safeZoneWAbs",
              "description": "Returns SafeZone width (of all monitors, in case there's more than one)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneWAbs"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "SafeZoneX",
              "description": "Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the left border of the screen. Since it is going in opposite way of the X axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneX"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "safeZoneXAbs",
              "description": "Returns SafeZone left border (of all monitors, in case there's more than one)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneXAbs"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "SafeZoneY",
              "description": "Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the top border of the screen. Since it is going in opposite way of the Y axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/safeZoneY"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Saves current state of entitie's inventory to SQM.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/save3DENInventory",
              "snippet": "save3DENInventory ${1:entities}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "saveGame",
              "description": "Autosave game (used for Retry).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveGame"
            },
            {
              "leftLabel": "(Boolean) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Saves person's identity to Objects.sav file in campaign directory as entry name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveIdentity",
              "snippet": "saveIdentity ${2:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "saveJoysticks",
              "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveJoysticks"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Save the current overlay.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveOverlay",
              "snippet": "saveOverlay ${1:map}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "saveProfileNamespace",
              "description": "Saves the variables stored in profileNamespace to the persistent active user profile. \n\n Warning: this is a file operation, which makes it expensive! It is not recommended to do this at a high frequency in a loop for example. It is however also recommended not to change a large amount of variables and wait long before saving, because certain game crashes may cause a loss of data. \n\n Warning: saving a lot of data can quickly increase the size of the profile variables file, so keep an eye on this.\n\n Warning: TKOH's Heliport status (used in the Career mode for example) is stored in this file, so be mindful of working with this technology to avoid losing data and progress.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveProfileNamespace"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Saves object's properties to Objects.sav file in campaign directory as entry name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveStatus",
              "snippet": "saveStatus ${2:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Save variable value into the campaign space. This variable is available to all following missions in the campaign.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/saveVar",
              "snippet": "saveVar ${1:varname}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "savingEnabled",
              "description": "Check if saving the game is enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/savingEnabled"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit will say given sound.\n\nWhen the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA unit that has been killed or does not exist will not say anything.\n\nCompare this with playSound which will always play a sound at the location of the player.\n\nIf the camera is not within given range, title is not shown and the sound will not be heard.\n\nSound is defined in CfgSound of the Description.ext.\n\nNOTE: say will mimic either say2D or say3D depending on whether it is there executed in a cut scene or in a game scene.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "snippet": "say ${2:sound}$0"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit will say given sound.\n\nWhen the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA unit that has been killed or does not exist will not say anything.\n\nCompare this with playSound which will always play a sound at the location of the player.\n\nIf the camera is not within given range, title is not shown and the sound will not be heard.\n\nSound is defined in CfgSound of the Description.ext.\n\nNOTE: say will mimic either say2D or say3D depending on whether it is there executed in a cut scene or in a game scene.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "snippet": "say ${2:[${3:sound}, ${4:maxTitlesDistance}, ${5:speed}]}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit will say given sound.\n\nWhen the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA unit that has been killed or does not exist will not say anything.\n\nCompare this with playSound which will always play a sound at the location of the player.\n\nIf the camera is not within given range, title is not shown and the sound will not be heard.\n\nSound is defined in CfgSound of the Description.ext.\n\nNOTE: say will mimic either say2D or say3D depending on whether it is there executed in a cut scene or in a game scene.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "snippet": "say ${4:sound}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit will say given sound.\n\nWhen the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA unit that has been killed or does not exist will not say anything.\n\nCompare this with playSound which will always play a sound at the location of the player.\n\nIf the camera is not within given range, title is not shown and the sound will not be heard.\n\nSound is defined in CfgSound of the Description.ext.\n\nNOTE: say will mimic either say2D or say3D depending on whether it is there executed in a cut scene or in a game scene.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say",
              "snippet": "say ${4:[${5:sound}, ${6:maxTitlesDistance}, ${7:speed}]}$0"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays given sound in 2D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "snippet": "say2D ${2:sound}$0"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays given sound in 2D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "snippet": "say2D ${2:[${3:sound}, ${4:maxTitlesDistance}, ${5:speed}]}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays given sound in 2D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "snippet": "say2D ${4:sound}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Plays given sound in 2D",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say2D",
              "snippet": "say2D ${4:[${5:sound}, ${6:maxTitlesDistance}, ${7:speed}]}$0"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.\nNOTE: You can stop say3D sound currently playing in 2 ways: delete the source of the sound (from) with deleteVehicle or kill the source with setDamage for example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "snippet": "say3D ${2:sound}$0"
            },
            {
              "leftLabel": "from ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.\nNOTE: You can stop say3D sound currently playing in 2 ways: delete the source of the sound (from) with deleteVehicle or kill the source with setDamage for example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "snippet": "say3D ${2:[${3:sound}, ${4:maxDistance}, ${5:pitch}]}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.\nNOTE: You can stop say3D sound currently playing in 2 ways: delete the source of the sound (from) with deleteVehicle or kill the source with setDamage for example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "snippet": "say3D ${4:sound}$0"
            },
            {
              "leftLabel": "[from, to] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.\nNOTE: You can stop say3D sound currently playing in 2 ways: delete the source of the sound (from) with deleteVehicle or kill the source with setDamage for example.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/say3D",
              "snippet": "say3D ${4:[${5:sound}, ${6:maxDistance}, ${7:pitch}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like breakOut and breakTo. Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scopeName",
              "snippet": "scopeName ${1:name}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the person's score in MP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/score",
              "snippet": "score ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns score for the given side. MP Only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scoreSide",
              "snippet": "scoreSide ${1:side}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Captures a screenshot and stores it to given filename. PNG is the only available format and the file must have .png extension. \n\nThe file is saved into Screenshots folder in the Profile directory. The folder is by default limited to 250 MB to prevent abuse.\n\nTo increase the limit, add the following line at the end of the profile file:\nmaxScreenShotFolderSizeMB = 2000;\n2000 can be replaced by any value in MB.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/screenshot",
              "snippet": "screenshot ${1:filename}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/screenToWorld",
              "snippet": "screenToWorld ${1:screen}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if a script is finished running using the Script_(Handle) returned by execVM or spawn.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptDone",
              "snippet": "scriptDone ${1:handle}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assign a user friendly name to the VM script this command is executed from.\n\nOnce name is assigned, it cannot be changed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptName",
              "snippet": "scriptName ${1:name}$0"
            },
            {
              "leftLabel": "(Script) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "scriptNull",
              "description": "A non-existing Script or script that has finished (scriptDone). To compare non-existent scripts use isNull or isEqualTo:\n scriptNull == scriptNull; // ERROR! == cannot be used with script object\n isNull scriptNull; // true\n scriptNull isEqualTo scriptNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scriptNull"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Current state of given Scud launcher. Following states are recognized: \n\n0 - No activity  \n1 - Launch preparation, \n2 - Launch prepared\n3 - Ignition  \n4 - Launched.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/scudState",
              "snippet": "scudState ${1:scudName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of a unit's secondary weapon (empty string if none).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeapon",
              "snippet": "secondaryWeapon ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeaponItems",
              "snippet": "secondaryWeaponItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no secondary weapon or secondary weapon is not loaded. This command is used for infantry weapons only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/secondaryWeaponMagazine",
              "snippet": "secondaryWeaponMagazine ${1:unit}$0"
            },
            {
              "leftLabel": "(Anything) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:index}$0"
            },
            {
              "leftLabel": "(Anything) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:boolean}$0"
            },
            {
              "leftLabel": "(Config) = config ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:index}$0"
            },
            {
              "leftLabel": "(String) = string ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:[${3:start}, length]}$0"
            },
            {
              "leftLabel": "(Array) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:[${3:start}, ${4:count}]}$0"
            },
            {
              "leftLabel": "(Array) = array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects an element from an array, config entry from Config or substring from a string or a range from an array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/select",
              "snippet": "select ${2:expression}$0"
            },
            {
              "leftLabel": "(Array, Position, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectBestPlaces",
              "snippet": "selectBestPlaces ${1:[${2:position}, ${3:radius}, ${4:expression}, ${5:precision}, ${6:sourcesCount}]}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select the subject page in a log.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectDiarySubject",
              "snippet": "selectDiarySubject ${2:subject}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a list of currently selected editor objects. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectedEditorObjects",
              "snippet": "selectedEditorObjects ${1:map}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select an editor object. Does not un-select previously selected objects. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectEditorObject",
              "snippet": "selectEditorObject ${2:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the list of model selections",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionNames",
              "snippet": "selectionNames ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Search for selection in the object model (first in the memory level, then in geometry LODs).\n\nReturns position in model space. In A1 it returns the initial position of the selection, in A2/3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionPosition",
              "snippet": "selectionPosition ${2:selectionName}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Search for selection in the object model (first in the memory level, then in geometry LODs).\n\nReturns position in model space. In A1 it returns the initial position of the selection, in A2/3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectionPosition",
              "snippet": "selectionPosition ${2:[${3:selectionName}, ${4:LODName}]}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Select a group's leader. In MP the group has to be local to the PC executing the command. Locality of the group can be checked with local command and group ownership with groupOwner command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectLeader",
              "snippet": "selectLeader ${2:unitName}$0"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0.  nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectMax",
              "snippet": "selectMax ${1:array}$0"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only.  Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectMin",
              "snippet": "selectMin ${1:array}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "selectNoPlayer",
              "description": "Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectNoPlayer"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves player into given unit. In Arma 3 it is now not possible to selectPlayer into unit occupied by another player. Also avoid selecting player into editor placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour. If you need to selectPlayer into another unit, consider creatingUnit dynamically.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectPlayer",
              "snippet": "selectPlayer ${1:unitName}$0"
            },
            {
              "leftLabel": "(Anything) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandom",
              "snippet": "selectRandom ${1:array}$0"
            },
            {
              "leftLabel": "(Anything, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:\n Negative weights are not supported\n If an item's weight is 0, the item is ignored\n The weights don't have to total to 1 \n If numbers of items and weights do not match, the shortest array is used\n A single array Syntax is slightly faster then Alt Syntax",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandomWeighted",
              "snippet": "selectRandomWeighted ${1:valuesAndWeights}$0"
            },
            {
              "leftLabel": "(Anything, Nothing) = values ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:\n Negative weights are not supported\n If an item's weight is 0, the item is ignored\n The weights don't have to total to 1 \n If numbers of items and weights do not match, the shortest array is used\n A single array Syntax is slightly faster then Alt Syntax",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectRandomWeighted",
              "snippet": "selectRandomWeighted ${2:weights}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the given weapon.\n\nNote: For weapons that have more than one muzzle, you have to input the muzzlename and not the weaponName.\n\nThe only weapons that have muzzleNames seem to be rifles with grenade launchers, handgrenades, smokeshells and satchels.\n\nIn all other cases the weaponName must be used.\nFortunately, in OFP, in most cases, both names are the same. But check.\n\nIn ArmA the weaponNames and muzzleNames are different.\n\nFor muzzle names see cfgWeapons. \n\nNOTE: The unit must be local to the PC on which command is executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectWeapon",
              "snippet": "selectWeapon ${2:muzzleName}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/selectWeaponTurret",
              "snippet": "selectWeaponTurret ${2:[${3:weapon}, ${4:turretPath}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send the command to the list of clients.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendAUMessage",
              "snippet": "sendAUMessage ${1:[${2:clientList}, ${3:command}]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends a simple command to the vehicle's driver / gunner. The player executing command should be in the vehicle.\nGunner commands\n \"FIRE\"\n \"CEASE FIRE\"\n \"MANUAL FIRE\"\n \"CANCEL MANUAL FIRE\"\n \"KEY FIRE\"\nDriver commands\n \"FORWARD\" - move forward\n \"FAST\" - move forward, fast\n \"SLOW\" - move forward, slow\n \"STOP\" - stop moving forward or backward\n \"BACK\" - move backward\n \"LEFT\" - turn left, while moving or not\n \"RIGHT\" - turn right, while moving or not\n \"STOPTURNING\" - cancel turning  (special case, normally would be called by the engine when LEFT or RIGHT turn key is released by the player) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(since Arma 3 v1.77)\n \"KEY UP\"\n \"KEY DOWN\"\n \"KEY FAST\"\n \"KEY SLOW\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendSimpleCommand",
              "snippet": "sendSimpleCommand ${2:command}$0"
            },
            {
              "leftLabel": "(Task) = sender ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendTask",
              "snippet": "sendTask ${2:[receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send a result of the task to the task sender.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendTaskResult",
              "snippet": "sendTaskResult ${2:[state,result,sentence]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send message to given address using UDP protocol. Returns false if the message has not been delivered \n\nNote: Not implemented (see talk page for more info).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sendUDPMessage",
              "snippet": "sendUDPMessage [${1:ip}, ${2:port}, ${3:message}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes a server command. Which command is available for execution can be found with serverCommandAvailable and whether or not it can be executed with serverCommandExecutable. \n\nIf serverCommand is executed on a client, it must be executed from UI event handler (ctrlAddEventHandler, displayAddEventHandler), such as onButtonDown or other User_Interface_Event_Handlers. \n\nAs of Arma 3 v1.39 serverCommand can be used on dedicated server and headless clients. This requires a password, both set in server.cfg and passed to the command itself (See Alt Syntax).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommand",
              "snippet": "serverCommand ${1:command}$0"
            },
            {
              "leftLabel": "(Boolean) = password ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Executes a server command. Which command is available for execution can be found with serverCommandAvailable and whether or not it can be executed with serverCommandExecutable. \n\nIf serverCommand is executed on a client, it must be executed from UI event handler (ctrlAddEventHandler, displayAddEventHandler), such as onButtonDown or other User_Interface_Event_Handlers. \n\nAs of Arma 3 v1.39 serverCommand can be used on dedicated server and headless clients. This requires a password, both set in server.cfg and passed to the command itself (See Alt Syntax).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommand",
              "snippet": "serverCommand ${2:command}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if given serverCommand is available on current machine, false if not. Here is the general table of availability of Arma 3 server commands:\n\n Available to anyone\n#login, #userlist,  #beclient,  #vote\n Available to any admin (voted in / logged in) or server host\n#kick, #debug\n Available to logged in admin or server host\n#lock, #unlock, #maxping, #maxdesync, #maxpacketloss\n Available to any admin (voted in / logged in)\n#logout, #restart, #mission, #missions, #reassign, #monitor, #init\n Available to logged in admin\n#shutdown, #restartserver, #exec, #beserver, #monitords, #logentities, #exportjipqueue\n Available to logged in admin on certain game builds\n#captureframe, #enabletest, #disabletest\nTo check if server command could be executed in current environment use serverCommandExecutable. For more information on what each server command does, see Multiplayer Server Commands.\nNOTE: When password variant of serverCommand is used on dedicated server, the table above does not apply as everything is available to it.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommandAvailable",
              "snippet": "serverCommandAvailable ${1:command}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverCommandExecutable",
              "snippet": "serverCommandExecutable ${1:command}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "serverName",
              "description": "Returns name of the hosting server in MP, \"\" in SP.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverName"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "serverTime",
              "description": "Server time synchronized to clients. Returns always 0 in Singleplayer.\nNote that in ArmA2 1.05 Final, this command only returns the time since the Server was actually started.\n\nNOTE: serverTime is available to both server and clients and shows the same value when synced. The only time it is not synced is on the server, right after server restart and only for the first 300 seconds. Client side serverTime is synced from the start. serverTime is also different from server time and server diag_tickTime",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/serverTime"
            },
            {
              "leftLabel": "array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the element at the given (zero-based) index of the array.\nIf the element does not exist, resize index+1 is called to create it.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set",
              "snippet": "set ${2:[${3:index}, ${4:value}]}$0"
            },
            {
              "leftLabel": "(Boolean) = entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set one of entity attributes.\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENAttribute",
              "snippet": "set3DENAttribute [${2:class}, ${3:value}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set entity attributes.\n\nAn attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENAttributes",
              "snippet": "set3DENAttributes [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the grid increment for the given transformation type.\nTransformation types:\n Rotation - \"r\"\n Translation - \"t\"\n Scale - \"s\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENGrid",
              "snippet": "set3DENGrid [${1:type},${2:value}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle visibility of Eden Editor icons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENIconsVisible",
              "snippet": "set3DENIconsVisible [${2:showMap}, ${1:showScene}]$0"
            },
            {
              "leftLabel": "(Boolean) = entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set layer for Eden Entity.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLayer",
              "snippet": "set3DENLayer ${2:layerID}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle visibility of Eden Editor lines.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLinesVisible",
              "snippet": "set3DENLinesVisible [${2:showMap}, ${1:showScene}]$0"
            },
            {
              "leftLabel": "objects ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the new type of Logic object(s). For other objects use set3DENObjectType",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENLogicType",
              "snippet": "set3DENLogicType ${2:classname}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set scenario attribute.\n\nAn attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENMissionAttribute",
              "snippet": "set3DENMissionAttribute [<${2:class}>,<${3:value}>]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set scenario attributes.\n\nAn attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.\n\n\n\n\n\n\u00a0!\n\n Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENMissionAttributes",
              "snippet": "set3DENMissionAttributes [[<${1:section}>,<class1>,<value1>], ..., [<${1:section} >,<classN>,<valueN>]]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables lines visibility in 3DEN",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENModelsVisible",
              "snippet": "set3DENModelsVisible [${1:map}, ${2:scene}]$0"
            },
            {
              "leftLabel": "objects ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENObjectType",
              "snippet": "set3DENObjectType ${2:classname}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes selection in 3den to what is inside entities array.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/set3DENSelected",
              "snippet": "set3DENSelected ${1:entities}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAccTime",
              "snippet": "setAccTime ${1:accFactor}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed).\n 0: collective fully down\n ~0.7: approximate stable hover position\n 1: collective fully up",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setActualCollectiveRTD",
              "snippet": "setActualCollectiveRTD ${2:value}$0"
            },
            {
              "leftLabel": "airplane ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a wanted throttle position, works only on player's vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirplaneThrottle",
              "snippet": "setAirplaneThrottle ${2:value}$0"
            },
            {
              "leftLabel": "id ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirportSide",
              "snippet": "setAirportSide ${2:side}$0"
            },
            {
              "leftLabel": "target ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAirportSide",
              "snippet": "setAirportSide ${2:side}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmo",
              "snippet": "setAmmo ${2:[${3:weapon}, ${4:count}]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.\n\nThe actual quantity to work with is determined by the model's class in CfgVehicles",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmoCargo",
              "snippet": "setAmmoCargo ${2:ammoCargo}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set count of ammo in magazine on pylon",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAmmoOnPylon",
              "snippet": "setAmmoOnPylon ${2:[pylon name/index, ammo count]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set aimPrecision value of the current animation state (parameter aimPrecision)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAnimAimPrecision",
              "snippet": "setAnimAimPrecision ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a coefficient for animation speed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAnimSpeedCoef",
              "snippet": "setAnimSpeedCoef ${2:coef}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets custom camera aperture (-1 to do it automatically).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAperture",
              "snippet": "setAperture ${1:aperture}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets custom camera aperture ([-1] to do it automatically).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setApertureNew",
              "snippet": "setApertureNew ${1:[${2:min}, ${3:std}, ${4:max}, ${5:stdLum}]}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Let the Auxiliary Power Unit (APU) reach a desired state over the given period of time. \n 0: fully off \n 1: fully powered up",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAPURTD",
              "snippet": "setAPURTD [${2:value}, ${3:time}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setArmoryPoints",
              "snippet": "setArmoryPoints ${1:points}$0"
            },
            {
              "leftLabel": "(Structured Text) = text ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a structured text created by the given structured or plain text by setting attributes to the given values.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAttributes",
              "snippet": "setAttributes ${2:[name1, value1, name2, value2, ...]}$0"
            },
            {
              "leftLabel": "uav ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets UAV autonomous mode.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setAutonomous",
              "snippet": "setAutonomous ${2:bool}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the actual battery charge of a helicopter.\n 0: no charge\n 1: fully charged",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBatteryChargeRTD",
              "snippet": "setBatteryChargeRTD ${2:charge}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle a helicopter's electrical systems on and off.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBatteryRTD",
              "snippet": "setBatteryRTD ${2:enable}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of: \n\n\"CARELESS\"\n\"SAFE\"\n\"AWARE\"\n\"COMBAT\"\n\"STEALTH\". \nSee this page for details of the effect of this command on AI units. For Arma 3 see Arma_3_AI_Behavior",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBehaviour",
              "snippet": "setBehaviour ${2:behaviour}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBleedingRemaining",
              "snippet": "setBleedingRemaining ${2:time}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable landing gear wheel brakes for a helicopter.\n value 0: brakes off\n value 1: brakes on\n\n index 1: left wheels\n index 2: right wheels\n index 3: both sides\n\nNote: this command is implemented, but not fully supported yet. Stay tuned for a future update.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setBrakesRTD",
              "snippet": "setBrakesRTD [${2:value}, ${3:wheelIndex}]$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Name defines the effect type (a subclass of CfgCameraEffects.Array):\n\n\"TERMINATE\",\n\"INTERNAL\",\n\"ZOOMIN\",\n\"ZOOMINSLOW\",\n\"AROUND\",\n\"AROUNDSLOW\",\n\"ZOOMANDAROUND\",\n\"AROUNDANDZOOMINSLOW\",\n\"ZOOMINS\",\n\"FIXED\",\n\"FIXEDWITHZOOM\",\n\"EXTERNAL\"\n\"$TERMINATE$\" to cancel the current effect.\n\nPlacement is camera placement: \n\n\"TOP\",\n\"LEFT\",\n\"RIGHT\", \n\"FRONT\",\n\"BACK\", \n\"LEFT FRONT\", \n\"RIGHT FRONT\",\n\"LEFT BACK\",\n\"RIGHT BACK\",\n\"LEFT TOP\",\n\"RIGHT TOP\",\n\"FRONT TOP\",\n\"BACK TOP\"\n\"BOTTOM\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraEffect",
              "snippet": "setCameraEffect ${2:[${3:name}, ${4:position}]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Name defines the effect type (a subclass of CfgCameraEffects.Array):\n\n\"TERMINATE\",\n\"INTERNAL\",\n\"ZOOMIN\",\n\"ZOOMINSLOW\",\n\"AROUND\",\n\"AROUNDSLOW\",\n\"ZOOMANDAROUND\",\n\"AROUNDANDZOOMINSLOW\",\n\"ZOOMINS\",\n\"FIXED\",\n\"FIXEDWITHZOOM\",\n\"EXTERNAL\"\n\"$TERMINATE$\" to cancel the current effect.\n\nPlacement is camera placement: \n\n\"TOP\",\n\"LEFT\",\n\"RIGHT\", \n\"FRONT\",\n\"BACK\", \n\"LEFT FRONT\", \n\"RIGHT FRONT\",\n\"LEFT BACK\",\n\"RIGHT BACK\",\n\"LEFT TOP\",\n\"RIGHT TOP\",\n\"FRONT TOP\",\n\"BACK TOP\"\n\"BOTTOM\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraEffect",
              "snippet": "setCameraEffect ${2:[${3:name}, ${4:position}]}$0"
            },
            {
              "leftLabel": "entity ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCameraInterest",
              "snippet": "setCameraInterest ${2:interest}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamShakeDefParams",
              "snippet": "setCamShakeDefParams [${1:power}, ${2:duration}, ${3:frequency}, ${4:minSpeed}, ${5:minMass}, ${6:caliberCoefHit}, ${7:vehicleCoef}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set camera shake parameters. \nWill not have any effect until shake is started via addCamShake.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamShakeParams",
              "snippet": "setCamShakeParams [${1:posCoef}, ${2:vertCoef}, ${3:horzCoef}, ${4:bankCoef}, ${5:interpolation}]$0"
            },
            {
              "leftLabel": "Bool ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Activates thermal vision. Mode index defines what sort of thermal vision it is:\n 0 - White Hot\n 1 - Black Hot\n 2 - Light Green Hot / Darker Green cold\n 3 - Black Hot / Darker Green cold\n 4 - Light Red Hot /Darker Red Cold\n 5 - Black Hot / Darker Red Cold\n 6 - White Hot . Darker Red Cold\n 7 - Thermal (Shade of Red and Green, Bodies are white) \nThis command only works with camCreate created camera that is currently the main camera for the player (see example).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCamUseTI",
              "snippet": "setCamUseTI ${2:modeIndex}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.\n\nUsing a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.). The numbered status syntax was introduced in Arma 2.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCaptive",
              "snippet": "setCaptive ${2:status}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.\n\nUsing a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.). The numbered status syntax was introduced in Arma 2.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCaptive",
              "snippet": "setCaptive ${2:status}$0"
            },
            {
              "leftLabel": "myObject ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCenterOfMass",
              "snippet": "setCenterOfMass [${2:com}, ${3:time}]$0"
            },
            {
              "leftLabel": "myObject ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCenterOfMass",
              "snippet": "setCenterOfMass ${2:com}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches collision lights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"CollisionLightOn\"/\"CollisionLightOff\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCollisionLight",
              "snippet": "setCollisionLight ${2:set}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group combat mode (engagement rules).\nMode may be one of: \n \"BLUE\" (Never fire)\n \"GREEN\" (Hold fire - defend only)\n \"WHITE\" (Hold fire, engage at will)\n \"YELLOW\" (Fire at will)\n \"RED\" (Fire at will, engage at will)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCombatMode",
              "snippet": "setCombatMode ${2:mode}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets compass oscillation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCompassOscillation",
              "snippet": "setCompassOscillation ${1:[${2:angle}, ${3:frequencyMin}, ${4:frequencyMax}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the distance to keep to the vehicle which is in front.\nThis command has to be applied to all vehicles in a convoy in order to have a separation of, for example, 50 m. \nVehicles in a convoy can also have different distances.\nIt's recommended that small values (<10m) should only be used for slowly moving convoys, otherwise AI driven vehicles will leave the road frequently to avoid collisions",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setConvoySeparation",
              "snippet": "setConvoySeparation ${2:distance}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets maximal height to which curator camera can move.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorCameraAreaCeiling",
              "snippet": "setCuratorCameraAreaCeiling ${2:height}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorCoef",
              "snippet": "setCuratorCoef ${2:[${3:action},${4:coef}]}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorEditingAreaType",
              "snippet": "setCuratorEditingAreaType ${2:bool}$0"
            },
            {
              "leftLabel": "curatorObj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets cost of waypoints (used for placing, editing and deleting).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCuratorWaypointCost",
              "snippet": "setCuratorWaypointCost ${2:cost}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure. Correspondence between channel and number:\n 0 = Global\n 1 = Side\n 2 = Command\n 3 = Group\n 4 = Vehicle\n 5 = Direct\n 6-15 = Custom Radio (see radioChannelCreate)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentChannel",
              "snippet": "setCurrentChannel ${1:channel}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the task as a current task of the person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentTask",
              "snippet": "setCurrentTask ${2:task}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the currently active waypoint for a group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCurrentWaypoint",
              "snippet": "setCurrentWaypoint ${2:waypoint}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set custom aim precision coefficient for weapon sway",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCustomAimCoef",
              "snippet": "setCustomAimCoef ${2:coef}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setCustomWeightRTD",
              "snippet": "setCustomWeightRTD ${2:weight}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead. (This function is an alias of setDammage and was introduced to fix the obvious spelling error in the original function name)\nSince Arma 3 v1.67 there is an alternative syntax to this command allowing to switch off destruction effects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDamage",
              "snippet": "setDamage ${2:damage}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead. (This function is an alias of setDammage and was introduced to fix the obvious spelling error in the original function name)\nSince Arma 3 v1.67 there is an alternative syntax to this command allowing to switch off destruction effects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDamage",
              "snippet": "setDamage ${2:[${3:damage}, ${4:useEffects}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Damage / repair object.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead.\n\nAlias of setDamage, which was introduced to fix a spelling error in this operator's name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDammage",
              "snippet": "setDammage ${2:damage}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the actual mission date and time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDate",
              "snippet": "setDate ${1:[year, month, day, hour, minute]}$0"
            },
            {
              "leftLabel": "endType ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets debriefing text for endType defined in CfgDebriefing.\n\n\n\n\n\n \n\n  This command is broken. https://feedback.bistudio.com/T85682",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDebriefingText",
              "snippet": "setDebriefingText ${2:[${3:title}, ${4:description}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDefaultCamera",
              "snippet": "setDefaultCamera [${1:position}, ${2:direction}]$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the destination for path planning of the pilot.\n\nPossible values for planningMode are:\n\n \"DoNotPlan\" - used when not moving\n \"DoNotPlanFormation\" - used in formation when simple path testing is used\n \"LEADER PLANNED\" - used for formation leader (full path finding used)\n \"LEADER DIRECT\" - used for DirectGo (like getin, supply)\n \"FORMATION PLANNED\" - used in formation when full path finding is used\n \"VEHICLE PLANNED\" - used for vehicle driver\n\nWorks best when used on agents",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDestination",
              "snippet": "setDestination ${2:[${3:position}, ${4:planningMode}, ${5:forceReplan}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDetailMapBlendPars",
              "snippet": "setDetailMapBlendPars ${1:[${2:fullDetail}, ${3:noDetail}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets object heading. Angles are measured in degrees clockwise from north. The accepted heading range is from 0 to 360 Negative angles represent a counter-clockwise angle and the angle can be of any size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDir",
              "snippet": "setDir ${2:heading}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set's the orientation of a location. It's area and map icon (if it's type uses an icon) will be rotated to this orientation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDirection",
              "snippet": "setDirection ${2:direction}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDrawIcon",
              "snippet": "setDrawIcon ${2:[object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the path to follow for AI driver",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDriveOnPath",
              "snippet": "setDriveOnPath [${2:points}]$0"
            },
            {
              "leftLabel": "particleSource ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is 18000. Correspondence between CfgCloudlets class param name and command param:\nparticleSource setDropInterval interval;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDropInterval",
              "snippet": "setDropInterval ${2:interval}$0"
            },
            {
              "leftLabel": "category ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets activation distance of Arma_3_Dynamic_Simulation for given category",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDynamicSimulationDistance",
              "snippet": "setDynamicSimulationDistance ${2:distance}$0"
            },
            {
              "leftLabel": "class ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setDynamicSimulationDistanceCoef",
              "snippet": "setDynamicSimulationDistanceCoef ${2:multiplier}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets map mode to MAP,3D or PREVIEW. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEditorMode",
              "snippet": "setEditorMode ${2:mode}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "This command defines the level of access a user has to editor objects.\n\n\"objects\" is an array of either Editor Objects (eg [\"_unit_0\"]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects.\n\n\"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types.\n\n\"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member.\n\n\"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\".\n\n\"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEditorObjectScope",
              "snippet": "setEditorObjectScope ${2:[${3:objects}, ${4:editorType}, ${5:condition}, ${6:scope}, ${7:subordinatesAlso}]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\nIf the result is a boolean and true, the effect is launched.\nIf the result is an object, the effect is launched if the result is the player or the player vehicle.\nIf the result is an array, the effect is launched if the result contains the player or the player vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEffectCondition",
              "snippet": "setEffectCondition ${2:statement}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\nIf the result is a boolean and true, the effect is launched.\nIf the result is an object, the effect is launched if the result is the player or the player vehicle.\nIf the result is an array, the effect is launched if the result contains the player or the player vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEffectCondition",
              "snippet": "setEffectCondition ${2:statement}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Instantly set a helicopter's engine RPMs to the given value.\n engine index 0: engine #1\n engine index 1: engine #2\n engine index 2: engine #3\n engine index -1: all engines",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setEngineRPMRTD",
              "snippet": "setEngineRPMRTD [${2:value}, ${3:engineIndex}]$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set person's face. For a list of available faces, check Category:CfgIdentities.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFace",
              "snippet": "setFace ${2:face}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set facial animation phase (eye blinking), blink is in the range from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFaceAnimation",
              "snippet": "setFaceAnimation ${2:blink}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the person's fatigue, from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFatigue",
              "snippet": "setFatigue ${2:value}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable/disable object as a feature/landmark. Possible feature types:\n 0 - Feature disabled\n 1 - Object is always visible within object view distance\n 2 - Object is always visible within terrain view distance\nThe limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFeatureType",
              "snippet": "setFeatureType ${2:type}$0"
            },
            {
              "leftLabel": "flag ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use BIS_fnc_animateFlag",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagAnimationPhase",
              "snippet": "setFlagAnimationPhase ${2:phase}$0"
            },
            {
              "leftLabel": "flag ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole. A flag owned by a logic has no visual representation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagOwner",
              "snippet": "setFlagOwner ${2:owner}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns Side of the local instance of the flag. A getter for setFlagSide.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagSide",
              "snippet": "flagSide ${1:flag}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/flagTexture",
              "snippet": "flagTexture ${1:flagCarrier}$0"
            },
            {
              "leftLabel": "flag ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with setFlagTexture, if the command executed where unit is local effect of the command will be global and JIP compatible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagSide",
              "snippet": "setFlagSide ${2:side}$0"
            },
            {
              "leftLabel": "flag ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets flag texture.\n\nIf texture is \"\", flag is not drawn.\nCustom texture can be used, as long as it is in *.jpg format, and has dimensions of 200px*200px.\nThe page Flag Textures shows which textures are available in each game.\n\nNOTE: In MP this command has to be executed where Flag Pole is local. If you add Flag Pole in the editor, it will be local to the server, so executing setFlagTexture on the server will change flag texture on all clients. The command is also persistent and is synchronised for JIP clients.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFlagTexture",
              "snippet": "setFlagTexture ${2:texture}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog.\nNOTE: Since Arma 3 this command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.\nA little information about how Alt Syntax works. The fogValue is normal fog value that could be set independently with original setFog command. fogBase is the ASL altitude at which the fog will start. 0 is the sea level. fogDecay is how defined the fog start is. The more defined, the denser is the fog. 1 (or -1) are the max values. If it is positive the fog will be generated below fogBase line, if negative, above it. If fogDecay is small, the fog will transition more smoothly from no fog to full fog, and because of that it will cross fogBase line by quite a lot, depending on how small is fogDecay value. Current values of fogDecay and fogBase can be retrieved with fogParams",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFog",
              "snippet": "setFog ${2:fog}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog.\nNOTE: Since Arma 3 this command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.\nA little information about how Alt Syntax works. The fogValue is normal fog value that could be set independently with original setFog command. fogBase is the ASL altitude at which the fog will start. 0 is the sea level. fogDecay is how defined the fog start is. The more defined, the denser is the fog. 1 (or -1) are the max values. If it is positive the fog will be generated below fogBase line, if negative, above it. If fogDecay is small, the fog will transition more smoothly from no fog to full fog, and because of that it will cross fogBase line by quite a lot, depending on how small is fogDecay value. Current values of fogDecay and fogBase can be retrieved with fogParams",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFog",
              "snippet": "setFog ${2:[${3:fogValue}, ${4:fogDecay}, ${5:fogBase}]}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group formation.\nFormation is one of: \n \"COLUMN\"\n \"STAG COLUMN\"\n \"WEDGE\"\n \"ECH LEFT\"\n \"ECH RIGHT\"\n \"VEE\"\n \"LINE\"\n \"FILE\" (ArmA)\n \"DIAMOND\" (ArmA)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormation",
              "snippet": "setFormation ${2:formation}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the current task of the formation member.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormationTask",
              "snippet": "setFormationTask ${2:task}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overriden by movement direction.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFormDir",
              "snippet": "setFormDir ${2:heading}$0"
            },
            {
              "leftLabel": "side1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.\n\nIntended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. See also Side relations.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFriend",
              "snippet": "setFriend ${2:[${3:side2} , ${4:value}]}$0"
            },
            {
              "leftLabel": "teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set if given team member was inserted directly from editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFromEditor",
              "snippet": "setFromEditor ${2:fromEditor}$0"
            },
            {
              "leftLabel": "handle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set variable to given value in the variable space of given FSM.\nThe FSM handle is the number returned by the execFSM command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFSMVariable",
              "snippet": "setFSMVariable [${3:name}, ${4:value}]$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFuel",
              "snippet": "setFuel ${2:amount}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1)\nNote, the carrying capacity of each side's refuel trucks differ.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setFuelCargo",
              "snippet": "setFuelCargo ${2:amount}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group icons properties.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIcon",
              "snippet": "setGroupIcon [${2:id}, ${3:icon}, ${4:offset}]$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group icons parameters. [color,string,float,bool]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconParams",
              "snippet": "setGroupIconParams ${2:properties}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets if group icons raises onclick and onover events.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconsSelectable",
              "snippet": "setGroupIconsSelectable ${1:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets if group icons are visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIconsVisible",
              "snippet": "setGroupIconsVisible ${1:array}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a group's identity, how it will be displayed in chat, for example. While groups on the different sides can have identical ids, the groups on the same side cannot. When given id exists already, the group which currently has it will simply swap it with the current id of the group for which this id is intended. For example:\ngroup1 = createGroup west; \ngroup2 = createGroup west;\n\ngroup1 setGroupId [\"Active Group\"];\ngroup2 setGroupId [\"Inactive Group\"];\n\nsystemChat groupId group1; //\"Active Group\";\nsystemChat groupId group2; //\"Inactive Group\";\n\ngroup2 setGroupId [\"Active Group\"];\n\nsystemChat groupId group1; //\"Inactive Group\";\nsystemChat groupId group2; //\"Active Group\";\n\nThe identity setup could also consist of format keywords (marked with\u00a0%) and param keywords taken from CfgWorlds config. Basically it is like format command but with some special group keywords. For Arma 3 possible values are:\n\n%GroupSquad\n \"Squad1\" -> 1\n \"Squad2\" -> 2\n \"Squad3\" -> 3\n \"Squad4\" -> 4\n%GroupPlatoon\n \"Platoon1\" -> 1\n \"Platoon2\" -> 2\n \"Platoon3\" -> 3\n \"Platoon4\" -> 4\n%GroupCompany\n \"CompanyAlpha\" -> Alpha\n \"CompanyBravo\" -> Bravo\n \"CompanyCharlie\" -> Charlie\n \"CompanyDelta\" -> Delta\n \"CompanyEcho\" -> Echo\n \"CompanyFoxtrot\" -> Foxtrot\n \"CompanyGolf\" -> Golf\n \"CompanyHotel\" -> Hotel\n \"CompanyIndia\" -> India\n \"CompanyKilo\" -> Kilo\n \"CompanyLima\" -> Lima\n \"CompanyMike\" -> Mike\n \"CompanyNovember\" -> November\n \"CompanyOscar\" -> Oscar\n \"CompanyPapa\" -> Papa\n \"CompanyQuebec\" -> Quebec\n \"CompanyRomeo\" -> Romeo\n \"CompanySierra\" -> Sierra\n \"CompanyTango\" -> Tango\n \"CompanyUniform\" -> Uniform\n \"CompanyVictor\" -> Victor\n \"CompanyWhiskey\" -> Whiskey\n \"CompanyXray\" -> X-Ray\n \"CompanyYankee\" -> Yankee\n \"CompanyZulu\" -> Zulu\n%GroupNames\n \"Alpha\" -> Alpha\n \"Bravo\" -> Bravo\n \"Charlie\" -> Charlie\n \"Delta\" -> Delta\n \"Echo\" -> Echo\n \"Foxtrot\" -> Foxtrot\n \"Golf\" -> Golf\n \"Hotel\" -> Hotel\n \"November\" -> November\n \"Kilo\" -> Kilo\n \"Yankee\" -> Yankee\n \"Zulu\" -> Zulu\n \"Two\" -> Two\n \"Three\" -> Three\n \"Buffalo\" -> Buffalo\n \"Guardian\" -> Guardian\n \"Convoy\" -> Convoy\n \"Fox\" -> Fox\n%GroupColors\n \"GroupColor1\" -> Black\n \"GroupColor2\" -> Red\n \"GroupColor3\" -> Green\n \"GroupColor4\" -> Blue\n \"GroupColor5\" -> Yellow\n \"GroupColor6\" -> Orange\n \"GroupColor7\" -> Pink\n \"GroupColor0\" ->\n \"Six\" -> Six\n\nFor global variant of this command use setGroupIdGlobal.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupId",
              "snippet": "setGroupId ${2:[${3:nameFormat}, ${4:nameParam1}, ..., nameParamN]}$0"
            },
            {
              "leftLabel": "group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "A global equivalent of  setGroupId",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupIdGlobal",
              "snippet": "setGroupIdGlobal ${2:[${3:nameFormat}, ${4:nameParam1}, ..., nameParamN]}$0"
            },
            {
              "leftLabel": "(Boolean) = group ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the ownership of a group (and all its units) to a given client. Group leader can't be a player. Only works when called from a server. Returns true if locality was changed. For agents use setOwner command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGroupOwner",
              "snippet": "setGroupOwner ${2:clientID}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setGusts",
              "snippet": "setGusts ${2:value}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom. Command is not functional in ArmA 2.\n\n\n\n\n \n\n  This command is not implemented",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHideBehind",
              "snippet": "setHideBehind ${2:[${3:objectWhereHide}, ${4:hidePosition}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Damage / repair part of object. The object must be local to the computer where command is executed.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead. Note: Some part names are in Czech; see translation table.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHit",
              "snippet": "setHit ${1:[${3:part}, ${4:damage}, ${5:useEffects}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.\n 0: no damage\n 1: full damage",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHitIndex",
              "snippet": "setHitIndex [${2:hitPartIndex}, ${3:damage}, ${4:useEffects}]$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the current level of damage for a specific Hit Point (specified by its config class).\n 0: no damage\n 1: full damage\nSee also BIS_fnc_setHitPointDamage for setting hit with dependency",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHitPointDamage",
              "snippet": "setHitPointDamage [${3:hitPointName}, ${4:damage}, ${5:useEffects}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHorizonParallaxCoef",
              "snippet": "setHorizonParallaxCoef ${1:coef}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setHUDMovementLevels",
              "snippet": "setHUDMovementLevels [${2:minSpeed}, ${3:maxSpeed}, ${4:minAlt}, ${5:maxAlt}, ${6:minDir}, ${7:maxDir}, ${8:targetOrPosition}]$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set identity of person.\nIdentities are defined in Description.ext of the mission or campaign. For a list of available faces, glasses and speakers check Category:CfgIdentities.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setIdentity",
              "snippet": "setIdentity ${2:identity}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the importance value of location.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setImportance",
              "snippet": "setImportance ${2:value}$0"
            },
            {
              "leftLabel": "team ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLeader",
              "snippet": "setLeader ${2:leader}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set ambient color of light. This includes surfaces that face away from the light, unlike setLightColor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightAmbient",
              "snippet": "setLightAmbient ${2:[r, g, b]}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightAttenuation",
              "snippet": "setLightAttenuation ${2:[${3:start}, ${4:constant}, ${5:linear}, ${6:quadratic}, ${7:hardlimitstart}, ${8:hardlimitend}]}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set brightness of light.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightBrightness",
              "snippet": "setLightBrightness ${2:brightness}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set diffuse color of light. Illuminates surfaces that are facing the light.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightColor",
              "snippet": "setLightColor ${2:[r, g, b]}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets if light can be used during the day.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightDayLight",
              "snippet": "setLightDayLight ${2:bool}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets max distance where the flare is visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightFlareMaxDistance",
              "snippet": "setLightFlareMaxDistance ${2:distance}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets relative size of the flare for the light.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightFlareSize",
              "snippet": "setLightFlareSize ${2:size}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets intensity of light.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightIntensity",
              "snippet": "setLightIntensity ${2:value}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\nNOTE: This command will have no effect (even though the value of lightnings changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightnings",
              "snippet": "setLightnings ${2:value}$0"
            },
            {
              "leftLabel": "light ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets if light has flare.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLightUseFlare",
              "snippet": "setLightUseFlare ${2:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets parameters for helicopter rotor wash. Visually it affects how much the grass and bushes bend under a helicopter and how big is the area of the effect. Default [1.0, 1.0].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setLocalWindParams",
              "snippet": "setLocalWindParams ${1:[${2:strength}, ${3:diameter}]}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets ammo count to given amount for given turret.\n\n\n\n\n \n\n  Broken when vehicle has multiple magazines of the same type",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMagazineTurretAmmo",
              "snippet": "setMagazineTurretAmmo ${2:[magazineClass, ammoCount, turretPath]}$0"
            },
            {
              "leftLabel": "marker ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the marker alpha. The marker is modified on all computers in a network session.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerAlpha",
              "snippet": "setMarkerAlpha ${2:alpha}$0"
            },
            {
              "leftLabel": "marker ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the marker alpha. The marker is only modified on the computer where the command is called.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerAlphaLocal",
              "snippet": "setMarkerAlphaLocal ${2:alpha}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n \"Solid\"\n \"SolidFull\" (A3 only)\n \"Horizontal\"\n \"Vertical\"\n \"Grid\"\n \"FDiagonal\"\n \"BDiagonal\"\n \"DiagGrid\"\n \"Cross\"\n \"Border\"\n \"SolidBorder\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerBrush",
              "snippet": "setMarkerBrush ${2:brush}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n \"Solid\"\n \"SolidFull\" (A3 only)\n \"Horizontal\"\n \"Vertical\"\n \"Grid\"\n \"FDiagonal\"\n \"BDiagonal\"\n \"DiagGrid\"\n \"Cross\"\n \"Border\" (A2/A3 only)\n \"SolidBorder\" (OA/A3 only)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerBrushLocal",
              "snippet": "setMarkerBrushLocal ${2:brush}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerColor",
              "snippet": "setMarkerColor ${2:color}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerColorLocal",
              "snippet": "setMarkerColorLocal ${2:color}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the orientation of the marker. Angle is in degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerDir",
              "snippet": "setMarkerDir ${2:angle}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the orientation of the marker. Angle is in degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerDirLocal",
              "snippet": "setMarkerDirLocal ${2:angle}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the marker. Pos format is Position2D.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerPos",
              "snippet": "setMarkerPos ${2:pos}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the marker. Pos format is Position2D.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerPosLocal",
              "snippet": "setMarkerPosLocal ${2:pos}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the shape (type) of the marker.\n\nShape can be \"ICON\", \"RECTANGLE\", \"ELLIPSE\" or \"POLYLINE\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerShape",
              "snippet": "setMarkerShape ${2:shape}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Selects the shape (type) of the marker.\n\nShape can be \"ICON\", \"RECTANGLE\" or \"ELLIPSE\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerShapeLocal",
              "snippet": "setMarkerShapeLocal ${2:shape}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set marker size.\nSize is in format [a-axis, b-axis].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerSize",
              "snippet": "setMarkerSize ${2:[${3:a-axis}, ${4:b-axis}]}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set marker size.\nSize is in format [a-axis, b-axis].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerSizeLocal",
              "snippet": "setMarkerSizeLocal ${2:[${3:a-axis}, ${4:b-axis}]}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the text label of an existing marker.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerText",
              "snippet": "setMarkerText ${2:text}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the text label of an existing marker.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerTextLocal",
              "snippet": "setMarkerTextLocal ${2:text}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set marker type. See cfgMarkers for a list of standard markers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerType",
              "snippet": "setMarkerType ${2:type}$0"
            },
            {
              "leftLabel": "markerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set marker type. See cfgMarkers for a list of standard markers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMarkerTypeLocal",
              "snippet": "setMarkerTypeLocal ${2:type}$0"
            },
            {
              "leftLabel": "myObject ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMass",
              "snippet": "setMass ${2:[${3:mass}, ${4:time}]}$0"
            },
            {
              "leftLabel": "myObject ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMass",
              "snippet": "setMass ${2:mass}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set person's facial expression. Following mimic values are recognized: \n \"Default\"\n \"Normal\"\n \"Smile\"\n \"Hurt\"\n \"Ironic\"\n \"Sad\"\n \"Cynic\"\n \"Surprised\"\n \"Agresive\"\n \"Angry\"\n\nSince Arma 2 OA 1.6*, these values are used\u00a0:\n \"neutral\"\n \"dead\"\n \"danger\"\n \"hurt\"\n \"aware\"\n \"safe\"\n \"combat\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMimic",
              "snippet": "setMimic ${2:mimic}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMousePosition",
              "snippet": "setMousePosition ${1:[${2:x}, ${3:y}]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the music track played on activation.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEffect",
              "snippet": "setMusicEffect ${2:track}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the music track played on activation.\n\nTrack is a subclass name of CfgMusic. In addition, \"$STOP$\" (stops the current music track).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEffect",
              "snippet": "setMusicEffect ${2:track}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setMusicEventHandler",
              "snippet": "setMusicEventHandler ${1:[${2:type}, ${3:function}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "snippet": "setName ${2:name}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "snippet": "setName ${2:[${3:name}, ${4:firstName}, ${5:lastName}]}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setName",
              "snippet": "setName ${2:name}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the nameSound of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setNameSound",
              "snippet": "setNameSound ${2:name}$0"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set object arguments in mission editor.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectArguments",
              "snippet": "setObjectArguments ${2:[object,[name1,value1,...]]}$0"
            },
            {
              "leftLabel": "obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets material of object selection. The selection number is defined through the  hiddenselection[]={} array in the vehicle's config (starting with 0).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectMaterial",
              "snippet": "setObjectMaterial ${2:[${3:selectionNumber}, ${4:material}]}$0"
            },
            {
              "leftLabel": "obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the material of the given selection on all computers in a network session.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectMaterialGlobal",
              "snippet": "setObjectMaterialGlobal [${3:selection}, ${4:material}]$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the proxy object associated with the given editor object.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectProxy",
              "snippet": "setObjectProxy ${2:[object,proxy object]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Textures object selection with texture named in array. \n\nArray has the form [selectionNumber, \"Texture\"].\n\nThe selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).\nNOTES: \n Not all objects could be textured this way. To find out, run getObjectTextures command on an object. Empty array [] usually indicates it cannot be textured.\n All textures must have resolution 2^x / 2^y (e.g. 16 / 16, 16 / 32, 64 / 256, 512 / 512, etc). The largest texture size commonly supported by graphics cards and RV engine is 4096x4096 \n Supported formats: .pac, .paa, .jpg, .jpeg, .ogg, .ogv",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectTexture",
              "snippet": "setObjectTexture ${2:[${3:selectionNumber},${4:texture}]}$0"
            },
            {
              "leftLabel": "obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the texture of the given selection on all computers in a network session. NOTES: \n Do not put global commands such this one into init field in editor and expect it to work in Multiplayer. See Talk:setObjectTextureGlobal for the explanation.\n Not all objects could be textured this way. To find out, run getObjectTextures command on an object. Empty array [] usually indicates it cannot be textured.\n All textures must have resolution 2^x / 2^y (e.g. 16 / 16, 16 / 32, 64 / 256, 512 / 512, etc). The largest texture size commonly supported by graphics cards and RV engine is 4096x4096",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectTextureGlobal",
              "snippet": "setObjectTextureGlobal [${3:selection}, ${4:texture}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the rendering distance of objects (and shadows).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectViewDistance",
              "snippet": "setObjectViewDistance ${1:distance}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the rendering distance of objects (and shadows).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setObjectViewDistance",
              "snippet": "setObjectViewDistance ${1:[${2:objectDistance}, ${3:shadowDistance}]}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOvercast",
              "snippet": "setOvercast ${2:overcast}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "From server machine, change the ownership of an object to a given client. Returns true if locality was changed.\nSince Arma 3 v1.40, this command should not be used to transfer ownership of units with AI (agents are an exception to this rule). \nUsing command in an unintended way will display an on-screen warning and log a message to .rpt file.\nTo transfer ownership of all AI units in a group properly, use setGroupOwner instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOwner",
              "snippet": "setOwner ${2:clientID}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setOxygenRemaining",
              "snippet": "setOxygenRemaining ${2:value}$0"
            },
            {
              "leftLabel": "particleSource ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleCircle\n[\n\tcircleRadius,\n\tcircleVelocity\n];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleCircle",
              "snippet": "setParticleCircle ${2:[${3:radius}, ${4:velocity}]}$0"
            },
            {
              "leftLabel": "source ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set parameters from existing config class. ClassName is name of the class from CfgCloudlets. \n\nSince version 1.11.114706 you can use setParticleParams to overwrite many values set by config class, particularity those defined in ParticleArray.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleClass",
              "snippet": "setParticleClass ${2:className}$0"
            },
            {
              "leftLabel": "source ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set fire parameters to particle effect.\n\nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleFire\n[\n\tcoreIntensity,\n\tcoreDistance,\n\tdamageTime\n];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleFire",
              "snippet": "setParticleFire ${2:[${3:coreIntensity}, ${4:coreDistance}, ${5:damageTime}]}$0"
            },
            {
              "leftLabel": "particleSource ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set parameters to particle source. Array is in format ParticleArray. \n\nSince Arma 3 version 1.11.114706 you can use this command to overwrite many values set by setParticleClass, particularity those defined in ParticleArray. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleParams\n[\n\t[\n\t\tparticleShape,\n\t\tparticleFSNtieth,\n\t\tparticleFSIndex,\n\t\tparticleFSFrameCount,\n\t\tparticleFSLoop\n\t],\n\tanimationName,\n\tparticleType,\n\ttimerPeriod,\n\tlifeTime,\n\tposition,\n\tmoveVelocity,\n\trotationVelocity,\n\tweight,\n\tvolume,\n\trubbing,\n\tsize,\n\tcolor,\n\tanimationSpeed,\n\trandomDirectionPeriod,\n\trandomDirectionIntensity,\n\tonTimerScript,\n\tbeforeDestroyScript,\n\tthis,\n\tangle,\n\tonSurface,\n\tbounceOnSurface,\n\temissiveColor\n];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleParams",
              "snippet": "setParticleParams ${2:array}$0"
            },
            {
              "leftLabel": "particleSource ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params:\nparticleSource setParticleRandom\n[\n\tlifeTimeVar,\n\tpositionVar,\n\tmoveVelocityVar,\n\trotationVelocityVar,\n\tsizeVar,\n\tcolorVar,\n\trandomDirectionPeriodVar,\n\trandomDirectionIntensityVar,\n\tangleVar,\n\tbounceOnSurfaceVar\n];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setParticleRandom",
              "snippet": "setParticleRandom ${2:[lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraDirection",
              "snippet": "setPilotCameraDirection ${2:Vector3D}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraRotation",
              "snippet": "setPilotCameraRotation ${2:rotation}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. \nTo track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type.\nUsing objNull will unlock the camera",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotCameraTarget",
              "snippet": "setPilotCameraTarget ${2:target}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"LightOn\"/\"LightOff\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPilotLight",
              "snippet": "setPilotLight ${2:set}$0"
            },
            {
              "leftLabel": "name ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets Render Target's visual effect (Picture-in-Picture). \n 0: Normal - [0]\n 1: Night Vision - [1]\n 2: Thermal - [2]\n 3: Color Correction - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]\n 4: Mirror - [4] <currently not working>\n 5: Chromatic Aberration - [5, enabled, powerx, powery, (bool) aspectCorrection] <currently not working>\n 6: Film Grain - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] <currently not working>\n 7: Thermal Inverted [7]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPiPEffect",
              "snippet": "setPiPEffect ${2:[${3:effect}, optionalParam1, ..., optionalParamN]}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the pitch of a persons voice.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPitch",
              "snippet": "setPitch ${2:pitch}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch. \n\nNOTE: Currently in Arma 3 this command does nothing.\n\n\n\n\n \n\n  Doesn't work as intended",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlayable",
              "snippet": "setPlayable ${1:unitName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the time interval to wait on player respawn. It resets to mission default on mission start. In Single Player or when respawn type is GROUP or SIDE in Multiplayer, setting player respawn time has no effect and is always -1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPlayerRespawnTime",
              "snippet": "setPlayerRespawnTime ${1:interval}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets object position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPos",
              "snippet": "setPos ${2:pos}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the object position above sea level. The pos array uses the PositionASL format.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASL",
              "snippet": "setPosASL ${2:pos}$0"
            },
            {
              "leftLabel": "obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center. \n\n\n\n\n \n\n  Appears to be broken",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASL2",
              "snippet": "setPosASL2 ${2:pos}$0"
            },
            {
              "leftLabel": "obj ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosASLW",
              "snippet": "setPosASLW ${2:pos}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the position of an object relative to the terrain.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosATL",
              "snippet": "setPosATL ${2:pos}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the position of a location.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosition",
              "snippet": "setPosition ${2:pos}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPosWorld",
              "snippet": "setPosWorld ${2:position}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Will add missile to vehicle pylon, TransportPylonsComponent in config is required",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPylonLoadOut",
              "snippet": "setPylonLoadOut [pylon name/index, magazine name, forced, turret]$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Overrides default pylons priorities",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setPylonsPriority",
              "snippet": "setPylonsPriority [priority pylon1, priority pylon2, ...]$0"
            },
            {
              "leftLabel": "index ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRadioMsg",
              "snippet": "setRadioMsg ${2:text}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change. A rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7.\n\nNOTE: Since Arma 3 this command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRain",
              "snippet": "setRain ${2:rain}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRainbow",
              "snippet": "setRainbow ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRandomLip",
              "snippet": "setRandomLip ${2:bool}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets rank of given unit.\n\nPossible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL. \n\n\n\n\n\n \n\n  Since Arma 3 v1.67 this command is",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRank",
              "snippet": "setRank ${2:rank}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRectangular",
              "snippet": "setRectangular ${2:set}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set amount of repair resources in cargo space of repair vehicle.\nAmount 1 is full cargo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRepairCargo",
              "snippet": "setRepairCargo ${2:amount}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle a helicopter's rotor brake on or off.\n 0: off\n 1: on",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setRotorBrakeRTD",
              "snippet": "setRotorBrakeRTD ${2:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the shadows rendering distance.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setShadowDistance",
              "snippet": "setShadowDistance ${1:value}$0"
            },
            {
              "leftLabel": "projectile ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets vehicle and instigator pair for the given projectile.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setShotParents",
              "snippet": "setShotParents ${2:[${3:vehicle}, ${4:instigator}]}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a location's side. The default side is Unknown.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSide",
              "snippet": "setSide ${2:side}$0"
            },
            {
              "leftLabel": "taskID ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Makes the given task allways visible or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskAlwaysVisible",
              "snippet": "setSimpleTaskAlwaysVisible ${2:state}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskCustomData",
              "snippet": "setSimpleTaskCustomData [${2:IconPath}, ${3:tooltip}, ${4:description}]$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach descriptions to the simple task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskDescription",
              "snippet": "setSimpleTaskDescription ${2:[${3:description}, ${4:descriptionShort}, ${5:descriptionHUD}]}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach a destination to the simple task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskDestination",
              "snippet": "setSimpleTaskDestination ${2:pos}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach a target to the simple task.Overrides setSimpleTaskDestination.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskTarget",
              "snippet": "setSimpleTaskTarget [${2:target}, ${3:precisePosition}]$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach type to the simple task. See Default Task Types.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimpleTaskType",
              "snippet": "setSimpleTaskType ${1:task}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets number of simul weather layers, affects quality of simul weather clouds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSimulWeatherLayers",
              "snippet": "setSimulWeatherLayers ${1:layers}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the size (radius)  of a location.\n\nThe width  is 2 * x, the height is 2 * y.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSize",
              "snippet": "setSize ${2:size}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSkill",
              "snippet": "setSkill ${2:skill}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets sub-skill level of an unit / commander unit. \n\nValue of sub-skill may vary from 0 to 1.\n\nPossible sub-skill types are:\naimingAccuracy\naimingShake\naimingSpeed\nendurance\nspotDistance\nspotTime\ncourage\nreloadSpeed\ncommanding\ngeneral",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSkill%20array",
              "snippet": "setSkill ${2:[${3:type}, ${4:skill}]}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates sling loading from first object to second object if possible. To unload cargo, pass objNull as second param.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSlingLoad",
              "snippet": "setSlingLoad ${2:cargo}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the different sound effects. \n\n Sound - plays a 2D sound from CfgSounds\n Voice - plays a 3D sound from CfgSounds\n SoundEnv - plays an environmental sound from CfgEnvSounds\n SoundDet (only for triggers) - creates a dynamic sound object attached to a trigger defined in CfgSFX\n\nTo stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). Also use \"$NONE$\" to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSoundEffect",
              "snippet": "setSoundEffect ${2:[sound, voice, soundEnv, soundDet]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the different sound effects. \n\n Sound - plays a 2D sound from CfgSounds\n Voice - plays a 3D sound from CfgSounds\n SoundEnv - plays an environmental sound from CfgEnvSounds\n SoundDet (only for triggers) - creates a dynamic sound object attached to a trigger defined in CfgSFX\n\nTo stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). Also use \"$NONE$\" to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSoundEffect",
              "snippet": "setSoundEffect ${2:[sound, voice, soundEnv, soundDet]}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server: \n\n[bob, \"Male02GRE\"] remoteExecCall [\"setSpeaker\", 0];",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeaker",
              "snippet": "setSpeaker ${2:speaker}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add speech to location.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeech",
              "snippet": "setSpeech ${2:speech}$0"
            },
            {
              "leftLabel": "groupName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set group speed mode. Mode may be one of: \n \"LIMITED\" (half speed)\n \"NORMAL\" (full speed, maintain formation)\n \"FULL\" (do not wait for any other units in formation)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSpeedMode",
              "snippet": "setSpeedMode ${2:mode}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set units' stamina (seconds until depletion)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStamina",
              "snippet": "setStamina ${2:stamina}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set stamina bar color. The scheme can be \"Normal\", \"FastDrain\", \"Exhausted\" or \"Default\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStaminaScheme",
              "snippet": "setStaminaScheme ${1:scheme}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle the starter for the given helicopter engine(s) on or off. \n engine index 0: engine #1\n engine index 1: engine #2\n engine index 2: engine #3\n engine index -1: all engines",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStarterRTD",
              "snippet": "setStarterRTD [${2:enable}, ${3:engineIndex}]$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a value to a given stat. \nA list of possible StatNames can be found here: StatNames\nIts important to note that most Stats are restricted to scripts in certain paths.\nFor example \"ExpWarlockDown\" is restricted to scripts in any subdirectory of \"a3\\Missions_F_Exp\\Campaign\\Missions\\\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setStatValue",
              "snippet": "setStatValue ${1:[${2:name}, ${3:value}]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the person's suppression, from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSuppression",
              "snippet": "setSuppression ${2:value}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set system of units.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setSystemOfUnits",
              "snippet": "setSystemOfUnits ${1:value}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.\n\nPossible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTargetAge",
              "snippet": "setTargetAge ${2:age}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set a result of the task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTaskResult",
              "snippet": "setTaskResult ${2:[state,result]}$0"
            },
            {
              "leftLabel": "task ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the state of a given task.\n\nState value may be one of:\n\"None\"\n\"Created\"\n\"Assigned\"\n\"Succeeded\"\n\"Failed\"\n\"Canceled\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTaskState",
              "snippet": "setTaskState ${2:state}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Operation Flashpoint, VBS1: Set desired terrain resolution (in meters). \nFor default landscapes, supported resolutions are:\n 50 - smoothest, less lag\n 25 - default in multiplayer\n 12.5 - default in singleplayer\n 6.25\n 3.125 - bumpiest, higher lag\n\nIf you select unsupported resolutions, nearest supported value is used instead. \n\nArmed Assault, VBS2: Terrain resolution is fixed, determined by the world created. This function controls terrain LOD instead (the distance in which the terrain mesh resolution starts to degrade). Higher number means less vertices are used for terrain rendering, making distant hills less smooth. Value 12.5 corresponds to selecting Terrain Detail Normal in Video options, 50 to Very Low, 3.125 to Very High.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTerrainGrid",
              "snippet": "setTerrainGrid ${1:grid}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the text associated with a location. This text will be displayed on the game map at the location's position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setText",
              "snippet": "setText ${2:text}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the throttle for the given engine(s) of a helicopter. \n engine index 0: engine #1\n engine index 1: engine #2\n engine index 2: engine #3\n engine index -1: all engines\n\n throttle 0: fully closed\n throttle ~0.15: average flight idle\n throttle 1: full",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setThrottleRTD",
              "snippet": "setThrottleRTD [${2:value}, ${3:engineIndex}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTimeMultiplier",
              "snippet": "setTimeMultiplier ${1:value}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the title effect via [Type, Effect, Text] where\n\n'Type' can be \n\"NONE\", \n\"OBJECT\", \n'Text' defines the shown object , a subclass of CfgTitles.\n\n\"RES\" \n'Text' defines a resource class, a subclass of RscTitles.\n\"TEXT\"\nThe 'Text' is shown as text itself. 'Effect' defines a subtype: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" or \"WHITE IN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTitleEffect",
              "snippet": "setTitleEffect ${2:[type, effect, text]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the title effect via [Type, Effect, Text] where\n\n'Type' can be \n\"NONE\", \n\"OBJECT\", \n'Text' defines the shown object , a subclass of CfgTitles.\n\n\"RES\" \n'Text' defines a resource class, a subclass of RscTitles.\n\"TEXT\"\nThe 'Text' is shown as text itself. 'Effect' defines a subtype: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" or \"WHITE IN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTitleEffect",
              "snippet": "setTitleEffect ${2:[type, effect, text]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Applies a specific tone mapping to the game.\n\n\n\n\n\n \n\n This command is not present in Arma 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setToneMapping",
              "snippet": "setToneMapping ${1:toneName}$0"
            },
            {
              "leftLabel": "toneName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Edits tone mapping parameters.\n\n\n\n\n\n \n\n This command is not present in Arma 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setToneMappingParams",
              "snippet": "setToneMappingParams ${2:params}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the density of ambient cars in a rectangle (in cars per kilometer).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficDensity",
              "snippet": "setTrafficDensity [${1:density}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set maximum ambient traffic draw distance (in 2D).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficDistance",
              "snippet": "setTrafficDistance ${1:distance}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set the average gap between ambient cars in a rectangle (in meters).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficGap",
              "snippet": "setTrafficGap [${1:gap}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set ambient traffic speed in a rectangle (in kilometers per hour).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTrafficSpeed",
              "snippet": "setTrafficSpeed [${1:speed}, ${2:xMin}, ${3:xMax}, ${4:zMin}, ${5:zMax}]$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the trigger activation type. \n\nSee ArmA:Mission Editor - Triggers for a thorough overview of triggers and its fields for activation, effects, etc.   Since Arma 3 v1.67, \"ANYPLAYER\" activation can be used to detect any player.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerActivation",
              "snippet": "setTriggerActivation [${2:by}, ${3:type}, ${4:repeating}]$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the area monitored by the given trigger. The area could be either rectangular or elliptical. Since Arma 3 v1.59.135137 it is possible to define 3 dimensional area to monitor by specifying extra param for the area height (see pic). \nJust like with a and b dimensions, c dimension will alter area in opposite directions from the trigger position along z axis. Therefore if the trigger position is on the surface, half of the trigger area will be above the surface and half below. To place the whole area above the surface, adjust trigger position (move it up c meters). If c is not specified or <= 0, the trigger area considered infinitely tall, like in old triggers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerArea",
              "snippet": "setTriggerArea ${2:[${3:a}, ${4:b}, ${5:angle}, ${6:isRectangle}, ${7:c}]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines trigger condition, activation and deactivation statements. Trigger condition has to return Boolean. true will activate the trigger, false will deactivate it (only if activation is set to repeat). thisList returns the same result as list command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerStatements",
              "snippet": "setTriggerStatements ${2:[${3:condition}, ${4:activation}, deactivation]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerText",
              "snippet": "setTriggerText ${2:text}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time. \nFor a normal trigger, min, mid and max are used to generate random duration according to Gaussian Distribution. For a \"Seized\" type of trigger, the duration value is generated using side ruling power",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerTimeout",
              "snippet": "setTriggerTimeout ${2:[${3:min}, ${4:mid}, ${5:max}, ${6:interruptable}]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):\n\n \"NONE\"\n \"EAST G\" - Guarded by OPFOR - use createGuardedPoint instead!\n \"WEST G\" - Guarded by BLUFOR - use createGuardedPoint instead!\n \"GUER G\" - Guarded by Independent - use createGuardedPoint instead!\n \"SWITCH\" - Switch waypoints/break loop (see Triggers)\n \"END1\" - End #1\n \"END2\" - End #2\n \"END3\" - End #3\n \"END4\" - End #4\n \"END5\" - End #5\n \"END6\" - End #6\n \"LOOSE\" - Lose //it is not a typo on the wiki, it is indeed misspelt in the game engine.\n \"WIN\" - (not found in ArmA)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setTriggerType",
              "snippet": "setTriggerType ${2:action}$0"
            },
            {
              "leftLabel": "location ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes a location to the specified class. Location classes are defined in CfgLocationTypes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setType",
              "snippet": "setType ${2:name}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Since Arma 3 v1.63.136889, this command sets unit into incapacitated state and lifeState command returns \"INCAPACITATED\". Animation played while incapacitated depends on the injuries received.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnconscious",
              "snippet": "setUnconscious ${2:set}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "isMultiplayerSolo",
              "description": "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/isMultiplayerSolo"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets skill of given unit. Unlike with setSkill it is possible to use values > 1 with this command, and even though skill will correctly return set value, the actual unit ability will be capped to max available.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitAbility",
              "snippet": "setUnitAbility ${2:skill}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a loadout from given inventory structure and applies it to a unit.\n\n\n\n\n\n \n\n This command is not final and might be changed in a near future.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitLoadout",
              "snippet": "setUnitLoadout [${2:loadout}, ${3:rearm}]$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set unit position rules. Mode may be one of: \n \"DOWN\" - unit goes prone and stays prone.\n \"UP\" - unit stands and stays standing.\n \"MIDDLE\" - Kneel Position. ArmA version 1.04 (Unit will not kneel if it is unarmed)\n \"AUTO\" - unit chooses mode according to circumstances.\nThis command will not change the stance of the human player, even though it will change the output of unitPos command. To change player stance use playAction or playActionNow:\nplayer playAction \"PlayerProne\"; // DOWN\nplayer playAction \"PlayerStand\"; // UP\nplayer playAction \"PlayerCrouch\"; // MIDDLE",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitPos",
              "snippet": "setUnitPos ${2:mode}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set unit position rules. Mode may be one of: \n \"DOWN\" - person goes prone and stays prone.\n \"UP\" - person stands and stays standing.\n \"Middle\" - Kneel Position. ArmA version 1.04\n \"AUTO\" - person chooses mode according to circumstances.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitPosWeak",
              "snippet": "setUnitPosWeak ${2:mode}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets rank of given unit.\n\nPossible rank values, and the associated rating that is automatically given:\n PRIVATE: 0\n CORPORAL: 500\n SERGEANT: 1500\n LIEUTENANT: 2500\n CAPTAIN: 3500\n MAJOR: 5000\n COLONEL: 7500\n\n\n\n\n\n \n\n  Since Arma 3 v1.67 this command is",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitRank",
              "snippet": "setUnitRank ${2:rank}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitRecoilCoefficient",
              "snippet": "setUnitRecoilCoefficient ${2:coefficient}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.\nDefault traits are:\n audibleCoef (scalar)\n camouflageCoef (scalar)\n engineer (bool)\n explosiveSpecialist (bool)\n loadCoef (scalar)\n medic (bool)\n UAVHacker (bool)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUnitTrait",
              "snippet": "setUnitTrait [${2:skill_name}, ${3:value}, isCustom]$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes user added action (see addAction) menu item text. \n\nSince Arma 3 v1.61.136587 it is possible to set 2 more optional texts, one for background and one for foreground when action is displayed on the screen (showWindow = true)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUserActionText",
              "snippet": "setUserActionText ${2:[${3:actionIndex}, ${4:textMenu}, ${5:textWindowBackground}, ${6:textWindowForeground}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry\n...\nclass Draw\n{\n\talpha = \"user3\";\n\tcolor[] = {\"user0\",\"user1\",\"user2\"};\n...\nwhich could control color of the MFD. See Example 2-3-4 on how to set different colors of the Blackfoot MFD",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setUserMFDvalue",
              "snippet": "setUserMFDvalue [${2:index}, ${3:value}]$0"
            },
            {
              "leftLabel": "varspace ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set variable to given value in the variable space of given element.\n\nTo remove a variable, set it to nil (e.g. player setVariable [\"varname\", nil];).\n\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.\n\nAll available variable spaces which support setVariable:\n Namespace setVariable Array\n Object setVariable Array\n Group setVariable Array\n Team_Member setVariable Array\n Task setVariable Array\n Location setVariable Array\n Control setVariable Array (since Arma 3 v1.55.133553)\n Display setVariable Array (since Arma 3 v1.55.133553)\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVariable",
              "snippet": "setVariable ${2:[${3:name}, ${4:value}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set variable to given value in the variable space of given element.\n\nTo remove a variable, set it to nil (e.g. player setVariable [\"varname\", nil];).\n\nWhen variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.\n\nAll available variable spaces which support setVariable:\n Namespace setVariable Array\n Object setVariable Array\n Group setVariable Array\n Team_Member setVariable Array\n Task setVariable Array\n Location setVariable Array\n Control setVariable Array (since Arma 3 v1.55.133553)\n Display setVariable Array (since Arma 3 v1.55.133553)\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVariable",
              "snippet": "setVariable ${1:[${2:name}, ${3:${5:value}}, ${4:public}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set object's direction vector. Up vector will remain unchanged.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorDir",
              "snippet": "setVectorDir ${2:[x,y,z]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets orientation of an object. The command takes 2 vector arrays, one for vectorDir and one for vectorUp. Default object orientation will always have vectorDir pointing forward (North) along Y axis and vectorUp pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below.\n\nWhen attaching object to an object the axes are relative to the object that gets the attachment. If it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up. \n\nThe setDir command is incompatible with setVectorDirAndUp and should not be used together on the same object. Using setVectorDirAndUp alone should be sufficient for any orientation. \n\nIn Multiplayer, setVectorDirAndUp must be executed on the machine where the object it applied to is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorDirAndUp",
              "snippet": "setVectorDirAndUp ${2:[${3:[x1, y1, z1]},${4:[x2, y2, z2]}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set object's up vector. Direction of the object remain unchanged. Default object's vectorUp is [0,0,1].\n\nIn Multiplayer, setVectorUp must be executed on the machine where the object it applied to is local.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVectorUp",
              "snippet": "setVectorUp ${2:[x, y, z]}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to local turrets. To check locality of turret use turretLocal.\n\nThe value ranges from 0 to 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleAmmo",
              "snippet": "setVehicleAmmo ${2:value}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleAmmoDef",
              "snippet": "setVehicleAmmoDef ${2:value}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). \n\nWorks like setDamage only in reverse: player setVehicleArmor 1 is the same as player setDamage 0, and player setVehicleArmor 0 is the same as player setDamage 0.97",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleArmor",
              "snippet": "setVehicleArmor ${2:value}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded.  Can also be used to unload a specific loaded vehicle or all loaded vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleCargo",
              "snippet": "setVehicleCargo ${2:cargo}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleId",
              "snippet": "setVehicleId ${2:id}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attach a statement to a unit. The statement is propagated over the network in MP games, it can be executed by invoking processInitCommands.\n\n\n\n\n\n \n\n For security reasons, the command was disabled in Arma 3. Use remoteExec or BIS_fnc_MP for remote execution.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleInit",
              "snippet": "setVehicleInit ${2:statement}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets vehicle lock. Possible values:\n \n \"UNLOCKED\" \n \"DEFAULT\"\n \"LOCKED\"\n \"LOCKEDPLAYER\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleLock",
              "snippet": "setVehicleLock ${2:lockState}$0"
            },
            {
              "leftLabel": "(Boolean) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the object to a given position (same as createVehicle placement algorithm). Uses either the position that's defined by the position param, or one of the marker positions from the markers array. The object is placed inside a circle with position as its center and placement as its radius. The type of placement could also be controlled with special. \n\nIf position is in water and vehicle can float, it is placed on water surface, otherwise it is placed on the ground, even if ground is under water. If roof surfaces support walking, units will be placed on roofs if such position is given.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehiclePosition",
              "snippet": "setVehiclePosition ${2:[${3:position}, ${4:markers}, ${5:placement}, ${6:special}]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleRadar",
              "snippet": "setVehicleRadar ${2:rules}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReceiveRemoteTargets",
              "snippet": "setVehicleReceiveRemoteTargets ${2:bool}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets that the vehicle will share its own position via datalink to the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReportOwnPosition",
              "snippet": "setVehicleReportOwnPosition ${2:report}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleReportRemoteTargets",
              "snippet": "setVehicleReportRemoteTargets ${2:bool}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the \"heat\" state of different vehicle parts (for TI detection).  This allows simulation of heated up parts of a vehicle without it actually having to utilize them. (0: cold, 1: hot)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleTIPars",
              "snippet": "setVehicleTIPars ${2:[${3:engine}, ${4:wheels}, ${5:weapon}]}$0"
            },
            {
              "leftLabel": "object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets string representation of an object to a custom string. For example it is possible to return \"MyFerrari\" instead of default \"ce06b00# 164274: offroad_01_unarmed_f.p3d\" when querying object as string: \nhint str _offroad; //MyFerrari\nWhen a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. vehicleVarName on the other hand is only string representation of the object. So if you want to refer to the actual object by its vehicleVarName, an extra step needed to assign the object to a variable of the same name. For example to see and refer to offroad as myFerrari:\n_offroad setVehicleVarName \"MyFerrari\"; MyFerrari = _offroad;\nIn multiplayer environment setVehicleVarName has to be executed on every PC if you want the custom name to be known everywhere. If vehicle is created and named in the editor, the vehicle name will be known globally automatically. \nTo reset vehicleVarName and str representation of the object to original form set vehicleVarName to an empty string:\n_offroad setVehicleVarName \"\";",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVehicleVarName",
              "snippet": "setVehicleVarName ${2:name}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set velocity (speed vector) of a vehicle.   Units are in metres per second.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocity",
              "snippet": "setVelocity ${2:[x, y, z]}$0"
            },
            {
              "leftLabel": "vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the velocity (speed vector) of the given vehicle relative to its model.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocityModelSpace",
              "snippet": "setVelocityModelSpace ${2:[x, y, z]}$0"
            },
            {
              "leftLabel": "objectName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Interpolate and sets vectors. For additional info see this resource.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVelocityTransformation",
              "snippet": "setVelocityTransformation [${2:position1}, ${3:position2}, ${4:velocity1}, ${5:velocity2}, ${6:direction1}, ${7:direction2}, ${8:up1}, ${9:up2}, ${10:time}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set rendering distance, in metres. Default is 900m (in OFP) or 1,200m (in ArmA), accepted range is 500m to 5,000m (in OFP) or 10,000m (in ArmA). Setting view distance to <= 0 resets the value to the one set in Options->Video->General->Visibility->Overall",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setViewDistance",
              "snippet": "setViewDistance ${1:distance}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets whether or not the object is visible even if the tree is collapsed.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setVisibleIfTreeCollapsed",
              "snippet": "setVisibleIfTreeCollapsed ${2:[object, ${3:visible}]}$0"
            },
            {
              "leftLabel": "helicopterRTD ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!\n engine index 0: engine #1\n engine index 1: engine #2\n engine index 2: engine #3\n engine index -1: all engines",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWantedRPMRTD",
              "snippet": "setWantedRPMRTD [${2:value}, ${3:time}, ${4:engineIndex}]$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.\nNOTE: This command will have no effect (even though the value of waves changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaves",
              "snippet": "setWaves ${2:value}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches the unit behaviour when the waypoint becomes active.\n\n\nPossible values are:\n \"UNCHANGED\"\n \"CARELESS\"\n \"SAFE\"\n \"AWARE\"\n \"COMBAT\"\n \"STEALTH\"\n\nSee the AIBehaviour page for details of the effect of this command on AI units.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointBehaviour",
              "snippet": "setWaypointBehaviour ${2:mode}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The group combat mode is switched when the waypoint becomes active.\n\n\nPossible mode values are:\n \"NO CHANGE\" (No change)\n \"BLUE\" (Never fire)\n \"GREEN\" (Hold fire - defend only)\n \"WHITE\" (Hold fire, engage at will)\n \"YELLOW\" (Fire at will)\n \"RED\" (Fire at will, engage at will)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointCombatMode",
              "snippet": "setWaypointCombatMode ${2:mode}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The completion radius allows units to call the waypoint completed once they are inside of the given circle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointCompletionRadius",
              "snippet": "setWaypointCompletionRadius ${2:radius}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the description shown in the HUD while the waypoint is active.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointDescription",
              "snippet": "setWaypointDescription ${2:text}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointForceBehaviour",
              "snippet": "setWaypointForceBehaviour ${2:state}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches the group formation when the waypoint becomes active.\n\n\nPossible values are: \n \"NO CHANGE\"\n \"COLUMN\"\n \"STAG COLUMN\"\n \"WEDGE\"\n \"ECH LEFT\"\n \"ECH RIGHT\"\n \"VEE\"\n \"LINE\"\n \"FILE\"\n \"DIAMOND\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointFormation",
              "snippet": "setWaypointFormation ${2:formation}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "For waypoints attached to a house, this defines the target house position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointHousePosition",
              "snippet": "setWaypointHousePosition ${2:pos}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assignes loiter radius to waypoint",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointLoiterRadius",
              "snippet": "setWaypointLoiterRadius ${2:radius}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the waypoint loiter type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointLoiterType",
              "snippet": "setWaypointLoiterType ${2:type}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the waypoint name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointName",
              "snippet": "setWaypointName ${2:name}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Moves the waypoint to a random position in a circle with the given center and radius.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointPosition",
              "snippet": "setWaypointPosition ${2:[${3:center}, ${4:radius}]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use SQS-Syntax. The script receives the following arguments in _this variable: [group, position, target] + [the optional passed arguments]. The optional arguments are appended to the end of the return array.\nIn Arma 3, command argument can be a String with code, a reference to .sqf script (it will have to explicitly end with .sqf) or a reference to .sqs script.\nSee Mission editor Description for more information about scripted waypoints.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointScript",
              "snippet": "setWaypointScript ${2:command}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switches the group speed mode when the waypoint becomes active.\n\n\nPossible values are:\n \"UNCHANGED\"\n \"LIMITED\"\n \"NORMAL\"\n \"FULL\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointSpeed",
              "snippet": "setWaypointSpeed ${2:mode}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.\n\n\nWithin the Condition & Statement code string:\n this refers to the group leader\n thisList refers to an array containing each unit in the group",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointStatements",
              "snippet": "setWaypointStatements ${2:[${3:condition}, ${4:statement}]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointTimeout",
              "snippet": "setWaypointTimeout ${2:[${3:min}, ${4:mid}, ${5:max}]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the waypoint type. \n\nType can be:\n \"MOVE\"\n \"DESTROY\"\n \"GETIN\"\n \"SAD\"\n \"JOIN\"\n \"LEADER\"\n \"GETOUT\"\n \"CYCLE\"\n \"LOAD\"\n \"UNLOAD\"\n \"TR UNLOAD\"\n \"HOLD\"\n \"SENTRY\"\n \"GUARD\" (for use with GUARDED BY trigger or createGuardedPoint)\n \"TALK\"\n \"SCRIPTED\"\n \"SUPPORT\"\n \"GETIN NEAREST\"\n \"DISMISS\"\n \"LOITER\" (new in Arma 3)\n \"AND\" (only for game logics)\n \"OR\" (only for game logics)\n\nMore details at Waypoint types.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointType",
              "snippet": "setWaypointType ${2:type}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the visibility of the waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWaypointVisible",
              "snippet": "setWaypointVisible ${2:visible}$0"
            },
            {
              "leftLabel": "(Boolean) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWeaponReloadingTime",
              "snippet": "setWeaponReloadingTime ${2:[${3:gunner}, ${4:muzzleName}, ${5:reloadTime}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set current (forced == false) or permanent (forced == true) wind vector.\nNOTE: The effect is global only if command is executed on the server. Wind set locally will sync back to server value in a while.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWind",
              "snippet": "setWind ${1:[${2:x}, ${3:y}, ${4:forced}]}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  \nNOTE: Effect is global only when executed on the server. On clients wind direction will sync to server value in a while.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindDir",
              "snippet": "setWindDir ${2:value}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindForce",
              "snippet": "setWindForce ${2:wind}$0"
            },
            {
              "leftLabel": "time ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWindStr",
              "snippet": "setWindStr ${2:value}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set waypoint position",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/setWPPos",
              "snippet": "setWPPos ${2:pos}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Toggle the drawing of 3D icons.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/show3DIcons",
              "snippet": "show3DIcons ${2:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows/hides the whole chat window.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showChat",
              "snippet": "showChat ${1:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCinemaBorder",
              "snippet": "showCinemaBorder ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.\nIf commanding menu has \"expression\" set up, the expression will receive the following arguments when user activated the menu item:\n Local variable  _target: Object - Target under the cursor. This works in both 3D and 2D (when cursor is over the unit icon on the map).\n Local variable _pos: Array - Cursor position.\n Local variable _is3D: Boolean - false if cursor is over the map, otherwise true.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCommandingMenu",
              "snippet": "showCommandingMenu ${1:name}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCompass",
              "snippet": "showCompass ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Hides or shows compass in curator interface.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showCuratorCompass",
              "snippet": "showCuratorCompass ${1:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showGPS",
              "snippet": "showGPS ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.\nAppearance of HUD can also be controlled with showHUD param in description.ext. NOTE: As of Arma 3 v1.49.131879 there is a showHUD[] array param, that is identical in format to the extended showHUD command. When showHUD[] array param is present in description.ext, it will disable showHUD command entirely, allowing mission makers to permanently alter visibility of some HUD elements.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showHUD",
              "snippet": "showHUD ${1:enable}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.\nAppearance of HUD can also be controlled with showHUD param in description.ext. NOTE: As of Arma 3 v1.49.131879 there is a showHUD[] array param, that is identical in format to the extended showHUD command. When showHUD[] array param is present in description.ext, it will disable showHUD command entirely, allowing mission makers to permanently alter visibility of some HUD elements.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showHUD",
              "snippet": "showHUD ${1:[${2:hud}, ${3:info}, ${4:radar}, ${5:compass}, ${6:direction}, ${7:menu}, ${8:group}, ${9:cursors}, ${10:panels}]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Show/hide map legend. \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showLegend",
              "snippet": "showLegend ${2:bool}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable Map (default true)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showMap",
              "snippet": "showMap ${1:show}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownArtilleryComputer",
              "description": "Checks whether the player has the artillery computer currently open.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownArtilleryComputer"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownChat",
              "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownChat"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownCompass",
              "description": "Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownCompass"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownCuratorCompass",
              "description": "Returns true if compass is shown.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownCuratorCompass"
            },
            {
              "leftLabel": "(Any Value) = map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.  \n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showNewEditorObject",
              "snippet": "showNewEditorObject ${2:[type,class,side,position]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownGPS",
              "description": "Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownGPS"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownHUD",
              "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownHUD"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownMap",
              "description": "Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownMap"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownPad",
              "description": "Checks if client has Notepad enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownPad"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownRadio",
              "description": "Check if player has Radio enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownRadio"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownScoretable",
              "description": "Returns the state of the score table set with showScoretable command. \n\n\n\n\n \n\n Since Arma 3 v1.63.137869, the previous functionality of this command (score table visibility check) is moved to visibleScoretable command. Please update your scripts and sorry for any inconvinience.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownScoretable"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownUAVFeed",
              "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownUAVFeed"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownWarrant",
              "description": "Check if player has ID card enabled. Obsolete command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownWarrant"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "shownWatch",
              "description": "Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/shownWatch"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showPad",
              "snippet": "showPad ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showRadio",
              "snippet": "showRadio ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be  closed manually, when it is force closed, it cannot be opened manually.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showScoretable",
              "snippet": "showScoretable ${1:force}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showSubtitles",
              "snippet": "showSubtitles ${1:enable}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows/hides video feed transmitted from UAV. When enabled, the video is streamed to following texture\n \"#(argb,512,512,1)r2t(uavpipsingleview,1.25)\"\nin the feed window. The feed window IGUI display idd is 315. The actual feed control idc is 102. \n_UAVFeedDisplay = uiNamespace getVariable \"RscAvCamera\";",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showUAVFeed",
              "snippet": "showUAVFeed ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable ID card (default false). Obsolete command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWarrant",
              "snippet": "showWarrant ${1:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWatch",
              "snippet": "showWatch ${1:show}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the condition determining when the waypoint is shown.\n\nPossible values are:\n \"NEVER\" - never show it\n \"EASY\" - show only in cadet mode\n \"ALWAYS\" - always show it",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWaypoint",
              "snippet": "showWaypoint ${2:show}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/showWaypoints",
              "snippet": "showWaypoints ${1:enabled}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side. Query the side of the Group to get a reliable result.\n\nWhen used in conjunction with a format statement hint format[\"%1\", side player], the returned strings are: \"WEST\", \"EAST\", \"GUER\", \"CIV\", \"LOGIC\", \"ENEMY\" (eg: renegades), \"FRIENDLY\", \"AMBIENT LIFE\", \"EMPTY\" or \"UNKNOWN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/side",
              "snippet": "side ${1:object}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side. Query the side of the Group to get a reliable result.\n\nWhen used in conjunction with a format statement hint format[\"%1\", side player], the returned strings are: \"WEST\", \"EAST\", \"GUER\", \"CIV\", \"LOGIC\", \"ENEMY\" (eg: renegades), \"FRIENDLY\", \"AMBIENT LIFE\", \"EMPTY\" or \"UNKNOWN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/side",
              "snippet": "side ${1:location}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideAmbientLife",
              "description": "Returns side of ambient life, for example ambient life placed in Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideAmbientLife"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideChat",
              "snippet": "sideChat ${2:chatText}$0"
            },
            {
              "leftLabel": "[side, identity] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideChat",
              "snippet": "sideChat ${4:chatText}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideEmpty",
              "description": "Returns empty side, for example static buildings in Eden Editor.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideEmpty"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideEnemy",
              "description": "The enemy side (used for renegades). Unit of this side is enemy to everyone.\nTo become one, you can attack members of your own side or use addRating.\nWhen below a rating of -2000 units switch automatically to this side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideEnemy"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideFriendly",
              "description": "The Friendly side (used for captives).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideFriendly"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideLogic",
              "description": "The Logic side.\nSide of Game Logics and Modules.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideLogic"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideRadio",
              "snippet": "sideRadio ${2:radioName}$0"
            },
            {
              "leftLabel": "[side, identity] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideRadio",
              "snippet": "sideRadio ${4:radioName}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sideUnknown",
              "description": "The unknown side.\nUsed when the side of a unit is unknown, e.g. for spotted targets with insufficient information.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sideUnknown"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return all simple tasks assigned to given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simpleTasks",
              "snippet": "simpleTasks ${1:person}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if the entity has enabled simulation.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulationEnabled",
              "snippet": "simulationEnabled ${1:entity}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns density of clouds at given position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulCloudDensity",
              "snippet": "simulCloudDensity ${1:pos}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulCloudOcclusion",
              "snippet": "simulCloudOcclusion ${1:[${2:pos1},${3:pos2}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns if given position is in clouds.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulInClouds",
              "snippet": "simulInClouds ${1:pos}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets simul cloud cover. This command does not affect overcast value. \n\nThis command has now been removed",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulSetHumidity",
              "snippet": "simulSetHumidity ${1:humidity}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "simulWeatherSync",
              "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/simulWeatherSync"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sine of x, argument in Degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sin",
              "snippet": "sin ${1:x}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a location's size.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/size",
              "snippet": "size ${1:location}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the diameter of bounding sphere of the object of given type in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use boundingBox or boundingBoxReal.\n\nNOTE: The object has to be present in current mission to be able to read its size (otherwise zero will be returned).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sizeOf",
              "snippet": "sizeOf ${1:type}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skill",
              "snippet": "skill ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skill",
              "snippet": "skill ${2:skillType}$0"
            },
            {
              "leftLabel": "(Number) = unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skillFinal",
              "snippet": "skillFinal ${2:sub-skill}$0"
            },
            {
              "leftLabel": "(Number) = vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill.\n\nType can be one of:\naimingAccuracy\naimingShake\naimingSpeed\nendurance\nspotDistance\nspotTime\ncourage\nreloadSpeed\ncommanding\ngeneral",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skill%20vehicle",
              "snippet": "skill ${2:type}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Jumps the specified number of hours forward or backward.The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/skipTime",
              "snippet": "skipTime ${1:duration}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a script executed by execVM or spawn.\nNotes\n this command only guarantees that the code will be suspended \"at least\" the given amount of time, however it often is more and on occasion is a lot more if script scheduler is particular busy\n this command will suspend the script indefinitely if game simulation is paused in SP. To avoid this, use uiSleep.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sleep",
              "snippet": "sleep ${1:delay}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current thumb position of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderPosition",
              "snippet": "sliderPosition ${1:idc}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return current thumb position of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderPosition",
              "snippet": "sliderPosition ${1:control}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return limits, as an Array [min, max] of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderRange",
              "snippet": "sliderRange ${1:idc}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return limits, as an Array [min, max] of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderRange",
              "snippet": "sliderRange ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set current thumb position of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetPosition",
              "snippet": "sliderSetPosition ${1:[${2:idc}, ${3:pos}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set current thumb position of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetPosition",
              "snippet": "sliderSetPosition ${2:pos}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set limits of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetRange",
              "snippet": "sliderSetRange ${1:[${2:idc}, ${3:min}, ${4:max}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set limits of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetRange",
              "snippet": "sliderSetRange ${2:[${3:min}, ${4:max}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set speed of slider with id idc of topmost user dialog.\n Click to arrow - move by line\n Click to scale outside thumb - move by page.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetSpeed",
              "snippet": "sliderSetSpeed ${1:[${2:idc},${3:line},${4:page}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Set speed of slider with id idc of topmost user dialog.\n Click to arrow - move by line\n Click to scale outside thumb - move by page.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSetSpeed",
              "snippet": "sliderSetSpeed ${2:[${3:line}, ${4:page}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return speed, as an Array [min, max] of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSpeed",
              "snippet": "sliderSpeed ${1:idc}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return speed, as an Array [min, max] of slider idc of topmost user dialog.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sliderSpeed",
              "snippet": "sliderSpeed ${1:control}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "slingLoadAssistantShown",
              "description": "Returns true of Sling Load Assistant is open",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/slingLoadAssistantShown"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all magazines of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/soldierMagazines",
              "snippet": "soldierMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if unit has some ammo.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/someAmmo",
              "snippet": "someAmmo ${1:unitName}$0"
            },
            {
              "leftLabel": "array ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attempts to sort given array either in ascending (true) or descending (false) order. All array elements should be one of the following types:\n String - array of strings ([\"a\",\"b\",\"c\"...])\n Number - array of numbers ([1,2,3...])\n Array - array of subarrays ([[\"a\",1,2],[\"b\",3,4],[\"c\",5,6]...]). Subarrays should be of the same structure. Subarray elements other than String or Number will be ignored during sorting.\nMixed arrays ([\"a\",1,[true]...]) are not supported and results are undefined.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sort",
              "snippet": "sort ${2:order}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "soundVolume",
              "description": "Check current sound volume (set by fadeSound).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/soundVolume"
            },
            {
              "leftLabel": "(Script) = arguments ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds given code to the scheduler. Exactly when the code will be executed is unknown, it depends on how busy is the engine and how filled up is the scheduler. Therefore spawn does not wait for the supplied code to finish, instead, spawn returns a Script handle to the scheduler task. scriptDone command can be used to check the code completion. Additional arguments are passed to the code in local variable _this. Since Arma 3 v1.55 the script handle also exists inside the code in _thisScript variable.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/spawn",
              "snippet": "spawn ${2:code}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the speaker of a person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speaker",
              "snippet": "speaker ${1:person}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:3.6 * (velocityModelSpace _obj select 1)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speed",
              "snippet": "speed ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns speed mode of the group, which can be any of the following: \n \"LIMITED\"\n \"NORMAL\"\n \"FULL\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/speedMode",
              "snippet": "speedMode ${1:groupName}$0"
            },
            {
              "leftLabel": "(Array) = str ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters. In addition, if empty string \"\" is used for delimiters, str is split by each character.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/splitString",
              "snippet": "splitString ${2:delimiters}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns square root of x.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sqrt",
              "snippet": "sqrt ${1:x}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns data about squad of given unit loaded from squad.xml.\nAll items in returned array are String.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/squadParams",
              "snippet": "squadParams ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the stance of the given unit. It can be one of: \n \"STAND\"\n \"CROUCH\"\n \"PRONE\"\n \"UNDEFINED\" (for example, swimming)\n \"\" (on non-person object)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stance",
              "snippet": "stance ${1:unit}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed. The loading screen does not end by itself and needs endLoadingScreen command, so make sure there is one at the end of loading operation. \n\n\n\n\n \n\n  NOTE: The game simulation is disabled during Loading Screen operation (at least in SP), therefore any use of sleep command will pause the game indefinitely. If you have to \"sleep\", use uiSleep\n\nBy default (if custom resource is not provided) startLoadingScreen will use \"RscDisplayNotFreeze\" resource. If you are using custom resource (could be also defined in description.ext), the following resource's controls are supported by the engine:\n\n idc = 101; - text (type = 0;) or picture (type = 48;). The text will be set to the text provided by the command param. \n idc = 103; - progress (type = 8;) or animated texture (type = 45;). This control indicates global hardcoded mission loading progress and is useless after mission is loaded.\n idc = 104; - progress (type = 8;). This control's progress is initially set to 0 and can be manipulated with progressLoadingScreen command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/startLoadingScreen",
              "snippet": "startLoadingScreen ${1:[${2:text}, ${3:resource}]}$0"
            },
            {
              "leftLabel": "(For Type) = for ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/step",
              "snippet": "step ${2:stepSize}$0"
            },
            {
              "leftLabel": "unitName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Stop AI unit.Stopped unit will not be able to move, fire, or change its orientation to follow a watched object.It may still change the stance if deemed appropriate (e.g. under fire).Use disableAI to disable specific AI capabilities.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stop",
              "snippet": "stop ${2:toggle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "stopEngineRTD",
              "description": "Instant engines stop.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stopEngineRTD"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if unit is stopped by stop command.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/stopped",
              "snippet": "stopped ${1:unitName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts any value into a string by placing \" and \" around the argument. Since Arma 3 v1.63.137891 this command will correctly escape all \" inside a string:\n\n// Before the fix:\nhint str \"string \"\" string\"; // \"string \" string\" <- invalid string\ncall compile str \"string \"\" string\"; // ERROR\n// After the fix:\nhint str \"string \"\" string\"; // \"string \"\" string\" <- valid string\ncall compile str \"string \"\" string\"; // OK\n\n\nWhen used on object, object debug name is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/str",
              "snippet": "str ${1:value}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "sunOrMoon",
              "description": "Returns the sun to moon transition state in range 0...1",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/sunOrMoon"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:\n't' - type\n'n' - null operator\n'u' - unary operator\n'b' - binary operator.\n \n'name' is the operator or type name (in case operator, type of input operands is included). \nmask parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type x may be replaced with *, meaning all types. For the mask partial match may be used, like abc*, meaning any operators starting with 'abc' are reported, for example: *:name, t:*, t:name* or *:*.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/supportInfo",
              "snippet": "supportInfo ${1:mask}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Force suppressive fire from the unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/suppressFor",
              "snippet": "suppressFor ${2:duration}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns whether water is at given position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceIsWater",
              "snippet": "surfaceIsWater ${1:position}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns surface normal on given position.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceNormal",
              "snippet": "surfaceNormal ${1:position}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns what surface type is at the given position.\nSee the spoiler for surface types: \nDetails anzeigen\n\n\nA3 1.28:\n\n\"#GdtStratisConcrete\"\n\"#GdtStratisDryGrass\"\n\"#GdtStratisGreenGrass\"\n\"#GdtStratisRocky\"\n\"#GdtStratisForestPine\"\n\"#GdtStratisBeach\"\n\"#GdtStratisDirt\"\n\"#GdtVRsurface01\"\n\"#GdtDirt\"\n\"#GdtGrassGreen\"\n\"#GdtGrassDry\"\n\"#GdtSoil\"\n\"#GdtThorn\"\n\"#GdtStony\"\n\"#GdtConcrete\"\n\"#GdtMarsh\"\n\"#GdtBeach\"\n\"#GdtSeabed\"\n\"#GdtDead\"\n\nA3 1.66:\n\"#Default\"\n\"#Water\"\n\"#SurfRoadDirt\"\n\"#SurfRoadConcrete\"\n\"#SurfRoadTarmac\"\n\"#SurfWood\"\n\"#SurfMetal\"\n\"#SurfRoofTin\"\n\"#SurfRoofTiles\"\n\"#SurfIntWood\"\n\"#SurfIntConcrete\"\n\"#SurfIntTiles\"\n\"#SurfIntMetal\"\n\"#SurfWater\"\n\"#TEST_SurfNormal\"\n\"#GdtStratisConcrete\"\n\"#GdtStratisBeach\"\n\"#GdtStratisDirt\"\n\"#GdtStratisSeabedCluttered\"\n\"#GdtStratisSeabed\"\n\"#GdtStratisDryGrass\"\n\"#GdtStratisGreenGrass\"\n\"#GdtStratisRocky\"\n\"#GdtStratisThistles\"\n\"#GdtStratisForestPine\"\n\"#GdtRubble\"\n\"#GdtForestPine\"\n\"#GdtConcrete\"\n\"#GdtSoil\"\n\"#GdtBeach\"\n\"#GdtRock\"\n\"#GdtDead\"\n\"#GdtDirt\"\n\"#GdtDesert\"\n\"#GdtGrassGreen\"\n\"#GdtGrassDry\"\n\"#GdtGrassWild\"\n\"#GdtWeed\"\n\"#GdtWildField\"\n\"#GdtThorn\"\n\"#GdtStony\"\n\"#GdtStonyThistle\"\n\"#GdtMud\"\n\"#GdtMarsh\"\n\"#GdtSeabed\"\n\"#concrete\"\n\"#concrete_out\"\n\"#concrete_inside\"\n\"#dirtrunway\"\n\"#road\"\n\"#floor\"\n\"#floor_inside\"\n\"#carpet_inside\"\n\"#carpet\"\n\"#mud\"\n\"#concrete_hall\"\n\"#stones\"\n\"#cardboard\"\n\"#lino\"\n\"#steel\"\n\"#trash\"\n\"#parquet\"\n\"#sand\"\n\"#metalPlate\"\n\"#woodenFloor\"\n\"#planks\"\n\"#planks_inside\"\n\"#grid\"\n\"#rubble\"\n\"#BuildingRubble\"\n\"#tiling\"\n\"#wavyMetal\"\n\"#GdtVRsurface01\"\n\"#surf_metal\"\n\"#surf_roadconcrete\"\n\"#surf_roaddirt\"\n\"#surf_roadtarmac\"\n\"#surf_rooftiles\"\n\"#surf_rooftin\"\n\"#surf_wood\"\n\"#surfint_concrete\"\n\"#surfint_metal\"\n\"#surfint_tiles\"\n\"#surfint_wood\"\n\"#road_exp\"\n\"#sand_exp\"\n\"#SurfRoadDirt_exp\"\n\"#SurfRoadConcrete_exp\"\n\"#SurfRoadTarmac_exp\"\n\"#SurfTrailDirt_exp\"\n\"#concrete_exp\"\n\"#concrete_in_exp\"\n\"#concrete_hall_exp\"\n\"#floor_exp\"\n\"#floor_in_exp\"\n\"#stones_exp\"\n\"#planks_in_exp\"\n\"#planks_exp\"\n\"#softwood_in_exp\"\n\"#steel_exp\"\n\"#metalPlate_exp\"\n\"#metalPlatePressed_exp\"\n\"#metalPlate_in_exp\"\n\"#grid_exp\"\n\"#wavyMetal_exp\"\n\"#carpet_exp\"\n\"#carpet_in_exp\"\n\"#mat_in_exp\"\n\"#mud_exp\"\n\"#straw_exp\"\n\"#cardboard_exp\"\n\"#lino_in_exp\"\n\"#lino_exp\"\n\"#roof_tiles_exp\"\n\"#trash_exp\"\n\"#rubble_exp\"\n\"#BuildingRubble_exp\"\n\"#GdtGrassShort\"\n\"#GdtGrassTall\"\n\"#GdtGrassLong\"\n\"#GdtVolcanoBeach\"\n\"#GdtRedDirt\"\n\"#GdtAsphalt\"\n\"#GdtField\"\n\"#GdtForest\"\n\"#GdtVolcano\"\n\"#GdtCliff\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/surfaceType",
              "snippet": "surfaceType ${1:position}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/swimInDepth",
              "snippet": "swimInDepth ${2:value}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "switchableUnits",
              "description": "Returns a list of playable units available for switching to. Command is relative to the client on which it is executed and will only show playable units for the same side as player's group + player himself. The playableUnits command on the other hand will show all playable units regardless of the side. Exception is SP, where playable units from all sides will be accessible via this command. Dead units are automatically removed from the resulting array. Playable units that are already occupied by other human players will also not show in the results. \nNOTE that in Multiplayer, switchableUnits are only available when respawn type is set to SIDE or GROUP. In all other cases it is an empty array [].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchableUnits"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchAction",
              "snippet": "switchAction ${2:action}$0"
            },
            {
              "leftLabel": "target ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switch camera to given vehicle / camera. Mode is one of: \n \"INTERNAL\": 1st person\n \"GUNNER\": optics / sights\n \"EXTERNAL\": 3rd person\n \"GROUP\": group\n \"CARGO\": same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret. Control over the unit is not given to the player. Use selectPlayer or a combination of switchCamera and remoteControl to achieve this.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchCamera",
              "snippet": "switchCamera ${2:mode}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switch camera to given vehicle / camera. Mode is one of: \n \"INTERNAL\": 1st person\n \"GUNNER\": optics / sights\n \"EXTERNAL\": 3rd person\n \"GROUP\": group\n \"CARGO\": same as \"INTERNAL\"\n\nIf you switch to a unit in a vehicle, this command uses the correct turret. Control over the unit is not given to the player. Use selectPlayer or a combination of switchCamera and remoteControl to achieve this.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchCamera",
              "snippet": "switchCamera ${1:target}$0"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person,the given move is started immediately (there is no transition).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchGesture",
              "snippet": "switchGesture ${2:moveName}$0"
            },
            {
              "leftLabel": "lamp ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class \"StreetLamp\" only.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchLight",
              "snippet": "switchLight ${2:mode}$0"
            },
            {
              "leftLabel": "person ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "When used on a person, the given move is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.\n\nList of moves in ArmA 2\nList of moves in Armed Assault\nList of moves in Operation Flashpoint: Resistance",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/switchMove",
              "snippet": "switchmove ${2:movename}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the list of objects synchronized with the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedObjects",
              "snippet": "synchronizedObjects ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the list of triggers synchronized with a given waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedTriggers",
              "snippet": "synchronizedTriggers ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizedWaypoints",
              "snippet": "synchronizedWaypoints ${1:obj}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Add given objects to the unit's list of synchronized objects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeObjectsAdd",
              "snippet": "synchronizeObjectsAdd ${2:[objects]}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Remove given objects from the unit's list of synchronized objects.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeObjectsRemove",
              "snippet": "synchronizeObjectsRemove ${2:[objects]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Synchronizes the trigger with zero or more waypoints.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeTrigger",
              "snippet": "synchronizeTrigger ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeWaypoint",
              "snippet": "synchronizeWaypoint ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "leftLabel": "trigger ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/synchronizeWaypoint%20trigger",
              "snippet": "synchronizeWaypoint ${2:[${3:waypoint1}, ${4:waypoint2}, ...]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemChat",
              "snippet": "systemChat ${1:text}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "systemOfUnits",
              "description": "Returns the currently selected system of units.\n 0: Metric\n 1: Mixed (ground vehicles use Metric / air vehicles use Imperial)\n 2: Imperial",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/systemOfUnits"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Tangent of x, argument in Degrees.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tan",
              "snippet": "tan ${1:x}$0"
            },
            {
              "leftLabel": "(Array) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targets",
              "snippet": "targets ${2:[${3:enemyOnly}, ${4:maxDistance}, ${5:sides}, ${6:maxAge}, ${7:alternateCenter}]}$0"
            },
            {
              "leftLabel": "(Array) = [speaker, side, unit, place, time] ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Aggregate candidates.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetsAggregate",
              "snippet": "targetsAggregate ${2:candidates}$0"
            },
            {
              "leftLabel": "(Array, Side, Position, Number, Object, String) = enquirer ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/targetsQuery",
              "snippet": "targetsQuery ${2:[${3:targetIgnore}, ${4:targetSide}, ${5:targetType}, ${6:targetPosition}, ${7:targetMaxAge}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the task is flagged to be always visible or false if not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskAlwaysVisible",
              "snippet": "taskAlwaysVisible ${1:task}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the child tasks of the specified task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskChildren",
              "snippet": "taskChildren ${1:task}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return if task is completed. (state Succeeded, Failed or Canceled)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskCompleted",
              "snippet": "taskCompleted ${1:task}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskCustomData",
              "snippet": "taskCustomData ${1:task}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskDescription",
              "snippet": "taskDescription ${1:task}$0"
            },
            {
              "leftLabel": "(Array, Nothing) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position of the task (as specified by destination parameter in config).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskDestination",
              "snippet": "taskDestination ${1:task}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows info about new, changed or failed task. The text can contain several lines. \\n is used to indicate the end of a line.\n\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_showNotification instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskHint",
              "snippet": "taskHint ${1:[${2:hintText}, ${3:[r, g, b, a]}, ${4:icon}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns model space position for the task marker",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskMarkerOffset",
              "snippet": "taskMarkerOffset ${1:unit}$0"
            },
            {
              "leftLabel": "(Task) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "taskNull",
              "description": "A non-existing Task. To compare non-existent tasks use isNull or isEqualTo:\n taskNull == taskNull; // false\n isNull taskNull; // true\n taskNull isEqualTo taskNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskNull"
            },
            {
              "leftLabel": "(Task) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the parent task of the specified task.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskParent",
              "snippet": "taskParent ${1:task}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Send a result of the task to the task sender.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskResult",
              "snippet": "taskResult ${1:task}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the current state of a task. \n\nPossible return values are:\n None\n Created\n Assigned\n Succeeded\n Failed\n Canceled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskState",
              "snippet": "taskState ${1:task}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the type of the given task",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/taskType",
              "snippet": "taskType ${1:task}$0"
            },
            {
              "leftLabel": "(Team Member) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return an agent for given person.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamMember",
              "snippet": "teamMember ${1:person}$0"
            },
            {
              "leftLabel": "(Team Member) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "teamMemberNull",
              "description": "A non-existent Team Member. To compare non-existent team members use isNull or isEqualTo:\n teamMemberNull == teamMemberNull; // false\n isNull teamMemberNull; // true\n teamMemberNull isEqualTo teamMemberNull; // true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamMemberNull"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return a name of given team.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamName",
              "snippet": "teamName ${1:team}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "teams",
              "description": "Return a list of teams in the current mission.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teams"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "teamSwitch",
              "description": "Invoke the Team Switch dialog (force it even when conditions are not met). There has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in description.ext should be 5 (SIDE).\n\n\nNOTE: When player switches and leaves behind AI unit, you need to enable \"TeamSwitch\" AI on it _unit enableAI \"TeamSwitch\" so that the unit continues with waypoints",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamSwitch"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "teamSwitchEnabled",
              "description": "Check if Team Switch is currently enabled.\n\nTeam Switch is enabled by default.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamSwitchEnabled"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a type of given team.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/teamType",
              "snippet": "teamType ${1:team}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Terminate (abort) spawned or execVM'd script. Note: The given script will not terminate immediately upon terminate command execution, it will do so the next time the script is processed by the scheduler.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terminate",
              "snippet": "terminate ${1:scriptHandle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain. For ASL variant see terrainIntersectASL",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersect",
              "snippet": "terrainIntersect ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain. For AGL variant, see terrainIntersect",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersectASL",
              "snippet": "terrainIntersectASL ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL, only returns intersect position instead of Boolean",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/terrainIntersectAtASL",
              "snippet": "terrainIntersectAtASL ${1:[${2:pos1}, ${3:pos2}]}$0"
            },
            {
              "leftLabel": "(Structured Text) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text containing the given plain text if argument is String or returns location's text value if argument is Location (see Alt Syntax)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/text",
              "snippet": "text ${1:string}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a structured text containing the given plain text if argument is String or returns location's text value if argument is Location (see Alt Syntax)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/text",
              "snippet": "text ${1:location}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dump argument value to debugging output. \n\n\n\n\n \n\n This command is non-functional in the retail version",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/textLog",
              "snippet": "textLog ${1:anything}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Debugging output. \n\n\n\n\n \n\n This command is non-functional in the retail version",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/textLogFormat",
              "snippet": "textLogFormat [${1:format}, ${2:arg1}, ${3:arg2}, ...]$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Identical to tan",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tg",
              "snippet": "tg ${1:x}$0"
            },
            {
              "leftLabel": "(Anything) = if ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "First or second element of array is executed depending on result of if condition. Result of the expression executed is returned as a result (result may be Nothing).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/then",
              "snippet": "then ${2:else}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the current throttle level for all engines of a helicopter.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throttleRTD",
              "snippet": "throttleRTD ${1:helicopterRTD}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.\n\nNOTE: Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the if statement before it, as shown in example 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throw",
              "snippet": "throw ${1:expression}$0"
            },
            {
              "leftLabel": "(condition) ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.\n\nNOTE: Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the if statement before it, as shown in example 3.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/throw",
              "snippet": "throw ${2:exception}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "time",
              "description": "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/time"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "timeMultiplier",
              "description": "Returns the value set with setTimeMultiplier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/timeMultiplier"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "this command was obsoleted, use cutText instead.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleCut",
              "snippet": "titleCut ${1:[${2:text}, ${3:type}, ${4:speed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Terminate the title effect and set duration of the fade out phase to the given time.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleFadeOut",
              "snippet": "titleFadeOut ${1:duration}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Shows object defined in global config in CfgTitles",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleObj",
              "snippet": "titleObj ${1:[${2:class}, ${3:type}, ${4:speed}, ${5:showInMap}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Display a resource defined in RscTitles. Also see cutRsc, with these two commands you can show two different resources at once.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleRsc",
              "snippet": "titleRsc [${2:text}, ${3:type}, ${4:speed}, ${5:showInMap}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Displays text across the screen. If used along with cutText two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using \"\\n\" new line characters:\ntitleText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/titleText",
              "snippet": "titleText [${2:text}, ${3:type}, ${4:speed},  ${5:showInMap}, ${6:isStructuredText}]$0"
            },
            {
              "leftLabel": "(For Type) = forType ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Continue sequence of for var construct. It sets the end value of the index variable",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/to",
              "snippet": "to ${2:b}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts the supplied String into an Array of Numbers. \nThe numbers in the created array are the decimal Unicode representations of characters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toArray",
              "snippet": "toArray ${1:string}$0"
            },
            {
              "leftLabel": "(String) = number ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()\nNOTE: Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 significant figures, whereas with this command it is possible to preserve some extra precision.\nstr (pi/100000); //\"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation\nstr pi; //\"3.14159\" - 6 significant figures (default)\npi toFixed 6; //\"3.141593\" - forced to 7 significant figures\npi toFixed 7; //\"3.1415927\" - forced to 8 significant figures\n\nSince Arma 3 v1.71.141859 an alternative syntax is added, which takes no number and returns Nothing. Instead it acts as keyword and switches engine Number to String global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For example:\nsystemChat str position player;\ncall\n{\n\ttoFixed 6; \n\tsystemChat str position player;\n}; \nsystemChat str position player;\ntoFixed -1;\nsystemChat str position player;\nThe result is:\n [11580.3,11797.7,0.00146675]\n [11580.341797,11797.737305,0.001467]\n [11580.341797,11797.737305,0.001467]\n [11580.3,11797.7,0.00146675]\nIdeal to be used when saving data to a database when more precise positioning is required.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toFixed",
              "snippet": "toFixed ${2:decimals}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()\nNOTE: Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 significant figures, whereas with this command it is possible to preserve some extra precision.\nstr (pi/100000); //\"3.14159e-005\" - scientific notation\n(pi/100000) toFixed 10; //\"0.0000314159\" - no scientific notation\nstr pi; //\"3.14159\" - 6 significant figures (default)\npi toFixed 6; //\"3.141593\" - forced to 7 significant figures\npi toFixed 7; //\"3.1415927\" - forced to 8 significant figures\n\nSince Arma 3 v1.71.141859 an alternative syntax is added, which takes no number and returns Nothing. Instead it acts as keyword and switches engine Number to String global conversion into desired format, from the moment it is applied until the end of script. To reset output back to default at any time, use toFixed -1. For example:\nsystemChat str position player;\ncall\n{\n\ttoFixed 6; \n\tsystemChat str position player;\n}; \nsystemChat str position player;\ntoFixed -1;\nsystemChat str position player;\nThe result is:\n [11580.3,11797.7,0.00146675]\n [11580.341797,11797.737305,0.001467]\n [11580.341797,11797.737305,0.001467]\n [11580.3,11797.7,0.00146675]\nIdeal to be used when saving data to a database when more precise positioning is required.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toFixed",
              "snippet": "toFixed ${1:decimals}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts the supplied string to all lowercase characters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toLower",
              "snippet": "toLower ${1:string}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts the supplied Array of Numbers into a String. \nThe numbers in the array to be converted are the decimal Unicode representations of characters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toString",
              "snippet": "toString ${1:array}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts the supplied string to all uppercase characters.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/toUpper",
              "snippet": "toUpper ${1:string}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the trigger has been activated.\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerActivated",
              "snippet": "triggerActivated ${1:trigger}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger activation in the form [by, type, repeating]. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerActivation",
              "snippet": "triggerActivation ${1:trigger}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns currently monitored trigger area. The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.\n\nNOTE: Since Arma 3 v1.59.135137, triggerArea returns 3rd dimension for the monitored area. If height is not set, the value for it would be -1;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerArea",
              "snippet": "triggerArea ${1:trigger}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns vehicle attached to the trigger (for example using triggerAttachVehicle).\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachedVehicle",
              "snippet": "triggerAttachedVehicle ${1:trigger}$0"
            },
            {
              "leftLabel": "triggerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Assigns a static object to the trigger. The activation source is changed to \"STATIC\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachObject",
              "snippet": "triggerAttachObject ${2:objectId}$0"
            },
            {
              "leftLabel": "triggerName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Specifies the entity which will activate the selected trigger.\nIf [] is given, the trigger is decoupled from the assigned vehicle (example 2).\nIf the activation source is \"VEHICLE\", \"GROUP\", \"LEADER\" or \"MEMBER\", it's changed to \"NONE\". \nIf [vehicle] is given, the trigger is coupled to the vehicle or its group. \nWhen the source is \"GROUP\", \"LEADER\" or \"MEMBER\", it's coupled to the group, otherwise it's coupled to the vehicle and the source is changed to \"VEHICLE\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerAttachVehicle",
              "snippet": "triggerAttachVehicle ${2:objects}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation. If false dynamically disabled entities will not be activated by unit presence",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerDynamicSimulation",
              "snippet": "triggerDynamicSimulation ${2:trigger}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger statements in the form [cond, activ, desactiv]. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerStatements",
              "snippet": "triggerStatements ${1:trigger}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger text.\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerText",
              "snippet": "triggerText ${1:trigger}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger timeout in the form [min, mid, max, interruptable].\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerTimeout",
              "snippet": "triggerTimeout ${1:trigger}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger timeout or -1 if countdown is not in progress. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerTimeoutCurrent",
              "snippet": "triggerTimeoutCurrent ${1:trigger}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns trigger type (see setTriggerType). \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/triggerType",
              "snippet": "triggerType ${1:trigger}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "true",
              "description": "Always true",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/true"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block. The structured exception block has the following form:\n try //begin of try-catch block \n  { //block, that can throw exception } \n catch\n  { //block, that process an exception. Exception is described in _exception variable };",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/try",
              "snippet": "try ${1:code}$0"
            },
            {
              "leftLabel": "args ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block. The structured exception block has the following form:\n try //begin of try-catch block \n  { //block, that can throw exception } \n catch\n  { //block, that process an exception. Exception is described in _exception variable };",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/try",
              "snippet": "try ${2:code}$0"
            },
            {
              "leftLabel": "(Boolean, Nothing) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if a turret is local.  \nSome info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretLocal",
              "snippet": "turretLocal ${2:turretPath}$0"
            },
            {
              "leftLabel": "(Number) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns id of the owner of the turret. Server only. Returns 0 on non-server and SP. \nSome info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle. A vehicle can have one owner while turrets have different owners.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretOwner",
              "snippet": "turretOwner ${2:turretPath}$0"
            },
            {
              "leftLabel": "(Object) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57.135045",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/turretUnit",
              "snippet": "turretUnit ${2:turretpath}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvAdd",
              "snippet": "tvAdd ${1:[${2:idc}, ${3:pathParent}, ${4:text}]}$0"
            },
            {
              "leftLabel": "(Number) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvAdd",
              "snippet": "tvAdd ${2:[${3:pathParent}, ${4:text}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from Tree View with given idc.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvClear",
              "snippet": "tvClear ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes all items from Tree View with given idc.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvClear",
              "snippet": "tvClear ${1:control}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapse",
              "snippet": "tvCollapse ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapse",
              "snippet": "tvCollapse ${2:path}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapses all tree items for the given Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapseAll",
              "snippet": "tvCollapseAll ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Collapses all tree items for the given Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCollapseAll",
              "snippet": "tvCollapseAll ${1:control}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCount",
              "snippet": "tvCount ${1:[${2:idc}, ${3:[path]}]}$0"
            },
            {
              "leftLabel": "(Number) = _ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCount",
              "snippet": "tvCount ${2:[path]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCurSel",
              "snippet": "tvCurSel ${1:idc}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns path to currently selected item. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvCurSel",
              "snippet": "tvCurSel ${1:control}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns string data from item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvData",
              "snippet": "tvData ${1:[${2:idc}, ${3:[path]}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns string data from item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvData",
              "snippet": "tvData ${2:[path]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvDelete",
              "snippet": "tvDelete ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvDelete",
              "snippet": "tvDelete ${2:path}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpand",
              "snippet": "tvExpand ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpand",
              "snippet": "tvExpand ${2:path}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Expands all tree items for the given Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpandAll",
              "snippet": "tvExpandAll ${1:idc}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Expands all tree items for the given Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvExpandAll",
              "snippet": "tvExpandAll ${1:control}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvPicture",
              "snippet": "tvPicture ${1:[${2:idc}, ${3:[path]}]}$0"
            },
            {
              "leftLabel": "(String) = _ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvPicture",
              "snippet": "tvPicture ${2:[path]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets text color on given Tree View Item",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetColor",
              "snippet": "tvSetColor ${1:[${2:idc}, ${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets text color on given Tree View Item",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetColor",
              "snippet": "tvSetColor [${2:path}, ${3:color}]$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetCurSel",
              "snippet": "tvSetCurSel ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetCurSel",
              "snippet": "tvSetCurSel ${2:path}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetData",
              "snippet": "tvSetData [${2:idc}, ${3:[path]}, ${4:data}]$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets string data to item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetData",
              "snippet": "tvSetData ${2:[ [path], data]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPicture",
              "snippet": "tvSetPicture ${1:[${2:idc}, ${3:path}, ${4:name}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPicture",
              "snippet": "tvSetPicture ${2:[${3:path}, ${4:name}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColor",
              "snippet": "tvSetPictureColor [${1:idc}, ${2:path}, ${3:color}]$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColor",
              "snippet": "tvSetPictureColor [${2:path}, ${3:color}]$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of left picture of a tree item defined by path when item is disabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColorDisabled",
              "snippet": "tvSetPictureColorDisabled ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the left picture of a tree item defined by path when item is selected",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureColorSelected",
              "snippet": "tvSetPictureColorSelected ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets right picture on the tree view item defined by path",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRight",
              "snippet": "tvSetPictureRight ${1:[${2:idc}, ${3:path}, ${4:name}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets right picture on the tree view item defined by path",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRight",
              "snippet": "tvSetPictureRight ${2:[${3:path}, ${4:name}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets color of the right picture on the tree view item defined by path",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColor",
              "snippet": "tvSetPictureRightColor ${1:[${2:idc}, ${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets color of the right picture on the tree view item defined by path",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColor",
              "snippet": "tvSetPictureRightColor ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the right picture of a tree item defined by path when item is disabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColorDisabled",
              "snippet": "tvSetPictureRightColorDisabled ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the color of the right picture of a tree item defined by path when item is selected",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetPictureRightColorSelected",
              "snippet": "tvSetPictureRightColorSelected ${2:[${3:path}, ${4:color}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetText",
              "snippet": "tvSetText ${1:[${2:idc}, ${3:path}, ${4:text}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets string text to item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetText",
              "snippet": "tvSetText ${2:[${3:path}, ${4:text}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the tooltip text associated with the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetTooltip",
              "snippet": "tvSetTooltip ${1:[${2:idc}, ${3:path}, ${4:text}]}$0"
            },
            {
              "leftLabel": "ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the tooltip text associated with the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetTooltip",
              "snippet": "tvSetTooltip ${2:[${3:path}, ${4:text}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetValue",
              "snippet": "tvSetValue ${1:[${2:idc}, ${3:[path]}, ${4:val}]}$0"
            },
            {
              "leftLabel": "_ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSetValue",
              "snippet": "tvSetValue ${2:[ [path], val]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.\n\nParam reversed is optional.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSort",
              "snippet": "tvSort ${2:[${3:path}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.\n\nParam reversed is optional.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSort",
              "snippet": "tvSort ${1:[${2:idc}, ${3:path}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSortByValue",
              "snippet": "tvSortByValue ${2:[${3:path}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvSortByValue",
              "snippet": "tvSortByValue ${1:[${2:idc}, ${3:path}, ${4:reversed}]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvText",
              "snippet": "tvText ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "(String) = control ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvText",
              "snippet": "tvText ${2:path}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the tooltip text associated with the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvTooltip",
              "snippet": "tvTooltip ${1:[${2:idc}, ${3:path}]}$0"
            },
            {
              "leftLabel": "(String) = ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the tooltip text associated with the specified tree view path.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvTooltip",
              "snippet": "tvTooltip ${2:path}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvValue",
              "snippet": "tvValue ${1:[${2:idc}, ${3:[path]}]}$0"
            },
            {
              "leftLabel": "(Number) = _ctrl ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/tvValue",
              "snippet": "tvValue ${2:[path]}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a string of a location's class name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/type",
              "snippet": "type ${1:location}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the data type of an expression. \n\nThe type is returned as on of the following all-uppercase strings:\n \"ARRAY\"\n \"BOOL\"\n \"CODE\"\n \"CONFIG\"\n \"CONTROL\"\n \"DISPLAY\"\n \"GROUP\"\n \"LOCATION\"\n \"OBJECT\"\n \"SCALAR\"\n \"SCRIPT\"\n \"SIDE\"\n \"STRING\"\n \"TEXT\"\n \"TEAM_MEMBER\"\n \"NAMESPACE\"\nThey represent the available data types in ArmA.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/typeName",
              "snippet": "typeName ${1:anything}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the config class name of given object or \"\" if object doesn't have config class.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/typeOf",
              "snippet": "typeOf ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Object, String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with current operator of UAV and his vehicle role in UAV.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/UAVControl",
              "snippet": "UAVControl ${1:uav}$0"
            },
            {
              "leftLabel": "(Namespace) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "uiNamespace",
              "description": "Returns the global namespace attached to user interface.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uiNamespace"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uiSleep",
              "snippet": "uiSleep ${1:delay}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassign curator (will destroy both sides of connection).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignCurator",
              "snippet": "unassignCurator ${1:curatorObj}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignItem",
              "snippet": "unassignItem ${2:item}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam \"MAIN\".",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignTeam",
              "snippet": "unassignTeam ${1:vehicleName}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit. If the unit is currently in that vehicle, the group leader will issue an order to disembark.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unassignVehicle",
              "snippet": "unassignVehicle ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return whether object is fully underwater. From Arma 3 v1.66, this also works for units.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/underwater",
              "snippet": "underwater ${1:object}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniform",
              "snippet": "uniform ${1:unit}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a cargo container of a unit's uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformContainer",
              "snippet": "uniformContainer ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all items (of any kind, even weapons) from uniform.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformItems",
              "snippet": "uniformItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all magazines from uniform of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/uniformMagazines",
              "snippet": "uniformMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns list with addons the unit belongs to.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAddons",
              "snippet": "unitAddons ${1:className}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAimPosition",
              "snippet": "unitAimPosition ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitAimPositionVisual",
              "snippet": "unitAimPositionVisual ${1:unit}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns unit's backpack",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitBackpack",
              "snippet": "unitBackpack ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the unit type is UAV - coresponding to transport param \"isUAV\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitIsUAV",
              "snippet": "unitIsUAV ${1:unit}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return the unit position rules.\n\nThe return value is always \"Auto\" unless the unit has gotten a setUnitPos command. In that case the value is the last stance the unit was ordered to.\nAvailable modes are listed at setUnitPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitPos",
              "snippet": "unitPos ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitReady",
              "snippet": "unitReady ${1:unitName}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns recoil coefficient of a soldier.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitRecoilCoefficient",
              "snippet": "unitRecoilCoefficient ${1:soldier}$0"
            },
            {
              "leftLabel": "(Array, Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with all the units in the group or group of the unit.For a destroyed object an empty array is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/units",
              "snippet": "units ${1:groupOrUnit}$0"
            },
            {
              "leftLabel": "(Array, Object) = units ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns units in group/array below given height Above The Land (ATL). Current unit height ATL could be found with \n_height = (getPosATL _unit) select 2;",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unitsBelowHeight",
              "snippet": "unitsBelowHeight ${2:height}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unlinkItem",
              "snippet": "unlinkItem ${2:item}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unlock the given achievement.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unlockAchievement",
              "snippet": "unlockAchievement ${1:name}$0"
            },
            {
              "leftLabel": "(Boolean) = teamMember ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unregister a task type.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/unregisterTask",
              "snippet": "unregisterTask ${2:name}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateDrawIcon",
              "snippet": "updateDrawIcon ${2:[object,string identifier,color,offset,width,height,maintain size?,angle,shadow]}$0"
            },
            {
              "leftLabel": "map ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateMenuItem",
              "snippet": "updateMenuItem ${2:[menu item index,text,command]}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Update the editor object tree.\n\n\n\n\n i\n\n  Some Old Editor Command",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/updateObjectTree",
              "snippet": "updateObjectTree ${1:map}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Enable the new AI driving, used to test the old and new AI driving.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/useAISteeringComponent",
              "snippet": "useAISteeringComponent ${1:state}$0"
            },
            {
              "leftLabel": "soldier ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/useAudioTimeForMoves",
              "snippet": "useAudioTimeForMoves ${2:toggle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "userInputDisabled",
              "description": "Returns true if user input is disabled",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/userInputDisabled"
            },
            {
              "leftLabel": "(Array) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Adds two 3D vectors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorAdd",
              "snippet": "vectorAdd ${2:vector2}$0"
            },
            {
              "leftLabel": "(Number) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cosine of angle between two 3D vectors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorCos",
              "snippet": "vectorCos ${2:vector2}$0"
            },
            {
              "leftLabel": "(Array) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Cross product of two 3D vectors. \nIn layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain surfaceNormal). To invert direction of the normal, swap arguments around.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorCrossProduct",
              "snippet": "vectorCrossProduct ${2:vector2}$0"
            },
            {
              "leftLabel": "(Array) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Subtracts one 3D vector from another. (vector1 - vector2)",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDiff",
              "snippet": "vectorDiff ${2:vector2}$0"
            },
            {
              "leftLabel": "(Array, Vector) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object's normalized direction vector in world space ([x,y,z]). \n A unit facing North would return [0,1,0]\n A unit facing East would return [1,0,0]\n A unit facing South would return [0,-1,0]\n A unit facing West would return [-1,0,0]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDir",
              "snippet": "vectorDir ${1:objectName}$0"
            },
            {
              "leftLabel": "(Array, Vector) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope. \n A unit facing North would return [0,1,0]\n A unit facing East would return [1,0,0]\n A unit facing South would return [0,-1,0]\n A unit facing West would return [-1,0,0]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDirVisual",
              "snippet": "vectorDirVisual ${1:objectName}$0"
            },
            {
              "leftLabel": "(Number) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Distance between two 3D vectors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDistance",
              "snippet": "vectorDistance ${2:vector2}$0"
            },
            {
              "leftLabel": "(Number) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Squared distance between two 3D vectors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDistanceSqr",
              "snippet": "vectorDistanceSqr ${2:vector2}$0"
            },
            {
              "leftLabel": "(Number) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Dot product of two 3D vectors.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorDotProduct",
              "snippet": "vectorDotProduct ${2:vector2}$0"
            },
            {
              "leftLabel": "(Array) = vector1 ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized between given 2 points. To get a normal vector use vectorDiff.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorFromTo",
              "snippet": "vectorFromTo ${2:vector2}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Magnitude of a 3D vector.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMagnitude",
              "snippet": "vectorMagnitude ${1:vector}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Squared magnitude of a 3D vector.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMagnitudeSqr",
              "snippet": "vectorMagnitudeSqr ${1:vector}$0"
            },
            {
              "leftLabel": "(Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts vector direction from model to world space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorModelToWorld",
              "snippet": "vectorModelToWorld ${2:modelDir}$0"
            },
            {
              "leftLabel": "(Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts vector from model to world space in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorModelToWorldVisual",
              "snippet": "vectorModelToWorldVisual ${2:modelDir}$0"
            },
            {
              "leftLabel": "(Array) = vector ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Multiplies 3D vector by a scalar.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorMultiply",
              "snippet": "vectorMultiply ${2:scalar}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorNormalized",
              "snippet": "vectorNormalized ${1:vector}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object's up vector in world Position coordinates ( [x, y, z] ).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorUp",
              "snippet": "vectorUp ${1:objectName}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorUpVisual",
              "snippet": "vectorUpVisual ${1:objectName}$0"
            },
            {
              "leftLabel": "(Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts vector direction from world to model space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorWorldToModel",
              "snippet": "vectorWorldToModel ${2:worldDir}$0"
            },
            {
              "leftLabel": "(Array) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts vector direction from world to model space in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vectorWorldToModelVisual",
              "snippet": "vectorWorldToModelVisual ${2:worldDir}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use objectParent",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicle",
              "snippet": "vehicle ${1:unitName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if the vehicle has enabled transporting other vehicles or not.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleCargoEnabled",
              "snippet": "vehicleCargoEnabled ${1:vehicle}$0"
            },
            {
              "leftLabel": "vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)\n\nNote: Object parameter must be a vehicle, not a player.\nNote: If you are in a crew seat (i.e. driver, gunner or commander), then it will include that role in the chat name output (Eg: Driver (you_name): \"Message\").",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleChat",
              "snippet": "vehicleChat ${2:chatText}$0"
            },
            {
              "leftLabel": "unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).\nNote:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleRadio",
              "snippet": "vehicleRadio ${2:radioName}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets whether the vehicle can acquire targets via datalink from the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReceiveRemoteTargets",
              "snippet": "vehicleReceiveRemoteTargets ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets whether the vehicle shares its own position via datalink with the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReportOwnPosition",
              "snippet": "vehicleReportOwnPosition ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets whether the vehicle shares acquired targets via datalink with the Side center.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleReportRemoteTargets",
              "snippet": "vehicleReportRemoteTargets ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "vehicles",
              "description": "Returns an array of all vehicles available to current client. This command returns both empty and crewed vehicles but not soldiers. It will also return \"WeaponHolderSimulated\" of dead bodies (weapon on the ground). Vehicles created with createVehicleLocal will only be returned on the client that created them.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicles"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the name of the variable which contains a primary editor reference to this object. This is the variable given in the Insert Unit dialog / name field, in the editor. It can be changed using setVehicleVarName. \nIf object refers to a vehicle that wasn't given a name in the editor, the return value is an empty string, \"\".\nSince it is possible to setVehicleVarName individually on each PC, the value of vehicleVarName returned will be local to the PC on which command is executed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vehicleVarName",
              "snippet": "vehicleVarName ${1:object}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Return velocity (speed vector) of Unit as an array with format [x, y, z].  Units are in metres per second.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/velocity",
              "snippet": "velocity ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/velocityModelSpace",
              "snippet": "velocityModelSpace ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/verifySignature",
              "snippet": "verifySignature ${1:filename}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns name of vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vest",
              "snippet": "vest ${1:unit}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns a cargo container of a unit's vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestContainer",
              "snippet": "vestContainer ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all items (of any kind, even weapons) from vest.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestItems",
              "snippet": "vestItems ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all magazines from vest of the given unit.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/vestMagazines",
              "snippet": "vestMagazines ${1:unit}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "viewDistance",
              "description": "Returns the rendering distance.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/viewDistance"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "visibleCompass",
              "description": "Checks if the player has compass opened and visible",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleCompass"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "visibleGPS",
              "description": "Checks if the player has GPS receiver opened and visible",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleGPS"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "visibleMap",
              "description": "Return true if the main map is shown (active).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleMap"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visiblePosition",
              "snippet": "visiblePosition ${1:object}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visiblePositionASL",
              "snippet": "visiblePositionASL ${1:object}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "visibleScoretable",
              "description": "Checks whether the score table is visible.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleScoretable"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "visibleWatch",
              "description": "Checks if the player has watch opened and visible",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/visibleWatch"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Suspends execution of function or SQF based script until given condition is satisfied. This command will loop and call the code inside {} mostly every frame (depends on complexity of condition and overall engine load) until the code returns true. The execution of the rest of the script therefore will be suspended until waitUntil  completes. \nIf the very first execution of the code returns true the command will exit immediately, therefore it will not produce any \"Suspending not allowed in this context\" error when used inside non-scheduled script. For all other uses it must be executed in environment that allows suspension (canSuspend), such as spawned or execVMed code.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waitUntil",
              "snippet": "waitUntil ${1:condition}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "waves",
              "description": "Return waves value.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waves"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the object attached to the waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachedObject",
              "snippet": "waypointAttachedObject ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Object) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the vehicle attached to the waypoint.\nA vehicle can be attached to a waypoint by\ncreating the waypoint on top of the vehicle (in the editor)\nusing waypointAttachVehicle",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachedVehicle",
              "snippet": "waypointAttachedVehicle ${1:waypoint}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches a static object via it's numeric ID to the given waypoint.\nThe alternative syntax is (at least) available since Arma 2.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachObject",
              "snippet": "waypointAttachObject ${2:objectID}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches a static object via it's numeric ID to the given waypoint.\nThe alternative syntax is (at least) available since Arma 2.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachObject",
              "snippet": "waypointAttachObject ${2:object}$0"
            },
            {
              "leftLabel": "waypoint ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Attaches a Unit to the given Waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointAttachVehicle",
              "snippet": "waypointAttachVehicle ${2:vehicleName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint behavior.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointBehaviour",
              "snippet": "waypointBehaviour ${1:waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint combat mode.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointCombatMode",
              "snippet": "waypointCombatMode ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the radius around the waypoint where the waypoint is completed.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointCompletionRadius",
              "snippet": "waypointCompletionRadius ${1:waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint description.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointDescription",
              "snippet": "waypointDescription ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns true if the waypoint behavior is forced.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointForceBehaviour",
              "snippet": "waypointForceBehaviour ${1:waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint formation.\n\nPossible values are: \n \"NO CHANGE\"\n \"COLUMN\"\n \"STAG COLUMN\"\n \"WEDGE\"\n \"ECH LEFT\"\n \"ECH RIGHT\"\n \"VEE\"\n \"LINE\"\n \"FILE\"\n \"DIAMOND\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointFormation",
              "snippet": "waypointFormation ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the house position assigned to the waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointHousePosition",
              "snippet": "waypointHousePosition ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointLoiterRadius",
              "snippet": "waypointLoiterRadius ${1:Waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointLoiterType",
              "snippet": "waypointLoiterType ${1:Waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint name.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointName",
              "snippet": "waypointName ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array, Position) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get Waypoint's  Position. Note: This function is identical to getWPPos.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointPosition",
              "snippet": "waypointPosition ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array, Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array of waypoints for the specified unit/group.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypoints",
              "snippet": "waypoints ${1:groupName}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint script.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointScript",
              "snippet": "waypointScript ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Checks if the UAV has waypoints enabled.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointsEnabledUAV",
              "snippet": "waypointsEnabledUAV ${1:uav}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint show/hide status.\n\nPossible values are:\n \"NEVER\" - never show it\n \"EASY\" - show only in cadet mode\n \"ALWAYS\" - always show it\n \"ERROR\" - when set to any different string",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointShow",
              "snippet": "waypointShow ${1:waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint speed.\n\nPossible values are:\n \"UNCHANGED\"\n \"LIMITED\"\n \"NORMAL\"\n \"FULL\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointSpeed",
              "snippet": "waypointSpeed ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint statements.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointStatements",
              "snippet": "waypointStatements ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint timeout values.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointTimeout",
              "snippet": "waypointTimeout ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the current waypoint timeout or -1 if countdown is not in progress.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointTimeoutCurrent",
              "snippet": "waypointTimeoutCurrent ${1:waypoint}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Gets the waypoint type.\n\nType can be:\n \"MOVE\"\n \"DESTROY\"\n \"GETIN\"\n \"SAD\"\n \"JOIN\"\n \"LEADER\"\n \"GETOUT\"\n \"CYCLE\"\n \"LOAD\"\n \"UNLOAD\"\n \"TR UNLOAD\"\n \"HOLD\"\n \"SENTRY\"\n \"GUARD\"\n \"TALK\"\n \"SCRIPTED\"\n \"SUPPORT\"\n \"GETIN NEAREST\"\n \"DISMISS\"\n \"AND\"\n \"OR\"\n\nMore details at Waypoint types.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointType",
              "snippet": "waypointType ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the visibility of the waypoint.\n\nReturns 0 (Number) for a non valid waypoint.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/waypointVisible",
              "snippet": "waypointVisible ${1:waypoint}$0"
            },
            {
              "leftLabel": "(Array) = unit ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with all items linked to a given weapon.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponAccessories",
              "snippet": "weaponAccessories ${2:weapon}$0"
            },
            {
              "leftLabel": "(Array) = container ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array with all items assigned to the given weapon in given cargo container.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponAccessoriesCargo",
              "snippet": "weaponAccessoriesCargo ${2:[${3:weaponId}, ${4:creatorId}]}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Get array with weapons from ammo box (or any general weapon holder container).",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponCargo",
              "snippet": "weaponCargo ${1:box}$0"
            },
            {
              "leftLabel": "(Array, Vector) = vehicleName ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the direction that the vehicle weapon is aiming in.\n\nFor addons the weapon name must be an entry in CfgWeapons.\n\nReturns an array in format [x, y, z]",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponDirection",
              "snippet": "weaponDirection ${2:weaponName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns current rate of how much the weapon view is distorted because of quick aiming",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponInertia",
              "snippet": "weaponInertia ${1:unit}$0"
            },
            {
              "leftLabel": "(Boolean) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "True if given soldier's weapon is lowered.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponLowered",
              "snippet": "weaponLowered ${1:unit}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns array of names of all Unit's weapons.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weapons",
              "snippet": "weapons ${1:vehicleName}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.\nSince Arma 3 v1.21.124406 it is possible to query weapon holders and ammo crates with this command. If weapon has no magazine, an empty array [] is returned instead of magazine info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsItems",
              "snippet": "weaponsItems ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsItemsCargo",
              "snippet": "weaponsItemsCargo ${1:vehicle}$0"
            },
            {
              "leftLabel": "(Array, String, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the currently selected weapon state for unit or vehicle. \nSince Arma 3 v1.69.140397 this command has been improved and extended:\n It is now possible to query any weapon of a vehicle without the need to place a weapon operator first, provided the weapon or muzzle is specified in optional param. By default a vehicle has no weapons selected, so querying currently selected weapon returns no weapon, unless weapon is specified.\n Driver turret can now be accessed as well with turret path [-1].\n Muzzle name is supported as well as weapon name. Weapon search gets priority, but if there is no weapon with given name, the muzzles will be searched.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponState",
              "snippet": "weaponState ${1:unit}$0"
            },
            {
              "leftLabel": "(Array, String, Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the currently selected weapon state for unit or vehicle. \nSince Arma 3 v1.69.140397 this command has been improved and extended:\n It is now possible to query any weapon of a vehicle without the need to place a weapon operator first, provided the weapon or muzzle is specified in optional param. By default a vehicle has no weapons selected, so querying currently selected weapon returns no weapon, unless weapon is specified.\n Driver turret can now be accessed as well with turret path [-1].\n Muzzle name is supported as well as weapon name. Weapon search gets priority, but if there is no weapon with given name, the muzzles will be searched.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponState",
              "snippet": "weaponState ${1:[${2:vehicle}, ${3:turretPath}, ${4:${6:weapon}}]}$0"
            },
            {
              "leftLabel": "(Array, String) = vehicle ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns all weapons of given turret. Use turret path [-1] for driver's turret.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weaponsTurret",
              "snippet": "weaponsTurret ${2:turretPath}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns weight of RTD helicopter.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/weightRTD",
              "snippet": "weightRTD ${1:helicopter}$0"
            },
            {
              "leftLabel": "(Side) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "west",
              "description": "West side.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/west"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns the unlocalized text value of an object's side / a group's side or a side as:\n\n east, opfor - \"East\" \n west, blufor - \"West\"\n resistance, independent - \"Resistance\"\n civilian - \"Civilian\"\n sideUnknown - \"Unknown\"\n sideEnemy - \"Unknown\"\n sideFriendly - \"Unknown\"\n sideLogic - \"Unknown\"\n sideEmpty - \"Unknown\"\n sideAmbientLife - \"Unknown\"",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/WFSideText",
              "snippet": "WFSideText ${1:param}$0"
            },
            {
              "leftLabel": "(While Type) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Repeats Code while condition is true. A part of while do construct.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/while",
              "snippet": "while ${1:condition}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "wind",
              "description": "Returns the current wind vector (in m/s) as array [x, z, y].",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/wind"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "windDir",
              "description": "Returns the current wind azimuth.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/windDir"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "windStr",
              "description": "Returns the current wind strength.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/windStr"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Returns force produced by wings.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/wingsForcesRTD",
              "snippet": "wingsForcesRTD ${1:RTD_helicopter}$0"
            },
            {
              "leftLabel": "",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Creates a With Type that is used inside a do construct in order to execute code inside a given namespace. \n\n\n\n\n \n\n  when used in a do-construct in scripts with allowed suspension, an unexpected namespace switch could happen (see note below)\n\nNOTE for the reasons unknown, namespace switching might unexpectedly occur inside some scopes (for, if, try, call) started in scheduled scripts (canSuspend true) after small suspension if with was not the main scope. For example: \n[] spawn\n{\n\twith uiNamespace do \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [false, true] <-- switching\n\t\t};\n\t};\n};\nHowever if with used in parent scope, everything works correctly:\nwith uiNamespace do\n{\n\t[] spawn \n\t{\n\t\tfor \"_i\" from 1 to 1 do \n\t\t{\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false]\n\t\t\tsleep 0.05; //<-- small suspension\n\t\t\tsystemChat str [\n\t\t\t\tcurrentNamespace isEqualTo uiNamespace, \n\t\t\t\tcurrentNamespace isEqualTo missionNamespace\n\t\t\t]; \n\t\t\t// result [true, false] <-- NO switching\n\t\t};\n\t};\n};\nTo eliminate possibility of error you can also use setVariable or getVariable with desired Namespace, which is also scheduled environment save.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/with",
              "snippet": "with ${1:namespace}$0"
            },
            {
              "leftLabel": "(String) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "worldName",
              "description": "Return the name of the currently loaded world.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldName"
            },
            {
              "leftLabel": "(Number) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "text": "worldSize",
              "description": "Returns config size of the current world.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldSize"
            },
            {
              "leftLabel": "(Array, Position) = model ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from world space to object model space.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToModel",
              "snippet": "worldToModel ${2:position}$0"
            },
            {
              "leftLabel": "(Array, Position) = object ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position from world space to object model space in render time scope.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToModelVisual",
              "snippet": "worldToModelVisual ${2:worldPosition}$0"
            },
            {
              "leftLabel": "(Array) = ",
              "type": "function",
              "rightLabel": "SQF Command",
              "description": "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.",
              "descriptionMoreURL": "http://community.bistudio.com/wiki/worldToScreen",
              "snippet": "worldToScreen ${1:position}$0"
            }
          ]
        }
      }
    }
  }
}